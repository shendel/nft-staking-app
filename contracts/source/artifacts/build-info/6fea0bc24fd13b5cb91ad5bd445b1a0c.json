{
	"id": "6fea0bc24fd13b5cb91ad5bd445b1a0c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"source/Marketplace.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.1;\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Permit.sol)\r\n\r\n/**\r\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    function safePermit(\r\n        IERC20Permit token,\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal {\r\n        uint256 nonceBefore = token.nonces(owner);\r\n        token.permit(owner, spender, value, deadline, v, r, s);\r\n        uint256 nonceAfter = token.nonces(owner);\r\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n\r\n\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Down, // Toward negative infinity\r\n        Up, // Toward infinity\r\n        Zero // Toward zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds up instead\r\n     * of rounding down.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\r\n     * with further edits by Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            require(denominator > prod1, \"Math: mulDiv overflow\");\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\r\n            // See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\r\n            uint256 twos = denominator & (~denominator + 1);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\r\n            // in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\ncontract Marketplace is Ownable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    event Buy(address owner, address buyer, uint256 tokenId,  uint256 price);\r\n    event BuyWithERC20(address owner, address buyer, uint256 tokenId, address erc20, uint256 price);\r\n    event PutUpForSale(address owner, uint256 tokenId, uint256 price);\r\n    event PutUpForSaleWithERC20(address owner, uint256 tokenId, address erc20, uint256 price);\r\n    event WithdrawFromSale(address owner, uint256 tokenId);\r\n    event WithdrawBank(address to, uint256 amount);\r\n    \r\n    struct SelledNFT {\r\n        uint256 tokenId;\r\n        address seller;\r\n        uint256 price;\r\n        address erc20;      // Если указано - продается за токены\r\n    }\r\n\r\n    IERC721 public marketNft;\r\n\r\n    uint public version = 1;\r\n\r\n    uint private _tradeFee = 0;\r\n\r\n\r\n    mapping(uint256 => bool) private _isTokensAtSale;\r\n    mapping(uint256 => SelledNFT) private _tokensAtSale;\r\n\r\n    mapping(address => bool) private _blackList;\r\n\r\n    address[] private _allowedERC20;\r\n\r\n    uint256[] private _tokensIdsAtSale;\r\n\r\n    function __addTokenToSale(uint256 _tokenId) internal  {\r\n        _tokensIdsAtSale.push(_tokenId);\r\n    }\r\n    function __delTokenForSale(uint256 _tokenId) internal  {\r\n        if (_tokensIdsAtSale[_tokensIdsAtSale.length - 1] == _tokenId) {\r\n            _tokensIdsAtSale.pop();\r\n            return;\r\n        }\r\n        bool hasItem = false;\r\n        uint256 needIndex;\r\n        for(uint256 i = 0; i < _tokensIdsAtSale.length; i++) {\r\n            if (_tokensIdsAtSale[i] == _tokenId) {\r\n                hasItem = true;\r\n                needIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        if (hasItem) {\r\n            _tokensIdsAtSale[needIndex] = _tokensIdsAtSale[_tokensIdsAtSale.length-1];\r\n            _tokensIdsAtSale.pop();\r\n        }\r\n    }\r\n\r\n    constructor(\r\n        address _nft,\r\n        uint __tradeFee,\r\n        address[] memory __allowedERC20\r\n    ) {\r\n        marketNft = IERC721(_nft);\r\n        _tradeFee = __tradeFee;\r\n        _allowedERC20 = __allowedERC20;\r\n    }\r\n\r\n    function addBlackList(address user) public onlyOwner {\r\n        _blackList[user] = true;\r\n    }\r\n    function removeBlackList(address user) public onlyOwner {\r\n        _blackList[user] = false;\r\n    }\r\n    function isBlacklisted(address user) public view returns(bool) {\r\n        return _blackList[user];\r\n    }\r\n\r\n    function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {\r\n        _allowedERC20 = newAllowedERC20;\r\n    }\r\n    function getAllowedERC20() public view returns(address[] memory) {\r\n        return _allowedERC20;\r\n    }\r\n    function isAllowedERC20(address erc20) public view returns (bool) {\r\n        for(uint i=0; i<_allowedERC20.length;i++) {\r\n            if (erc20 == _allowedERC20[i]) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function bankAmount() public view returns(uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function withdrawBank() public onlyOwner {\r\n        uint256 amount = address(this).balance;\r\n        payable(msg.sender).transfer(amount);\r\n        emit WithdrawBank(msg.sender, amount);\r\n    }\r\n\r\n    function bankAmountERC20(address erc20) public view returns(uint256) {\r\n        IERC20 token = IERC20(erc20);\r\n        return token.balanceOf(address(this));\r\n    }\r\n    function withdrawBankERC20(address erc20) public onlyOwner {\r\n        IERC20 token = IERC20(erc20);\r\n        uint256 balance = token.balanceOf(address(this));\r\n        token.transfer(owner(), balance);\r\n    }\r\n\r\n    function getTradeFee() public view returns (uint) {\r\n        return _tradeFee;\r\n    }\r\n    function setTradeFee(uint _newTradeFee) public onlyOwner {\r\n        _tradeFee = _newTradeFee;\r\n    }\r\n\r\n\r\n    function _clearSellToken(uint256 _tokenId) private {\r\n        _tokensAtSale[_tokenId] = SelledNFT(0, address(0), 0, address(0));\r\n    }\r\n\r\n    function getMyTokensAtSale() external view returns (SelledNFT[] memory ret) {\r\n        return getUserTokensAtSale(msg.sender);\r\n    }\r\n\r\n    function getUserTokensAtSale(address seller)\r\n        public view\r\n        returns (SelledNFT[] memory ret)\r\n    {\r\n        /*\r\n        uint256 _counter = 0;\r\n        for (uint256 _tokenId = 0; _tokenId < MAX_SUPPLY; _tokenId++) {\r\n            if (_isTokensAtSale[_tokenId] && _tokensAtSale[_tokenId].seller == seller) {\r\n                _counter++;\r\n            }\r\n        }\r\n        \r\n        SelledNFT[] memory _ret = new SelledNFT[](_counter);\r\n        _counter = 0;\r\n\r\n        for (uint256 _tokenId = 0; _tokenId < MAX_SUPPLY; _tokenId++) {\r\n            if (_isTokensAtSale[_tokenId] && _tokensAtSale[_tokenId].seller == seller) {\r\n                SelledNFT memory _pushItem = SelledNFT(\r\n                    _tokenId,\r\n                    _tokensAtSale[_tokenId].uri,\r\n                    _tokensAtSale[_tokenId].seller,\r\n                    _tokensAtSale[_tokenId].price,\r\n                    _tokensAtSale[_tokenId].erc20\r\n                );\r\n                _ret[_counter] = _pushItem;\r\n                _counter++;\r\n            }\r\n        }\r\n\r\n        return _ret;\r\n        */\r\n    }\r\n\r\n    function getTokensAtSale()\r\n        external view\r\n        returns (SelledNFT[] memory ret)\r\n    {\r\n        SelledNFT[] memory _ret = new SelledNFT[](_tokensIdsAtSale.length);\r\n        for (uint256 i = 0; i < _tokensIdsAtSale.length; i++) {\r\n            uint256 _tokenId = _tokensIdsAtSale[i];\r\n            SelledNFT memory _pushItem = SelledNFT(\r\n                _tokenId,\r\n                _tokensAtSale[_tokenId].seller,\r\n                _tokensAtSale[_tokenId].price,\r\n                _tokensAtSale[_tokenId].erc20\r\n            );\r\n            _ret[i] = _pushItem;\r\n        }\r\n        return _ret;\r\n            /*\r\n        uint256 _counter = 0;\r\n        for (uint256 _tokenId = 0; _tokenId < MAX_SUPPLY; _tokenId++) {\r\n            if (_isTokensAtSale[_tokenId]) {\r\n                _counter++;\r\n            }\r\n        }\r\n        \r\n        SelledNFT[] memory _ret = new SelledNFT[](_counter);\r\n        _counter = 0;\r\n\r\n        for (uint256 _tokenId = 0; _tokenId < MAX_SUPPLY; _tokenId++) {\r\n            if (_isTokensAtSale[_tokenId]) {\r\n                SelledNFT memory _pushItem = SelledNFT(\r\n                    _tokenId,\r\n                    _tokensAtSale[_tokenId].uri,\r\n                    _tokensAtSale[_tokenId].seller,\r\n                    _tokensAtSale[_tokenId].price,\r\n                    _tokensAtSale[_tokenId].erc20\r\n                );\r\n                _ret[_counter] = _pushItem;\r\n                _counter++;\r\n            }\r\n        }\r\n\r\n        return _ret;\r\n        */\r\n    }\r\n\r\n    function buyNFTbyERC20(uint _tokenId)\r\n        public\r\n    {\r\n        require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\");\r\n        require(_tokensAtSale[_tokenId].erc20 != address(0), \"This token selled by Native coin\");\r\n\r\n        IERC20 payToken = IERC20(_tokensAtSale[_tokenId].erc20);\r\n        uint256 buyerBalance = payToken.balanceOf(msg.sender);\r\n        require(buyerBalance >= _tokensAtSale[_tokenId].price, \"You do not have enough tokens on your balance to pay\");\r\n        uint256 buyerAllowance = payToken.allowance(msg.sender, address(this));\r\n        require(buyerAllowance >= _tokensAtSale[_tokenId].price, \"You did not allow the contract to send the purchase amount\");\r\n        \r\n\r\n        uint256 amount = _tokensAtSale[_tokenId].price;\r\n        uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee);\r\n        if (_tokensAtSale[_tokenId].seller == owner()) feeAmount = 0;\r\n        uint256 amountWithFee = SafeMath.sub(amount, feeAmount);\r\n\r\n        payToken.safeTransferFrom(\r\n            address(msg.sender),\r\n            address(_tokensAtSale[_tokenId].seller),\r\n            amountWithFee\r\n        );\r\n        if (feeAmount > 0) {\r\n            payToken.safeTransferFrom(\r\n                address(msg.sender),\r\n                address(owner()),\r\n                feeAmount\r\n            );\r\n        }\r\n        marketNft.transferFrom(address(this), msg.sender, _tokenId);\r\n        _isTokensAtSale[_tokenId] = false;\r\n        _clearSellToken(_tokenId);\r\n\r\n        emit BuyWithERC20(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].erc20, _tokensAtSale[_tokenId].price);\r\n    }\r\n\r\n\r\n    function buyNFT(uint256 _tokenId)\r\n        public\r\n        payable\r\n    {\r\n        // check - token is on sale\r\n        require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\");\r\n        // check - price\r\n        require(msg.value >= _tokensAtSale[_tokenId].price, \"You have not paid enough for this item\");\r\n        // check this is not sell by ERC20\r\n        require(_tokensAtSale[_tokenId].erc20 == address(0), \"This token selled by ERC20\");\r\n        \r\n        uint256 amount = msg.value;\r\n        uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee);\r\n        if (_tokensAtSale[_tokenId].seller == owner()) feeAmount = 0;\r\n        uint256 amountWithFee = SafeMath.sub(amount, feeAmount);\r\n\r\n        payable(_tokensAtSale[_tokenId].seller).transfer(amountWithFee);\r\n        if (feeAmount > 0) {\r\n            payable(owner()).transfer(feeAmount);\r\n        }\r\n        \r\n        marketNft.transferFrom(address(this), msg.sender, _tokenId);\r\n        _isTokensAtSale[_tokenId] = false;\r\n\r\n        emit Buy(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].price);\r\n\r\n        _clearSellToken(_tokenId);\r\n    }\r\n\r\n    function sellNFT(\r\n        uint256 _tokenId,\r\n        uint256 price,\r\n        address _erc20\r\n    )\r\n        public\r\n    {\r\n        require(\r\n            marketNft.ownerOf(_tokenId) == msg.sender,\r\n            \"You don't own this token!\"\r\n        );\r\n        require(price > 0, \"Price must be greater than zero\");\r\n        if (_erc20 != address(0)) {\r\n            // Sell with ERC20\r\n            require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\");\r\n        }\r\n\r\n        _isTokensAtSale[_tokenId] = true;\r\n        _tokensAtSale[_tokenId] = SelledNFT(\r\n            _tokenId,\r\n            msg.sender,\r\n            price,\r\n            _erc20\r\n        );\r\n        marketNft.transferFrom(msg.sender, address(this), _tokenId);\r\n        if (_erc20 == address(0)) {\r\n            emit PutUpForSaleWithERC20(msg.sender, _tokenId, _erc20, price);\r\n        } else {\r\n            emit PutUpForSale(msg.sender, _tokenId, price);\r\n        }\r\n    }\r\n\r\n    function deSellNFT(uint256 _tokenId) public {\r\n        if(msg.sender != owner()) {\r\n            require(msg.sender == _tokensAtSale[_tokenId].seller, \"This is not your NFT\");\r\n        }\r\n\r\n        marketNft.transferFrom(address(this), msg.sender, _tokenId);\r\n\r\n        _isTokensAtSale[_tokenId] = false;        \r\n        _clearSellToken(_tokenId);\r\n        \r\n        emit WithdrawFromSale(msg.sender, _tokenId);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"source/Marketplace.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":38807:48212  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":38807:48212  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200521560dfa030fff76290ae44766e8ab104ba33e704b6b7fa9b6944c56d94a2264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200521560dfa030fff76290ae44766e8ab104ba33e704b6b7fa9b6944c56d94a2264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0x21 JUMP 0xD STATICCALL SUB 0xF SELFDESTRUCT PUSH23 0x290AE44766E8AB104BA33E704B6B7FA9B6944C56D94A22 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "38807:9405:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;38807:9405:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200521560dfa030fff76290ae44766e8ab104ba33e704b6b7fa9b6944c56d94a2264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0x21 JUMP 0xD STATICCALL SUB 0xF SELFDESTRUCT PUSH23 0x290AE44766E8AB104BA33E704B6B7FA9B6944C56D94A22 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "38807:9405:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200521560dfa030fff76290ae44766e8ab104ba33e704b6b7fa9b6944c56d94a2264736f6c63430008120033",
									".code": [
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x96592ed31474210ef6ef9b446daf8c9bca2a569d711a45c0002529c7193502c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ec1a996b870845a558032f6419c93b18eaca9ac9dd9d8e62a334808a3d56fa\",\"dweb:/ipfs/QmNtwb6CdJ9qoj3RpafnconLFRXnuw6BbJHjFMgV4dUXFb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x96592ed31474210ef6ef9b446daf8c9bca2a569d711a45c0002529c7193502c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ec1a996b870845a558032f6419c93b18eaca9ac9dd9d8e62a334808a3d56fa\",\"dweb:/ipfs/QmNtwb6CdJ9qoj3RpafnconLFRXnuw6BbJHjFMgV4dUXFb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x96592ed31474210ef6ef9b446daf8c9bca2a569d711a45c0002529c7193502c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ec1a996b870845a558032f6419c93b18eaca9ac9dd9d8e62a334808a3d56fa\",\"dweb:/ipfs/QmNtwb6CdJ9qoj3RpafnconLFRXnuw6BbJHjFMgV4dUXFb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x96592ed31474210ef6ef9b446daf8c9bca2a569d711a45c0002529c7193502c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ec1a996b870845a558032f6419c93b18eaca9ac9dd9d8e62a334808a3d56fa\",\"dweb:/ipfs/QmNtwb6CdJ9qoj3RpafnconLFRXnuw6BbJHjFMgV4dUXFb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x96592ed31474210ef6ef9b446daf8c9bca2a569d711a45c0002529c7193502c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ec1a996b870845a558032f6419c93b18eaca9ac9dd9d8e62a334808a3d56fa\",\"dweb:/ipfs/QmNtwb6CdJ9qoj3RpafnconLFRXnuw6BbJHjFMgV4dUXFb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x96592ed31474210ef6ef9b446daf8c9bca2a569d711a45c0002529c7193502c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ec1a996b870845a558032f6419c93b18eaca9ac9dd9d8e62a334808a3d56fa\",\"dweb:/ipfs/QmNtwb6CdJ9qoj3RpafnconLFRXnuw6BbJHjFMgV4dUXFb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Marketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "__tradeFee",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "__allowedERC20",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Buy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "BuyWithERC20",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "PutUpForSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "PutUpForSaleWithERC20",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawBank",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "WithdrawFromSale",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bankAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								}
							],
							"name": "bankAmountERC20",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNFT",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNFTbyERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "deSellNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllowedERC20",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMyTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "ret",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "ret",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTradeFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								}
							],
							"name": "getUserTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "ret",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								}
							],
							"name": "isAllowedERC20",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketNft",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_erc20",
									"type": "address"
								}
							],
							"name": "sellNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "newAllowedERC20",
									"type": "address[]"
								}
							],
							"name": "setAllowedERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newTradeFee",
									"type": "uint256"
								}
							],
							"name": "setTradeFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawBank",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								}
							],
							"name": "withdrawBankERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":48220:59162  contract Marketplace is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"source/Marketplace.sol\":49052:49053  1 */\n  0x01\n    /* \"source/Marketplace.sol\":49030:49053  uint public version = 1 */\n  0x02\n  sstore\n    /* \"source/Marketplace.sol\":49087:49088  0 */\n  0x00\n    /* \"source/Marketplace.sol\":49062:49088  uint private _tradeFee = 0 */\n  0x03\n  sstore\n    /* \"source/Marketplace.sol\":50123:50351  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"source/Marketplace.sol\":1740:1772  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"source/Marketplace.sol\":736:746  msg.sender */\n  caller\n    /* \"source/Marketplace.sol\":1740:1758  _transferOwnership */\n  tag_10\n    /* \"source/Marketplace.sol\":1740:1772  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"source/Marketplace.sol\":50244:50253  marketNft */\n  0x01\n    /* \"source/Marketplace.sol\":50244:50269  marketNft = IERC721(_nft) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup6\n  and\n  or\n  swap1\n  sstore\n    /* \"source/Marketplace.sol\":50280:50289  _tradeFee */\n  0x03\n    /* \"source/Marketplace.sol\":50280:50302  _tradeFee = __tradeFee */\n  dup3\n  swap1\n  sstore\n    /* \"source/Marketplace.sol\":50313:50343  _allowedERC20 = __allowedERC20 */\n  dup1\n  mload\n  tag_12\n  swap1\n    /* \"source/Marketplace.sol\":50313:50326  _allowedERC20 */\n  0x07\n  swap1\n    /* \"source/Marketplace.sol\":50313:50343  _allowedERC20 = __allowedERC20 */\n  0x20\n  dup5\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"source/Marketplace.sol\":50123:50351  constructor(... */\n  pop\n  pop\n  pop\n    /* \"source/Marketplace.sol\":48220:59162  contract Marketplace is Ownable {... */\n  jump(tag_26)\n    /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n  0x00\n    /* \"source/Marketplace.sol\":3379:3385  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/Marketplace.sol\":3396:3413  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"source/Marketplace.sol\":3379:3385  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n  swap1\n    /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"source/Marketplace.sol\":3349:3477  {... */\n  pop\n    /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"source/Marketplace.sol\":48220:59162  contract Marketplace is Ownable {... */\ntag_13:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_19\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  or\n  dup3\n  sstore\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  0x01\n  swap1\n  swap2\n  add\n  swap1\n  jump(tag_18)\ntag_19:\n  pop\n  tag_20\n  swap3\n  swap2\n  pop\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_22)\n    /* \"#utility.yul\":14:191   */\ntag_24:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_28:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_25:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:1603   */\ntag_3:\n    /* \"#utility.yul\":441:447   */\n  0x00\n    /* \"#utility.yul\":449:455   */\n  dup1\n    /* \"#utility.yul\":457:463   */\n  0x00\n    /* \"#utility.yul\":510:512   */\n  0x60\n    /* \"#utility.yul\":498:507   */\n  dup5\n    /* \"#utility.yul\":489:496   */\n  dup7\n    /* \"#utility.yul\":485:508   */\n  sub\n    /* \"#utility.yul\":481:513   */\n  slt\n    /* \"#utility.yul\":478:530   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":523:524   */\n  dup1\n    /* \"#utility.yul\":516:528   */\n  revert\n    /* \"#utility.yul\":478:530   */\ntag_31:\n    /* \"#utility.yul\":549:589   */\n  tag_32\n    /* \"#utility.yul\":579:588   */\n  dup5\n    /* \"#utility.yul\":549:589   */\n  tag_24\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":608:610   */\n  0x20\n    /* \"#utility.yul\":635:653   */\n  dup6\n  dup2\n  add\n    /* \"#utility.yul\":629:654   */\n  mload\n    /* \"#utility.yul\":698:700   */\n  0x40\n    /* \"#utility.yul\":683:701   */\n  dup8\n  add\n    /* \"#utility.yul\":677:702   */\n  mload\n    /* \"#utility.yul\":539:589   */\n  swap3\n  swap6\n  pop\n    /* \"#utility.yul\":629:654   */\n  swap4\n  pop\n    /* \"#utility.yul\":608:610   */\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":751:765   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":748:782   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":778:779   */\n  0x00\n    /* \"#utility.yul\":775:776   */\n  dup1\n    /* \"#utility.yul\":768:780   */\n  revert\n    /* \"#utility.yul\":748:782   */\ntag_33:\n    /* \"#utility.yul\":816:822   */\n  dup2\n    /* \"#utility.yul\":805:814   */\n  dup8\n    /* \"#utility.yul\":801:823   */\n  add\n    /* \"#utility.yul\":791:823   */\n  swap2\n  pop\n    /* \"#utility.yul\":861:868   */\n  dup8\n    /* \"#utility.yul\":854:858   */\n  0x1f\n    /* \"#utility.yul\":850:852   */\n  dup4\n    /* \"#utility.yul\":846:859   */\n  add\n    /* \"#utility.yul\":842:869   */\n  slt\n    /* \"#utility.yul\":832:887   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":883:884   */\n  0x00\n    /* \"#utility.yul\":880:881   */\n  dup1\n    /* \"#utility.yul\":873:885   */\n  revert\n    /* \"#utility.yul\":832:887   */\ntag_34:\n    /* \"#utility.yul\":912:914   */\n  dup2\n    /* \"#utility.yul\":906:915   */\n  mload\n    /* \"#utility.yul\":934:936   */\n  dup2\n    /* \"#utility.yul\":930:932   */\n  dup2\n    /* \"#utility.yul\":927:937   */\n  gt\n    /* \"#utility.yul\":924:960   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":940:958   */\n  tag_36\n  tag_25\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":986:988   */\n  dup1\n    /* \"#utility.yul\":983:984   */\n  0x05\n    /* \"#utility.yul\":979:989   */\n  shl\n    /* \"#utility.yul\":1018:1020   */\n  0x40\n    /* \"#utility.yul\":1012:1021   */\n  mload\n    /* \"#utility.yul\":1081:1083   */\n  0x1f\n    /* \"#utility.yul\":1077:1084   */\n  not\n    /* \"#utility.yul\":1072:1074   */\n  0x3f\n    /* \"#utility.yul\":1068:1070   */\n  dup4\n    /* \"#utility.yul\":1064:1075   */\n  add\n    /* \"#utility.yul\":1060:1085   */\n  and\n    /* \"#utility.yul\":1052:1058   */\n  dup2\n    /* \"#utility.yul\":1048:1086   */\n  add\n    /* \"#utility.yul\":1136:1142   */\n  dup2\n    /* \"#utility.yul\":1124:1134   */\n  dup2\n    /* \"#utility.yul\":1121:1143   */\n  lt\n    /* \"#utility.yul\":1116:1118   */\n  dup6\n    /* \"#utility.yul\":1104:1114   */\n  dup3\n    /* \"#utility.yul\":1101:1119   */\n  gt\n    /* \"#utility.yul\":1098:1144   */\n  or\n    /* \"#utility.yul\":1095:1167   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1147:1165   */\n  tag_38\n  tag_25\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1183:1185   */\n  0x40\n    /* \"#utility.yul\":1176:1198   */\n  mstore\n    /* \"#utility.yul\":1233:1251   */\n  swap2\n  dup3\n  mstore\n    /* \"#utility.yul\":1267:1282   */\n  dup5\n  dup3\n  add\n  swap3\n  pop\n    /* \"#utility.yul\":1309:1320   */\n  dup4\n  dup2\n  add\n    /* \"#utility.yul\":1305:1325   */\n  dup6\n  add\n  swap2\n    /* \"#utility.yul\":1337:1356   */\n  dup11\n  dup4\n  gt\n    /* \"#utility.yul\":1334:1373   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1369:1370   */\n  0x00\n    /* \"#utility.yul\":1366:1367   */\n  dup1\n    /* \"#utility.yul\":1359:1371   */\n  revert\n    /* \"#utility.yul\":1334:1373   */\ntag_39:\n    /* \"#utility.yul\":1393:1404   */\n  swap4\n  dup6\n  add\n  swap4\n    /* \"#utility.yul\":1413:1572   */\ntag_40:\n    /* \"#utility.yul\":1429:1435   */\n  dup3\n    /* \"#utility.yul\":1424:1427   */\n  dup6\n    /* \"#utility.yul\":1421:1436   */\n  lt\n    /* \"#utility.yul\":1413:1572   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1495:1529   */\n  tag_43\n    /* \"#utility.yul\":1525:1528   */\n  dup6\n    /* \"#utility.yul\":1495:1529   */\n  tag_24\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1483:1530   */\n  dup5\n  mstore\n    /* \"#utility.yul\":1446:1458   */\n  swap4\n  dup6\n  add\n  swap4\n    /* \"#utility.yul\":1550:1562   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":1413:1572   */\n  jump(tag_40)\ntag_42:\n    /* \"#utility.yul\":1591:1597   */\n  dup1\n    /* \"#utility.yul\":1581:1597   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":328:1603   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\ntag_26:\n    /* \"source/Marketplace.sol\":48220:59162  contract Marketplace is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":48220:59162  contract Marketplace is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7c237eea\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xe4997dc5\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xe4997dc5\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe9e4e160\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfcf984a9\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xff7f0cf9\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x7c237eea\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x952977f5\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa096c5a2\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb42a275e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd55a34e4\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x512ddcf9\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x512ddcf9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x51ed8288\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x69c57352\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x785fa7ce\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x047a5d43\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x08cfbc19\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0ecb93c0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x10603023\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x19c8c1c5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x476caa70\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"source/Marketplace.sol\":54926:56581  function buyNFTbyERC20(uint _tokenId)... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"source/Marketplace.sol\":48997:49021  IERC721 public marketNft */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      sload(0x01)\n      tag_35\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_35:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":378:410   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":360:411   */\n      dup2\n      mstore\n        /* \"#utility.yul\":348:350   */\n      0x20\n        /* \"#utility.yul\":333:351   */\n      add\n        /* \"source/Marketplace.sol\":48997:49021  IERC721 public marketNft */\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"source/Marketplace.sol\":50359:50454  function addBlackList(address user) public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"source/Marketplace.sol\":51930:52030  function setTradeFee(uint _newTradeFee) public onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_30\n      tag_46\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"source/Marketplace.sol\":52324:53416  function getUserTokensAtSale(address seller)... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_50:\n      pop\n        /* \"source/Marketplace.sol\":52408:52430  SelledNFT[] memory ret */\n      0x60\n      swap1\n        /* \"source/Marketplace.sol\":52324:53416  function getUserTokensAtSale(address seller)... */\n      jump\n    tag_49:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n        /* \"source/Marketplace.sol\":51453:51617  function bankAmountERC20(address erc20) public view returns(uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n        /* \"#utility.yul\":2132:2157   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2120:2122   */\n      0x20\n        /* \"#utility.yul\":2105:2123   */\n      add\n        /* \"source/Marketplace.sol\":51453:51617  function bankAmountERC20(address erc20) public view returns(uint256) {... */\n      tag_37\n        /* \"#utility.yul\":1986:2163   */\n      jump\n        /* \"source/Marketplace.sol\":58741:59159  function deSellNFT(uint256 _tokenId) public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_30\n      tag_62\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"source/Marketplace.sol\":56591:57757  function buyNFT(uint256 _tokenId)... */\n    tag_9:\n      tag_30\n      tag_65\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"source/Marketplace.sol\":49030:49053  uint public version = 1 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_55\n      sload(0x02)\n      dup2\n      jump\n        /* \"source/Marketplace.sol\":50810:50914  function getAllowedERC20() public view returns(address[] memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n        /* \"source/Marketplace.sol\":2667:2770  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_30\n      tag_78\n      jump\t// in\n        /* \"source/Marketplace.sol\":50920:51138  function isAllowedERC20(address erc20) public view returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      tag_81\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n        /* \"#utility.yul\":2996:3010   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2989:3011   */\n      iszero\n        /* \"#utility.yul\":2971:3012   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2959:2961   */\n      0x20\n        /* \"#utility.yul\":2944:2962   */\n      add\n        /* \"source/Marketplace.sol\":50920:51138  function isAllowedERC20(address erc20) public view returns (bool) {... */\n      tag_37\n        /* \"#utility.yul\":2831:3018   */\n      jump\n        /* \"source/Marketplace.sol\":57765:58733  function sellNFT(... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_30\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump(tag_35)\n        /* \"source/Marketplace.sol\":51839:51924  function getTradeFee() public view returns (uint) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n        /* \"source/Marketplace.sol\":51907:51916  _tradeFee */\n      sload(0x03)\n        /* \"source/Marketplace.sol\":51839:51924  function getTradeFee() public view returns (uint) {... */\n      jump(tag_55)\n        /* \"source/Marketplace.sol\":52183:52316  function getMyTokensAtSale() external view returns (SelledNFT[] memory ret) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n        /* \"source/Marketplace.sol\":52235:52257  SelledNFT[] memory ret */\n      0x60\n        /* \"source/Marketplace.sol\":52183:52316  function getMyTokensAtSale() external view returns (SelledNFT[] memory ret) {... */\n      jump(tag_49)\n        /* \"source/Marketplace.sol\":51146:51244  function bankAmount() public view returns(uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n        /* \"source/Marketplace.sol\":51215:51236  address(this).balance */\n      selfbalance\n        /* \"source/Marketplace.sol\":51146:51244  function bankAmount() public view returns(uint256) {... */\n      jump(tag_55)\n        /* \"source/Marketplace.sol\":53424:54918  function getTokensAtSale()... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_49\n      tag_109\n      jump\t// in\n        /* \"source/Marketplace.sol\":50460:50559  function removeBlackList(address user) public onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_30\n      tag_113\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"source/Marketplace.sol\":50678:50804  function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_30\n      tag_117\n      calldatasize\n      0x04\n      tag_118\n      jump\t// in\n    tag_117:\n      tag_119\n      jump\t// in\n        /* \"source/Marketplace.sol\":2925:3126  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_30\n      tag_122\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"source/Marketplace.sol\":51623:51831  function withdrawBankERC20(address erc20) public onlyOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_30\n      tag_126\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"source/Marketplace.sol\":50565:50670  function isBlacklisted(address user) public view returns(bool) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_80\n      tag_130\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":50646:50662  _blackList[user] */\n      and\n        /* \"source/Marketplace.sol\":50622:50626  bool */\n      0x00\n        /* \"source/Marketplace.sol\":50646:50662  _blackList[user] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":50646:50656  _blackList */\n      0x06\n        /* \"source/Marketplace.sol\":50646:50662  _blackList[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"source/Marketplace.sol\":50565:50670  function isBlacklisted(address user) public view returns(bool) {... */\n      jump\n        /* \"source/Marketplace.sol\":51252:51445  function withdrawBank() public onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_30\n      tag_135\n      jump\t// in\n        /* \"source/Marketplace.sol\":54926:56581  function buyNFTbyERC20(uint _tokenId)... */\n    tag_33:\n        /* \"source/Marketplace.sol\":55004:55029  _isTokensAtSale[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":55004:55019  _isTokensAtSale */\n      0x04\n        /* \"source/Marketplace.sol\":55004:55029  _isTokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/Marketplace.sol\":55004:55037  _isTokensAtSale[_tokenId] == true */\n      iszero\n      iszero\n        /* \"source/Marketplace.sol\":55004:55029  _isTokensAtSale[_tokenId] */\n      0x01\n        /* \"source/Marketplace.sol\":55004:55037  _isTokensAtSale[_tokenId] == true */\n      eq\n        /* \"source/Marketplace.sol\":54996:55066  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5079:5081   */\n      0x20\n        /* \"source/Marketplace.sol\":54996:55066  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5061:5082   */\n      mstore\n        /* \"#utility.yul\":5118:5120   */\n      0x18\n        /* \"#utility.yul\":5098:5116   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5091:5121   */\n      mstore\n      shl(0x40, 0x54686973204e4654206973206e6f7420666f722073616c65)\n        /* \"#utility.yul\":5137:5155   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5130:5184   */\n      mstore\n        /* \"#utility.yul\":5201:5219   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":54996:55066  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"source/Marketplace.sol\":55126:55127  0 */\n      0x00\n        /* \"source/Marketplace.sol\":55085:55108  _tokensAtSale[_tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":55085:55098  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":55085:55108  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":55085:55114  _tokensAtSale[_tokenId].erc20 */\n      0x03\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":55077:55165  require(_tokensAtSale[_tokenId].erc20 != address(0), \"This token selled by Native coin\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5432:5434   */\n      0x20\n        /* \"source/Marketplace.sol\":55077:55165  require(_tokensAtSale[_tokenId].erc20 != address(0), \"This token selled by Native coin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5414:5435   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5451:5469   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5444:5474   */\n      mstore\n        /* \"#utility.yul\":5510:5544   */\n      0x5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e\n        /* \"#utility.yul\":5490:5508   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5483:5545   */\n      mstore\n        /* \"#utility.yul\":5562:5580   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":55077:55165  require(_tokensAtSale[_tokenId].erc20 != address(0), \"This token selled by Native coin\") */\n      tag_138\n        /* \"#utility.yul\":5230:5586   */\n      jump\n        /* \"source/Marketplace.sol\":55077:55165  require(_tokensAtSale[_tokenId].erc20 != address(0), \"This token selled by Native coin\") */\n    tag_140:\n        /* \"source/Marketplace.sol\":55178:55193  IERC20 payToken */\n      0x00\n        /* \"source/Marketplace.sol\":55203:55226  _tokensAtSale[_tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":55203:55216  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":55203:55226  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"source/Marketplace.sol\":55203:55232  _tokensAtSale[_tokenId].erc20 */\n      0x03\n      add\n      sload\n        /* \"source/Marketplace.sol\":55267:55297  payToken.balanceOf(msg.sender) */\n      swap1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":55286:55296  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":55267:55297  payToken.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":360:411   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":55203:55232  _tokensAtSale[_tokenId].erc20 */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"source/Marketplace.sol\":55178:55193  IERC20 payToken */\n      swap1\n        /* \"source/Marketplace.sol\":55203:55232  _tokensAtSale[_tokenId].erc20 */\n      dup3\n      swap1\n        /* \"source/Marketplace.sol\":55267:55285  payToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":333:351   */\n      0x24\n      add\n        /* \"source/Marketplace.sol\":55267:55297  payToken.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"source/Marketplace.sol\":55332:55355  _tokensAtSale[_tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":55332:55345  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":55332:55355  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":55332:55361  _tokensAtSale[_tokenId].price */\n      0x02\n      add\n      sload\n        /* \"source/Marketplace.sol\":55244:55297  uint256 buyerBalance = payToken.balanceOf(msg.sender) */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":55316:55361  buyerBalance >= _tokensAtSale[_tokenId].price */\n      dup2\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":55308:55418  require(buyerBalance >= _tokensAtSale[_tokenId].price, \"You do not have enough tokens on your balance to pay\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5982:5984   */\n      0x20\n        /* \"source/Marketplace.sol\":55308:55418  require(buyerBalance >= _tokensAtSale[_tokenId].price, \"You do not have enough tokens on your balance to pay\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5964:5985   */\n      mstore\n        /* \"#utility.yul\":6021:6023   */\n      0x34\n        /* \"#utility.yul\":6001:6019   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5994:6024   */\n      mstore\n        /* \"#utility.yul\":6060:6094   */\n      0x596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e\n        /* \"#utility.yul\":6040:6058   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6033:6095   */\n      mstore\n      shl(0x60, 0x20796f75722062616c616e636520746f20706179)\n        /* \"#utility.yul\":6111:6129   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6104:6154   */\n      mstore\n        /* \"#utility.yul\":6171:6190   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":55308:55418  require(buyerBalance >= _tokensAtSale[_tokenId].price, \"You do not have enough tokens on your balance to pay\") */\n      tag_138\n        /* \"#utility.yul\":5780:6196   */\n      jump\n        /* \"source/Marketplace.sol\":55308:55418  require(buyerBalance >= _tokensAtSale[_tokenId].price, \"You do not have enough tokens on your balance to pay\") */\n    tag_148:\n        /* \"source/Marketplace.sol\":55454:55499  payToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":55473:55483  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":55454:55499  payToken.allowance(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6413:6447   */\n      mstore\n        /* \"source/Marketplace.sol\":55493:55497  this */\n      address\n        /* \"#utility.yul\":6463:6481   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6456:6499   */\n      mstore\n        /* \"source/Marketplace.sol\":55429:55451  uint256 buyerAllowance */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":55454:55472  payToken.allowance */\n      dup5\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":6348:6366   */\n      0x44\n      add\n        /* \"source/Marketplace.sol\":55454:55499  payToken.allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_155:\n        /* \"source/Marketplace.sol\":55536:55559  _tokensAtSale[_tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":55536:55549  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":55536:55559  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":55536:55565  _tokensAtSale[_tokenId].price */\n      0x02\n      add\n      sload\n        /* \"source/Marketplace.sol\":55429:55499  uint256 buyerAllowance = payToken.allowance(msg.sender, address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":55518:55565  buyerAllowance >= _tokensAtSale[_tokenId].price */\n      dup2\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":55510:55628  require(buyerAllowance >= _tokensAtSale[_tokenId].price, \"You did not allow the contract to send the purchase amount\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6712:6714   */\n      0x20\n        /* \"source/Marketplace.sol\":55510:55628  require(buyerAllowance >= _tokensAtSale[_tokenId].price, \"You did not allow the contract to send the purchase amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6694:6715   */\n      mstore\n        /* \"#utility.yul\":6751:6753   */\n      0x3a\n        /* \"#utility.yul\":6731:6749   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6724:6754   */\n      mstore\n        /* \"#utility.yul\":6790:6824   */\n      0x596f7520646964206e6f7420616c6c6f772074686520636f6e74726163742074\n        /* \"#utility.yul\":6770:6788   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6763:6825   */\n      mstore\n        /* \"#utility.yul\":6861:6889   */\n      0x6f2073656e642074686520707572636861736520616d6f756e74000000000000\n        /* \"#utility.yul\":6841:6859   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6834:6890   */\n      mstore\n        /* \"#utility.yul\":6907:6926   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":55510:55628  require(buyerAllowance >= _tokensAtSale[_tokenId].price, \"You did not allow the contract to send the purchase amount\") */\n      tag_138\n        /* \"#utility.yul\":6510:6932   */\n      jump\n        /* \"source/Marketplace.sol\":55510:55628  require(buyerAllowance >= _tokensAtSale[_tokenId].price, \"You did not allow the contract to send the purchase amount\") */\n    tag_156:\n        /* \"source/Marketplace.sol\":55651:55665  uint256 amount */\n      0x00\n        /* \"source/Marketplace.sol\":55668:55691  _tokensAtSale[_tokenId] */\n      dup5\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":55668:55681  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":55668:55691  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":55668:55697  _tokensAtSale[_tokenId].price */\n      0x02\n      add\n      sload\n      swap1\n        /* \"source/Marketplace.sol\":55728:55778  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      tag_159\n        /* \"source/Marketplace.sol\":55741:55766  SafeMath.div(amount, 100) */\n      tag_160\n        /* \"source/Marketplace.sol\":55668:55697  _tokensAtSale[_tokenId].price */\n      dup4\n        /* \"source/Marketplace.sol\":55762:55765  100 */\n      0x64\n        /* \"source/Marketplace.sol\":55741:55753  SafeMath.div */\n      tag_161\n        /* \"source/Marketplace.sol\":55741:55766  SafeMath.div(amount, 100) */\n      jump\t// in\n    tag_160:\n        /* \"source/Marketplace.sol\":55768:55777  _tradeFee */\n      sload(0x03)\n        /* \"source/Marketplace.sol\":55728:55740  SafeMath.mul */\n      tag_162\n        /* \"source/Marketplace.sol\":55728:55778  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      jump\t// in\n    tag_159:\n        /* \"source/Marketplace.sol\":55708:55778  uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":55827:55834  owner() */\n      tag_163\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"source/Marketplace.sol\":55827:55834  owner() */\n    tag_163:\n        /* \"source/Marketplace.sol\":55793:55816  _tokensAtSale[_tokenId] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":55793:55806  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":55793:55816  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":55793:55823  _tokensAtSale[_tokenId].seller */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":55793:55834  _tokensAtSale[_tokenId].seller == owner() */\n      swap2\n      dup3\n      and\n        /* \"source/Marketplace.sol\":55793:55823  _tokensAtSale[_tokenId].seller */\n      swap2\n      and\n        /* \"source/Marketplace.sol\":55793:55834  _tokensAtSale[_tokenId].seller == owner() */\n      sub\n        /* \"source/Marketplace.sol\":55789:55849  if (_tokensAtSale[_tokenId].seller == owner()) feeAmount = 0 */\n      tag_164\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":55848:55849  0 */\n      0x00\n        /* \"source/Marketplace.sol\":55789:55849  if (_tokensAtSale[_tokenId].seller == owner()) feeAmount = 0 */\n    tag_164:\n        /* \"source/Marketplace.sol\":55860:55881  uint256 amountWithFee */\n      0x00\n        /* \"source/Marketplace.sol\":55884:55915  SafeMath.sub(amount, feeAmount) */\n      tag_165\n        /* \"source/Marketplace.sol\":55897:55903  amount */\n      dup4\n        /* \"source/Marketplace.sol\":55905:55914  feeAmount */\n      dup4\n        /* \"source/Marketplace.sol\":55884:55896  SafeMath.sub */\n      tag_166\n        /* \"source/Marketplace.sol\":55884:55915  SafeMath.sub(amount, feeAmount) */\n      jump\t// in\n    tag_165:\n        /* \"source/Marketplace.sol\":56010:56033  _tokensAtSale[_tokenId] */\n      0x00\n      dup9\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":56010:56023  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":56010:56033  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":56010:56040  _tokensAtSale[_tokenId].seller */\n      0x01\n      add\n      sload\n        /* \"source/Marketplace.sol\":55860:55915  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":55928:56080  payToken.safeTransferFrom(... */\n      tag_167\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":55928:55953  payToken.safeTransferFrom */\n      dup9\n      dup2\n      and\n      swap2\n        /* \"source/Marketplace.sol\":55976:55986  msg.sender */\n      caller\n      swap2\n        /* \"source/Marketplace.sol\":56010:56040  _tokensAtSale[_tokenId].seller */\n      and\n        /* \"source/Marketplace.sol\":55860:55915  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      dup5\n        /* \"source/Marketplace.sol\":55928:55953  payToken.safeTransferFrom */\n      tag_168\n        /* \"source/Marketplace.sol\":55928:56080  payToken.safeTransferFrom(... */\n      jump\t// in\n    tag_167:\n        /* \"source/Marketplace.sol\":56095:56108  feeAmount > 0 */\n      dup2\n      iszero\n        /* \"source/Marketplace.sol\":56091:56278  if (feeAmount > 0) {... */\n      tag_170\n      jumpi\n        /* \"source/Marketplace.sol\":56125:56266  payToken.safeTransferFrom(... */\n      tag_170\n        /* \"source/Marketplace.sol\":56177:56187  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":56215:56222  owner() */\n      tag_171\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"source/Marketplace.sol\":56215:56222  owner() */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":56125:56150  payToken.safeTransferFrom */\n      dup10\n      and\n      swap2\n        /* \"source/Marketplace.sol\":56125:56266  payToken.safeTransferFrom(... */\n      swap1\n        /* \"source/Marketplace.sol\":56242:56251  feeAmount */\n      dup6\n        /* \"source/Marketplace.sol\":56125:56150  payToken.safeTransferFrom */\n      tag_168\n        /* \"source/Marketplace.sol\":56125:56266  payToken.safeTransferFrom(... */\n      jump\t// in\n    tag_170:\n        /* \"source/Marketplace.sol\":56288:56297  marketNft */\n      sload(0x01)\n        /* \"source/Marketplace.sol\":56288:56347  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":56288:56297  marketNft */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Marketplace.sol\":56288:56310  marketNft.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"source/Marketplace.sol\":56288:56347  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      tag_172\n      swap1\n        /* \"source/Marketplace.sol\":56319:56323  this */\n      address\n      swap1\n        /* \"source/Marketplace.sol\":56326:56336  msg.sender */\n      caller\n      swap1\n        /* \"source/Marketplace.sol\":56338:56346  _tokenId */\n      dup13\n      swap1\n        /* \"source/Marketplace.sol\":56288:56347  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      0x04\n      add\n      tag_173\n      jump\t// in\n    tag_172:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":56386:56391  false */\n      0x00\n        /* \"source/Marketplace.sol\":56358:56383  _isTokensAtSale[_tokenId] */\n      dup9\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":56358:56373  _isTokensAtSale */\n      0x04\n        /* \"source/Marketplace.sol\":56358:56383  _isTokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":56358:56391  _isTokensAtSale[_tokenId] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      pop\n        /* \"source/Marketplace.sol\":56402:56427  _clearSellToken(_tokenId) */\n      tag_177\n        /* \"source/Marketplace.sol\":56374:56382  _tokenId */\n      dup8\n        /* \"source/Marketplace.sol\":56402:56417  _clearSellToken */\n      tag_178\n        /* \"source/Marketplace.sol\":56402:56427  _clearSellToken(_tokenId) */\n      jump\t// in\n    tag_177:\n        /* \"source/Marketplace.sol\":56458:56481  _tokensAtSale[_tokenId] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":56458:56471  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":56458:56481  _tokensAtSale[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":56458:56488  _tokensAtSale[_tokenId].seller */\n      0x01\n      dup2\n      add\n      sload\n        /* \"source/Marketplace.sol\":56512:56541  _tokensAtSale[_tokenId].erc20 */\n      0x03\n      dup3\n      add\n      sload\n        /* \"source/Marketplace.sol\":56543:56572  _tokensAtSale[_tokenId].price */\n      0x02\n      swap1\n      swap3\n      add\n      sload\n        /* \"source/Marketplace.sol\":56445:56573  BuyWithERC20(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].erc20, _tokensAtSale[_tokenId].price) */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":56458:56488  _tokensAtSale[_tokenId].seller */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":7614:7648   */\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":56490:56500  msg.sender */\n      caller\n        /* \"#utility.yul\":7664:7682   */\n      swap5\n      dup2\n      add\n        /* \"#utility.yul\":7657:7700   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":7716:7734   */\n      dup4\n      dup6\n      add\n        /* \"#utility.yul\":7709:7743   */\n      dup13\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":56512:56541  _tokensAtSale[_tokenId].erc20 */\n      swap2\n      and\n        /* \"#utility.yul\":7774:7776   */\n      0x60\n        /* \"#utility.yul\":7759:7777   */\n      dup4\n      add\n        /* \"#utility.yul\":7752:7795   */\n      mstore\n        /* \"#utility.yul\":7826:7829   */\n      0x80\n        /* \"#utility.yul\":7811:7830   */\n      dup3\n      add\n        /* \"#utility.yul\":7804:7839   */\n      mstore\n        /* \"source/Marketplace.sol\":56445:56573  BuyWithERC20(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].erc20, _tokensAtSale[_tokenId].price) */\n      swap1\n      mload\n      0xd369fdcfeb128f60117661ebd8f220b7265c0a04fee0e9905eb8c6ab2767b9e5\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":7563:7566   */\n      0xa0\n        /* \"source/Marketplace.sol\":56445:56573  BuyWithERC20(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].erc20, _tokensAtSale[_tokenId].price) */\n      add\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":54985:56581  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":54926:56581  function buyNFTbyERC20(uint _tokenId)... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":50359:50454  function addBlackList(address user) public onlyOwner {... */\n    tag_43:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_182\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_183\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":50423:50439  _blackList[user] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":50423:50433  _blackList */\n      0x06\n        /* \"source/Marketplace.sol\":50423:50439  _blackList[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":50423:50446  _blackList[user] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"source/Marketplace.sol\":50442:50446  true */\n      0x01\n        /* \"source/Marketplace.sol\":50423:50446  _blackList[user] = true */\n      or\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":50359:50454  function addBlackList(address user) public onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":51930:52030  function setTradeFee(uint _newTradeFee) public onlyOwner {... */\n    tag_47:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_186\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_183\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"source/Marketplace.sol\":51998:52007  _tradeFee */\n      0x03\n        /* \"source/Marketplace.sol\":51998:52022  _tradeFee = _newTradeFee */\n      sstore\n        /* \"source/Marketplace.sol\":51930:52030  function setTradeFee(uint _newTradeFee) public onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":51453:51617  function bankAmountERC20(address erc20) public view returns(uint256) {... */\n    tag_57:\n        /* \"source/Marketplace.sol\":51579:51609  token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":51603:51607  this */\n      address\n        /* \"source/Marketplace.sol\":51579:51609  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":360:411   */\n      mstore\n        /* \"source/Marketplace.sol\":51513:51520  uint256 */\n      0x00\n      swap1\n        /* \"source/Marketplace.sol\":51555:51560  erc20 */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":51579:51594  token.balanceOf */\n      dup3\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":333:351   */\n      0x24\n      add\n        /* \"source/Marketplace.sol\":51579:51609  token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_193:\n        /* \"source/Marketplace.sol\":51572:51609  return token.balanceOf(address(this)) */\n      swap4\n        /* \"source/Marketplace.sol\":51453:51617  function bankAmountERC20(address erc20) public view returns(uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":58741:59159  function deSellNFT(uint256 _tokenId) public {... */\n    tag_63:\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":58799:58809  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":58799:58820  msg.sender != owner() */\n      eq\n        /* \"source/Marketplace.sol\":58796:58926  if(msg.sender != owner()) {... */\n      tag_197\n      jumpi\n        /* \"source/Marketplace.sol\":58859:58882  _tokensAtSale[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58859:58872  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":58859:58882  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":58859:58889  _tokensAtSale[_tokenId].seller */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":58845:58855  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":58845:58889  msg.sender == _tokensAtSale[_tokenId].seller */\n      eq\n        /* \"source/Marketplace.sol\":58837:58914  require(msg.sender == _tokensAtSale[_tokenId].seller, \"This is not your NFT\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8052:8054   */\n      0x20\n        /* \"source/Marketplace.sol\":58837:58914  require(msg.sender == _tokensAtSale[_tokenId].seller, \"This is not your NFT\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8034:8055   */\n      mstore\n        /* \"#utility.yul\":8091:8093   */\n      0x14\n        /* \"#utility.yul\":8071:8089   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8064:8094   */\n      mstore\n      shl(0x62, 0x151a1a5cc81a5cc81b9bdd081e5bdd5c88139195)\n        /* \"#utility.yul\":8110:8128   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8103:8153   */\n      mstore\n        /* \"#utility.yul\":8170:8188   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":58837:58914  require(msg.sender == _tokensAtSale[_tokenId].seller, \"This is not your NFT\") */\n      tag_138\n        /* \"#utility.yul\":7850:8194   */\n      jump\n        /* \"source/Marketplace.sol\":58837:58914  require(msg.sender == _tokensAtSale[_tokenId].seller, \"This is not your NFT\") */\n    tag_197:\n        /* \"source/Marketplace.sol\":58938:58947  marketNft */\n      sload(0x01)\n        /* \"source/Marketplace.sol\":58938:58997  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":58938:58947  marketNft */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Marketplace.sol\":58938:58960  marketNft.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"source/Marketplace.sol\":58938:58997  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      tag_200\n      swap1\n        /* \"source/Marketplace.sol\":58969:58973  this */\n      address\n      swap1\n        /* \"source/Marketplace.sol\":58976:58986  msg.sender */\n      caller\n      swap1\n        /* \"source/Marketplace.sol\":58988:58996  _tokenId */\n      dup7\n      swap1\n        /* \"source/Marketplace.sol\":58938:58997  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      0x04\n      add\n      tag_173\n      jump\t// in\n    tag_200:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":59038:59043  false */\n      0x00\n        /* \"source/Marketplace.sol\":59010:59035  _isTokensAtSale[_tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":59010:59025  _isTokensAtSale */\n      0x04\n        /* \"source/Marketplace.sol\":59010:59035  _isTokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":59010:59043  _isTokensAtSale[_tokenId] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      pop\n        /* \"source/Marketplace.sol\":59062:59087  _clearSellToken(_tokenId) */\n      tag_204\n        /* \"source/Marketplace.sol\":59026:59034  _tokenId */\n      dup2\n        /* \"source/Marketplace.sol\":59062:59077  _clearSellToken */\n      tag_178\n        /* \"source/Marketplace.sol\":59062:59087  _clearSellToken(_tokenId) */\n      jump\t// in\n    tag_204:\n        /* \"source/Marketplace.sol\":59113:59151  WithdrawFromSale(msg.sender, _tokenId) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":59130:59140  msg.sender */\n      caller\n        /* \"#utility.yul\":8373:8424   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8455:8457   */\n      0x20\n        /* \"#utility.yul\":8440:8458   */\n      dup2\n      add\n        /* \"#utility.yul\":8433:8467   */\n      dup4\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":59113:59151  WithdrawFromSale(msg.sender, _tokenId) */\n      0x8bf8e8f2f9d065b620f4e940d87122b03dd779d0ffd6a1590572e1e6d0416bef\n      swap2\n        /* \"#utility.yul\":8346:8364   */\n      add\n        /* \"source/Marketplace.sol\":59113:59151  WithdrawFromSale(msg.sender, _tokenId) */\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":58741:59159  function deSellNFT(uint256 _tokenId) public {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":56591:57757  function buyNFT(uint256 _tokenId)... */\n    tag_66:\n        /* \"source/Marketplace.sol\":56719:56744  _isTokensAtSale[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":56719:56734  _isTokensAtSale */\n      0x04\n        /* \"source/Marketplace.sol\":56719:56744  _isTokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/Marketplace.sol\":56719:56752  _isTokensAtSale[_tokenId] == true */\n      iszero\n      iszero\n        /* \"source/Marketplace.sol\":56719:56744  _isTokensAtSale[_tokenId] */\n      0x01\n        /* \"source/Marketplace.sol\":56719:56752  _isTokensAtSale[_tokenId] == true */\n      eq\n        /* \"source/Marketplace.sol\":56711:56781  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5079:5081   */\n      0x20\n        /* \"source/Marketplace.sol\":56711:56781  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5061:5082   */\n      mstore\n        /* \"#utility.yul\":5118:5120   */\n      0x18\n        /* \"#utility.yul\":5098:5116   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5091:5121   */\n      mstore\n      shl(0x40, 0x54686973204e4654206973206e6f7420666f722073616c65)\n        /* \"#utility.yul\":5137:5155   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5130:5184   */\n      mstore\n        /* \"#utility.yul\":5201:5219   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":56711:56781  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n      tag_138\n        /* \"#utility.yul\":4877:5225   */\n      jump\n        /* \"source/Marketplace.sol\":56711:56781  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n    tag_208:\n        /* \"source/Marketplace.sol\":56839:56862  _tokensAtSale[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":56839:56852  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":56839:56862  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":56839:56868  _tokensAtSale[_tokenId].price */\n      0x02\n      add\n      sload\n        /* \"source/Marketplace.sol\":56826:56835  msg.value */\n      callvalue\n        /* \"source/Marketplace.sol\":56826:56868  msg.value >= _tokensAtSale[_tokenId].price */\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":56818:56911  require(msg.value >= _tokensAtSale[_tokenId].price, \"You have not paid enough for this item\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8680:8682   */\n      0x20\n        /* \"source/Marketplace.sol\":56818:56911  require(msg.value >= _tokensAtSale[_tokenId].price, \"You have not paid enough for this item\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8662:8683   */\n      mstore\n        /* \"#utility.yul\":8719:8721   */\n      0x26\n        /* \"#utility.yul\":8699:8717   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8692:8722   */\n      mstore\n        /* \"#utility.yul\":8758:8792   */\n      0x596f752068617665206e6f74207061696420656e6f75676820666f7220746869\n        /* \"#utility.yul\":8738:8756   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8731:8793   */\n      mstore\n      shl(0xd0, 0x73206974656d)\n        /* \"#utility.yul\":8809:8827   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8802:8838   */\n      mstore\n        /* \"#utility.yul\":8855:8874   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":56818:56911  require(msg.value >= _tokensAtSale[_tokenId].price, \"You have not paid enough for this item\") */\n      tag_138\n        /* \"#utility.yul\":8478:8880   */\n      jump\n        /* \"source/Marketplace.sol\":56818:56911  require(msg.value >= _tokensAtSale[_tokenId].price, \"You have not paid enough for this item\") */\n    tag_210:\n        /* \"source/Marketplace.sol\":57015:57016  0 */\n      0x00\n        /* \"source/Marketplace.sol\":56974:56997  _tokensAtSale[_tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":56974:56987  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":56974:56997  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":56974:57003  _tokensAtSale[_tokenId].erc20 */\n      0x03\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":56974:57017  _tokensAtSale[_tokenId].erc20 == address(0) */\n      iszero\n        /* \"source/Marketplace.sol\":56966:57048  require(_tokensAtSale[_tokenId].erc20 == address(0), \"This token selled by ERC20\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9087:9089   */\n      0x20\n        /* \"source/Marketplace.sol\":56966:57048  require(_tokensAtSale[_tokenId].erc20 == address(0), \"This token selled by ERC20\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9069:9090   */\n      mstore\n        /* \"#utility.yul\":9126:9128   */\n      0x1a\n        /* \"#utility.yul\":9106:9124   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9099:9129   */\n      mstore\n        /* \"#utility.yul\":9165:9193   */\n      0x5468697320746f6b656e2073656c6c6564206279204552433230000000000000\n        /* \"#utility.yul\":9145:9163   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9138:9194   */\n      mstore\n        /* \"#utility.yul\":9211:9229   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":56966:57048  require(_tokensAtSale[_tokenId].erc20 == address(0), \"This token selled by ERC20\") */\n      tag_138\n        /* \"#utility.yul\":8885:9235   */\n      jump\n        /* \"source/Marketplace.sol\":56966:57048  require(_tokensAtSale[_tokenId].erc20 == address(0), \"This token selled by ERC20\") */\n    tag_213:\n        /* \"source/Marketplace.sol\":57086:57095  msg.value */\n      callvalue\n        /* \"source/Marketplace.sol\":57069:57083  uint256 amount */\n      0x00\n        /* \"source/Marketplace.sol\":57126:57176  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      tag_216\n        /* \"source/Marketplace.sol\":57139:57164  SafeMath.div(amount, 100) */\n      tag_160\n        /* \"source/Marketplace.sol\":57086:57095  msg.value */\n      dup4\n        /* \"source/Marketplace.sol\":57160:57163  100 */\n      0x64\n        /* \"source/Marketplace.sol\":57139:57151  SafeMath.div */\n      tag_161\n        /* \"source/Marketplace.sol\":57139:57164  SafeMath.div(amount, 100) */\n      jump\t// in\n        /* \"source/Marketplace.sol\":57126:57176  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n    tag_216:\n        /* \"source/Marketplace.sol\":57106:57176  uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":57225:57232  owner() */\n      tag_218\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"source/Marketplace.sol\":57225:57232  owner() */\n    tag_218:\n        /* \"source/Marketplace.sol\":57191:57214  _tokensAtSale[_tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":57191:57204  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":57191:57214  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":57191:57221  _tokensAtSale[_tokenId].seller */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57191:57232  _tokensAtSale[_tokenId].seller == owner() */\n      swap2\n      dup3\n      and\n        /* \"source/Marketplace.sol\":57191:57221  _tokensAtSale[_tokenId].seller */\n      swap2\n      and\n        /* \"source/Marketplace.sol\":57191:57232  _tokensAtSale[_tokenId].seller == owner() */\n      sub\n        /* \"source/Marketplace.sol\":57187:57247  if (_tokensAtSale[_tokenId].seller == owner()) feeAmount = 0 */\n      tag_219\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":57246:57247  0 */\n      0x00\n        /* \"source/Marketplace.sol\":57187:57247  if (_tokensAtSale[_tokenId].seller == owner()) feeAmount = 0 */\n    tag_219:\n        /* \"source/Marketplace.sol\":57258:57279  uint256 amountWithFee */\n      0x00\n        /* \"source/Marketplace.sol\":57282:57313  SafeMath.sub(amount, feeAmount) */\n      tag_220\n        /* \"source/Marketplace.sol\":57295:57301  amount */\n      dup4\n        /* \"source/Marketplace.sol\":57303:57312  feeAmount */\n      dup4\n        /* \"source/Marketplace.sol\":57282:57294  SafeMath.sub */\n      tag_166\n        /* \"source/Marketplace.sol\":57282:57313  SafeMath.sub(amount, feeAmount) */\n      jump\t// in\n    tag_220:\n        /* \"source/Marketplace.sol\":57334:57357  _tokensAtSale[_tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":57334:57347  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":57334:57357  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"source/Marketplace.sol\":57334:57364  _tokensAtSale[_tokenId].seller */\n      0x01\n      add\n      sload\n        /* \"source/Marketplace.sol\":57326:57389  payable(_tokensAtSale[_tokenId].seller).transfer(amountWithFee) */\n      swap1\n      mload\n        /* \"source/Marketplace.sol\":57258:57313  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      swap3\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57334:57364  _tokensAtSale[_tokenId].seller */\n      and\n      swap2\n        /* \"source/Marketplace.sol\":57326:57389  payable(_tokensAtSale[_tokenId].seller).transfer(amountWithFee) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"source/Marketplace.sol\":57258:57313  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      dup5\n      swap2\n        /* \"source/Marketplace.sol\":57326:57389  payable(_tokensAtSale[_tokenId].seller).transfer(amountWithFee) */\n      swap1\n      dup2\n        /* \"source/Marketplace.sol\":57334:57357  _tokensAtSale[_tokenId] */\n      dup2\n        /* \"source/Marketplace.sol\":57326:57389  payable(_tokensAtSale[_tokenId].seller).transfer(amountWithFee) */\n      dup2\n        /* \"source/Marketplace.sol\":57258:57313  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      dup6\n        /* \"source/Marketplace.sol\":57334:57364  _tokensAtSale[_tokenId].seller */\n      dup9\n        /* \"source/Marketplace.sol\":57326:57389  payable(_tokensAtSale[_tokenId].seller).transfer(amountWithFee) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_222\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_222:\n      pop\n        /* \"source/Marketplace.sol\":57404:57417  feeAmount > 0 */\n      dup2\n      iszero\n        /* \"source/Marketplace.sol\":57400:57482  if (feeAmount > 0) {... */\n      tag_223\n      jumpi\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      dup1\n      sload\n        /* \"source/Marketplace.sol\":57434:57470  payable(owner()).transfer(feeAmount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"source/Marketplace.sol\":57434:57470  payable(owner()).transfer(feeAmount) */\n      dup5\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"source/Marketplace.sol\":57460:57469  feeAmount */\n      dup6\n      swap2\n        /* \"source/Marketplace.sol\":57434:57470  payable(owner()).transfer(feeAmount) */\n      dup2\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      dup2\n        /* \"source/Marketplace.sol\":57434:57470  payable(owner()).transfer(feeAmount) */\n      dup2\n        /* \"source/Marketplace.sol\":57460:57469  feeAmount */\n      dup6\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      dup9\n        /* \"source/Marketplace.sol\":57434:57470  payable(owner()).transfer(feeAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n        /* \"source/Marketplace.sol\":57400:57482  if (feeAmount > 0) {... */\n    tag_223:\n        /* \"source/Marketplace.sol\":57502:57511  marketNft */\n      sload(0x01)\n        /* \"source/Marketplace.sol\":57502:57561  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57502:57511  marketNft */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Marketplace.sol\":57502:57524  marketNft.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"source/Marketplace.sol\":57502:57561  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      tag_227\n      swap1\n        /* \"source/Marketplace.sol\":57533:57537  this */\n      address\n      swap1\n        /* \"source/Marketplace.sol\":57540:57550  msg.sender */\n      caller\n      swap1\n        /* \"source/Marketplace.sol\":57552:57560  _tokenId */\n      dup10\n      swap1\n        /* \"source/Marketplace.sol\":57502:57561  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      0x04\n      add\n      tag_173\n      jump\t// in\n    tag_227:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_228:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":57600:57605  false */\n      0x00\n        /* \"source/Marketplace.sol\":57572:57597  _isTokensAtSale[_tokenId] */\n      dup6\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":57572:57587  _isTokensAtSale */\n      0x04\n        /* \"source/Marketplace.sol\":57572:57597  _isTokensAtSale[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/Marketplace.sol\":57572:57605  _isTokensAtSale[_tokenId] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":57627:57640  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":57627:57650  _tokensAtSale[_tokenId] */\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n      0x01\n        /* \"source/Marketplace.sol\":57627:57657  _tokensAtSale[_tokenId].seller */\n      dup2\n      add\n      sload\n        /* \"source/Marketplace.sol\":57681:57710  _tokensAtSale[_tokenId].price */\n      0x02\n      swap1\n      swap2\n      add\n      sload\n        /* \"source/Marketplace.sol\":57623:57711  Buy(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].price) */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57627:57657  _tokensAtSale[_tokenId].seller */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":9509:9543   */\n      dup3\n      mstore\n        /* \"source/Marketplace.sol\":57659:57669  msg.sender */\n      caller\n        /* \"#utility.yul\":9559:9577   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":9552:9595   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9611:9629   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":9604:9638   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":9669:9671   */\n      0x60\n        /* \"#utility.yul\":9654:9672   */\n      dup3\n      add\n        /* \"#utility.yul\":9647:9681   */\n      mstore\n        /* \"source/Marketplace.sol\":57623:57711  Buy(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].price) */\n      0x89f5adc174562e07c9c9b1cae7109bbecb21cf9d1b2847e550042b8653c54a0e\n      swap2\n      pop\n        /* \"#utility.yul\":9458:9461   */\n      0x80\n        /* \"#utility.yul\":9443:9462   */\n      add\n        /* \"source/Marketplace.sol\":57623:57711  Buy(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].price) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":57724:57749  _clearSellToken(_tokenId) */\n      tag_233\n        /* \"source/Marketplace.sol\":57740:57748  _tokenId */\n      dup5\n        /* \"source/Marketplace.sol\":57724:57739  _clearSellToken */\n      tag_178\n        /* \"source/Marketplace.sol\":57724:57749  _clearSellToken(_tokenId) */\n      jump\t// in\n    tag_233:\n        /* \"source/Marketplace.sol\":56663:57757  {... */\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":56591:57757  function buyNFT(uint256 _tokenId)... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":50810:50914  function getAllowedERC20() public view returns(address[] memory) {... */\n    tag_73:\n        /* \"source/Marketplace.sol\":50857:50873  address[] memory */\n      0x60\n        /* \"source/Marketplace.sol\":50893:50906  _allowedERC20 */\n      0x07\n        /* \"source/Marketplace.sol\":50886:50906  return _allowedERC20 */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_235\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_236:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_236\n      jumpi\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":50810:50914  function getAllowedERC20() public view returns(address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"source/Marketplace.sol\":2667:2770  function renounceOwnership() public virtual onlyOwner {... */\n    tag_78:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_238\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_183\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_238:\n        /* \"source/Marketplace.sol\":2732:2762  _transferOwnership(address(0)) */\n      tag_240\n        /* \"source/Marketplace.sol\":2759:2760  0 */\n      0x00\n        /* \"source/Marketplace.sol\":2732:2750  _transferOwnership */\n      tag_241\n        /* \"source/Marketplace.sol\":2732:2762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_240:\n        /* \"source/Marketplace.sol\":2667:2770  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":50920:51138  function isAllowedERC20(address erc20) public view returns (bool) {... */\n    tag_82:\n        /* \"source/Marketplace.sol\":50980:50984  bool */\n      0x00\n      dup1\n        /* \"source/Marketplace.sol\":50997:51108  for(uint i=0; i<_allowedERC20.length;i++) {... */\n    tag_243:\n        /* \"source/Marketplace.sol\":51013:51026  _allowedERC20 */\n      0x07\n        /* \"source/Marketplace.sol\":51013:51033  _allowedERC20.length */\n      sload\n        /* \"source/Marketplace.sol\":51011:51033  i<_allowedERC20.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":50997:51108  for(uint i=0; i<_allowedERC20.length;i++) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"source/Marketplace.sol\":51067:51080  _allowedERC20 */\n      0x07\n        /* \"source/Marketplace.sol\":51081:51082  i */\n      dup2\n        /* \"source/Marketplace.sol\":51067:51083  _allowedERC20[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_247\n      jumpi\n      tag_247\n      tag_248\n      jump\t// in\n    tag_247:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"source/Marketplace.sol\":51058:51083  erc20 == _allowedERC20[i] */\n      swap1\n      dup5\n      and\n      sub\n        /* \"source/Marketplace.sol\":51054:51096  if (erc20 == _allowedERC20[i]) return true */\n      tag_250\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":51092:51096  true */\n      0x01\n      swap3\n        /* \"source/Marketplace.sol\":50920:51138  function isAllowedERC20(address erc20) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":51054:51096  if (erc20 == _allowedERC20[i]) return true */\n    tag_250:\n        /* \"source/Marketplace.sol\":51034:51037  i++ */\n      dup1\n      tag_251\n      dup2\n      tag_252\n      jump\t// in\n    tag_251:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":50997:51108  for(uint i=0; i<_allowedERC20.length;i++) {... */\n      jump(tag_243)\n    tag_244:\n      pop\n        /* \"source/Marketplace.sol\":51125:51130  false */\n      0x00\n      swap3\n        /* \"source/Marketplace.sol\":50920:51138  function isAllowedERC20(address erc20) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":57765:58733  function sellNFT(... */\n    tag_89:\n        /* \"source/Marketplace.sol\":57919:57928  marketNft */\n      sload(0x01)\n        /* \"source/Marketplace.sol\":57919:57946  marketNft.ownerOf(_tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2132:2157   */\n      dup6\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":57950:57960  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57919:57928  marketNft */\n      and\n      swap1\n        /* \"source/Marketplace.sol\":57919:57936  marketNft.ownerOf */\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":2105:2123   */\n      0x24\n      add\n        /* \"source/Marketplace.sol\":57919:57946  marketNft.ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_256:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_257\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57919:57960  marketNft.ownerOf(_tokenId) == msg.sender */\n      and\n      eq\n        /* \"source/Marketplace.sol\":57897:58013  require(... */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10554:10556   */\n      0x20\n        /* \"source/Marketplace.sol\":57897:58013  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10536:10557   */\n      mstore\n        /* \"#utility.yul\":10593:10595   */\n      0x19\n        /* \"#utility.yul\":10573:10591   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10566:10596   */\n      mstore\n        /* \"#utility.yul\":10632:10659   */\n      0x596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000\n        /* \"#utility.yul\":10612:10630   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10605:10660   */\n      mstore\n        /* \"#utility.yul\":10677:10695   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":57897:58013  require(... */\n      tag_138\n        /* \"#utility.yul\":10352:10701   */\n      jump\n        /* \"source/Marketplace.sol\":57897:58013  require(... */\n    tag_259:\n        /* \"source/Marketplace.sol\":58040:58041  0 */\n      0x00\n        /* \"source/Marketplace.sol\":58032:58037  price */\n      dup3\n        /* \"source/Marketplace.sol\":58032:58041  price > 0 */\n      gt\n        /* \"source/Marketplace.sol\":58024:58077  require(price > 0, \"Price must be greater than zero\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10908:10910   */\n      0x20\n        /* \"source/Marketplace.sol\":58024:58077  require(price > 0, \"Price must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10890:10911   */\n      mstore\n        /* \"#utility.yul\":10947:10949   */\n      0x1f\n        /* \"#utility.yul\":10927:10945   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10920:10950   */\n      mstore\n        /* \"#utility.yul\":10986:11019   */\n      0x5072696365206d7573742062652067726561746572207468616e207a65726f00\n        /* \"#utility.yul\":10966:10984   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10959:11020   */\n      mstore\n        /* \"#utility.yul\":11037:11055   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":58024:58077  require(price > 0, \"Price must be greater than zero\") */\n      tag_138\n        /* \"#utility.yul\":10706:11061   */\n      jump\n        /* \"source/Marketplace.sol\":58024:58077  require(price > 0, \"Price must be greater than zero\") */\n    tag_262:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":58092:58112  _erc20 != address(0) */\n      dup2\n      and\n      iszero\n        /* \"source/Marketplace.sol\":58088:58260  if (_erc20 != address(0)) {... */\n      tag_267\n      jumpi\n        /* \"source/Marketplace.sol\":58169:58191  isAllowedERC20(_erc20) */\n      tag_266\n        /* \"source/Marketplace.sol\":58184:58190  _erc20 */\n      dup2\n        /* \"source/Marketplace.sol\":58169:58183  isAllowedERC20 */\n      tag_82\n        /* \"source/Marketplace.sol\":58169:58191  isAllowedERC20(_erc20) */\n      jump\t// in\n    tag_266:\n        /* \"source/Marketplace.sol\":58169:58199  isAllowedERC20(_erc20) == true */\n      iszero\n      iszero\n        /* \"source/Marketplace.sol\":58195:58199  true */\n      0x01\n        /* \"source/Marketplace.sol\":58169:58199  isAllowedERC20(_erc20) == true */\n      eq\n        /* \"source/Marketplace.sol\":58161:58248  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11268:11270   */\n      0x20\n        /* \"source/Marketplace.sol\":58161:58248  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11250:11271   */\n      mstore\n        /* \"#utility.yul\":11307:11309   */\n      0x2c\n        /* \"#utility.yul\":11287:11305   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11280:11310   */\n      mstore\n        /* \"#utility.yul\":11346:11380   */\n      0x54686973204552433230206e6f7420616c6c6f77656420617320612074726164\n        /* \"#utility.yul\":11326:11344   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11319:11381   */\n      mstore\n      shl(0xa0, 0x696e672063757272656e6379)\n        /* \"#utility.yul\":11397:11415   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11390:11432   */\n      mstore\n        /* \"#utility.yul\":11449:11468   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":58161:58248  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n      tag_138\n        /* \"#utility.yul\":11066:11474   */\n      jump\n        /* \"source/Marketplace.sol\":58161:58248  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n    tag_267:\n        /* \"source/Marketplace.sol\":58272:58297  _isTokensAtSale[_tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58272:58287  _isTokensAtSale */\n      0x04\n        /* \"source/Marketplace.sol\":58272:58297  _isTokensAtSale[_tokenId] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"source/Marketplace.sol\":58272:58304  _isTokensAtSale[_tokenId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"source/Marketplace.sol\":58300:58304  true */\n      0x01\n        /* \"source/Marketplace.sol\":58272:58304  _isTokensAtSale[_tokenId] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"source/Marketplace.sol\":58341:58450  SelledNFT(... */\n      dup2\n      mload\n      0x80\n      dup2\n      add\n      dup4\n      mstore\n      dup9\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58388:58398  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":58341:58450  SelledNFT(... */\n      dup2\n      dup6\n      add\n      dup2\n      dup2\n      mstore\n      dup3\n      dup6\n      add\n      dup11\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      dup2\n      and\n      0x60\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58315:58338  _tokensAtSale[_tokenId] */\n      dup14\n      dup12\n      mstore\n        /* \"source/Marketplace.sol\":58315:58328  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":58315:58338  _tokensAtSale[_tokenId] */\n      swap1\n      swap9\n      mstore\n      swap9\n      dup7\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":58315:58450  _tokensAtSale[_tokenId] = SelledNFT(... */\n      swap4\n      mload\n      dup5\n      sstore\n      swap1\n      mload\n      dup4\n      dup6\n      add\n      dup1\n      sload\n      swap2\n      dup11\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      sstore\n      swap1\n      mload\n      0x02\n      dup5\n      add\n      sstore\n      swap5\n      mload\n      0x03\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      swap3\n      dup9\n      and\n      swap3\n      swap1\n      swap6\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"source/Marketplace.sol\":58461:58470  marketNft */\n      sload\n        /* \"source/Marketplace.sol\":58461:58520  marketNft.transferFrom(msg.sender, address(this), _tokenId) */\n      swap1\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58461:58470  marketNft */\n      swap4\n      and\n      swap3\n        /* \"source/Marketplace.sol\":58461:58483  marketNft.transferFrom */\n      0x23b872dd\n      swap3\n        /* \"source/Marketplace.sol\":58461:58520  marketNft.transferFrom(msg.sender, address(this), _tokenId) */\n      tag_270\n      swap3\n        /* \"source/Marketplace.sol\":58388:58398  msg.sender */\n      swap2\n        /* \"source/Marketplace.sol\":58504:58508  this */\n      address\n      swap2\n        /* \"source/Marketplace.sol\":58288:58296  _tokenId */\n      dup10\n      swap2\n        /* \"source/Marketplace.sol\":58461:58520  marketNft.transferFrom(msg.sender, address(this), _tokenId) */\n      add\n      tag_173\n      jump\t// in\n    tag_270:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_271\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_271:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_273\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_273:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":58535:58555  _erc20 == address(0) */\n      dup3\n      and\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":58531:58726  if (_erc20 == address(0)) {... */\n      tag_274\n      jumpi\n        /* \"source/Marketplace.sol\":58577:58635  PutUpForSaleWithERC20(msg.sender, _tokenId, _erc20, price) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":58599:58609  msg.sender */\n      caller\n        /* \"#utility.yul\":11748:11782   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11813:11815   */\n      0x20\n        /* \"#utility.yul\":11798:11816   */\n      dup2\n      add\n        /* \"#utility.yul\":11791:11825   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11861:11876   */\n      dup4\n      and\n        /* \"#utility.yul\":11841:11859   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":11834:11877   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":11908:11910   */\n      0x60\n        /* \"#utility.yul\":11893:11911   */\n      dup2\n      add\n        /* \"#utility.yul\":11886:11920   */\n      dup4\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":58577:58635  PutUpForSaleWithERC20(msg.sender, _tokenId, _erc20, price) */\n      0x0a4292e75f7eafde90821610c4cabfc298540c274b50a7ea784a529a2b8a4a6f\n      swap1\n        /* \"#utility.yul\":11697:11700   */\n      0x80\n        /* \"#utility.yul\":11682:11701   */\n      add\n        /* \"source/Marketplace.sol\":58577:58635  PutUpForSaleWithERC20(msg.sender, _tokenId, _erc20, price) */\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":57765:58733  function sellNFT(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":58531:58726  if (_erc20 == address(0)) {... */\n    tag_274:\n        /* \"source/Marketplace.sol\":58673:58714  PutUpForSale(msg.sender, _tokenId, price) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":58686:58696  msg.sender */\n      caller\n        /* \"#utility.yul\":12133:12184   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12215:12217   */\n      0x20\n        /* \"#utility.yul\":12200:12218   */\n      dup2\n      add\n        /* \"#utility.yul\":12193:12227   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":12243:12261   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":12236:12270   */\n      dup4\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":58673:58714  PutUpForSale(msg.sender, _tokenId, price) */\n      0x4524387b4311078b7531910a140a6975002b10aca4cf12255e98da8f1ff1b35b\n      swap1\n        /* \"#utility.yul\":12121:12123   */\n      0x60\n        /* \"#utility.yul\":12106:12124   */\n      add\n        /* \"source/Marketplace.sol\":58673:58714  PutUpForSale(msg.sender, _tokenId, price) */\n      tag_275\n        /* \"#utility.yul\":11931:12276   */\n      jump\n        /* \"source/Marketplace.sol\":58531:58726  if (_erc20 == address(0)) {... */\n    tag_277:\n        /* \"source/Marketplace.sol\":57765:58733  function sellNFT(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":53424:54918  function getTokensAtSale()... */\n    tag_109:\n        /* \"source/Marketplace.sol\":53574:53590  _tokensIdsAtSale */\n      0x08\n        /* \"source/Marketplace.sol\":53574:53597  _tokensIdsAtSale.length */\n      sload\n        /* \"source/Marketplace.sol\":53492:53514  SelledNFT[] memory ret */\n      0x60\n      swap1\n        /* \"source/Marketplace.sol\":53532:53555  SelledNFT[] memory _ret */\n      0x00\n      swap1\n        /* \"source/Marketplace.sol\":53558:53598  new SelledNFT[](_tokensIdsAtSale.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_287\n      jumpi\n      tag_287\n      tag_288\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_289\n      jumpi\n      dup2\n      0x20\n      add\n    tag_290:\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      swap3\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup3\n      add\n      mstore\n      dup3\n      mstore\n      not(0x00)\n      swap1\n      swap3\n      add\n      swap2\n      add\n      dup2\n      tag_290\n      jumpi\n      swap1\n      pop\n    tag_289:\n      pop\n        /* \"source/Marketplace.sol\":53532:53598  SelledNFT[] memory _ret = new SelledNFT[](_tokensIdsAtSale.length) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":53614:53623  uint256 i */\n      0x00\n        /* \"source/Marketplace.sol\":53609:54002  for (uint256 i = 0; i < _tokensIdsAtSale.length; i++) {... */\n    tag_293:\n        /* \"source/Marketplace.sol\":53633:53649  _tokensIdsAtSale */\n      0x08\n        /* \"source/Marketplace.sol\":53633:53656  _tokensIdsAtSale.length */\n      sload\n        /* \"source/Marketplace.sol\":53629:53656  i < _tokensIdsAtSale.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":53609:54002  for (uint256 i = 0; i < _tokensIdsAtSale.length; i++) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"source/Marketplace.sol\":53678:53694  uint256 _tokenId */\n      0x00\n        /* \"source/Marketplace.sol\":53697:53713  _tokensIdsAtSale */\n      0x08\n        /* \"source/Marketplace.sol\":53714:53715  i */\n      dup3\n        /* \"source/Marketplace.sol\":53697:53716  _tokensIdsAtSale[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_297\n      jumpi\n      tag_297\n      tag_248\n      jump\t// in\n    tag_297:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"source/Marketplace.sol\":53760:53956  SelledNFT(... */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":53815:53838  _tokensAtSale[_tokenId] */\n      dup3\n      dup6\n      mstore\n        /* \"source/Marketplace.sol\":53815:53828  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":53815:53838  _tokensAtSale[_tokenId] */\n      dup1\n      dup6\n      mstore\n      dup3\n      dup7\n      keccak256\n        /* \"source/Marketplace.sol\":53815:53845  _tokensAtSale[_tokenId].seller */\n      0x01\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"source/Marketplace.sol\":53760:53956  SelledNFT(... */\n      dup5\n      dup9\n      add\n      mstore\n        /* \"source/Marketplace.sol\":53864:53893  _tokensAtSale[_tokenId].price */\n      0x02\n      dup3\n      add\n      sload\n        /* \"source/Marketplace.sol\":53760:53956  SelledNFT(... */\n      swap5\n      dup5\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"source/Marketplace.sol\":53912:53935  _tokensAtSale[_tokenId] */\n      swap6\n      dup5\n      swap1\n      mstore\n      swap1\n      swap4\n      mstore\n        /* \"source/Marketplace.sol\":53912:53941  _tokensAtSale[_tokenId].erc20 */\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      swap1\n      swap3\n      and\n        /* \"source/Marketplace.sol\":53760:53956  SelledNFT(... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"source/Marketplace.sol\":53971:53978  _ret[i] */\n      dup5\n      mload\n        /* \"source/Marketplace.sol\":53697:53716  _tokensIdsAtSale[i] */\n      swap2\n      swap3\n      pop\n        /* \"source/Marketplace.sol\":53760:53956  SelledNFT(... */\n      swap1\n      dup2\n      swap1\n        /* \"source/Marketplace.sol\":53971:53975  _ret */\n      dup6\n      swap1\n        /* \"source/Marketplace.sol\":53976:53977  i */\n      dup6\n      swap1\n        /* \"source/Marketplace.sol\":53971:53978  _ret[i] */\n      dup2\n      lt\n      tag_300\n      jumpi\n      tag_300\n      tag_248\n      jump\t// in\n    tag_300:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"source/Marketplace.sol\":53971:53990  _ret[i] = _pushItem */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":53663:54002  {... */\n      pop\n      pop\n        /* \"source/Marketplace.sol\":53658:53661  i++ */\n      dup1\n      dup1\n      tag_301\n      swap1\n      tag_252\n      jump\t// in\n    tag_301:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":53609:54002  for (uint256 i = 0; i < _tokensIdsAtSale.length; i++) {... */\n      jump(tag_293)\n    tag_294:\n      pop\n        /* \"source/Marketplace.sol\":54019:54023  _ret */\n      swap2\n        /* \"source/Marketplace.sol\":53424:54918  function getTokensAtSale()... */\n      swap1\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":50460:50559  function removeBlackList(address user) public onlyOwner {... */\n    tag_114:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_303\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_183\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_303:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":50527:50543  _blackList[user] */\n      and\n        /* \"source/Marketplace.sol\":50546:50551  false */\n      0x00\n        /* \"source/Marketplace.sol\":50527:50543  _blackList[user] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":50527:50537  _blackList */\n      0x06\n        /* \"source/Marketplace.sol\":50527:50543  _blackList[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":50527:50551  _blackList[user] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":50460:50559  function removeBlackList(address user) public onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":50678:50804  function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {... */\n    tag_119:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_306\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_183\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_306:\n        /* \"source/Marketplace.sol\":50765:50796  _allowedERC20 = newAllowedERC20 */\n      dup1\n      mload\n      tag_308\n      swap1\n        /* \"source/Marketplace.sol\":50765:50778  _allowedERC20 */\n      0x07\n      swap1\n        /* \"source/Marketplace.sol\":50765:50796  _allowedERC20 = newAllowedERC20 */\n      0x20\n      dup5\n      add\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      pop\n        /* \"source/Marketplace.sol\":50678:50804  function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":2925:3126  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_123:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_311\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_183\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":3014:3036  newOwner != address(0) */\n      dup2\n      and\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12483:12485   */\n      0x20\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12465:12486   */\n      mstore\n        /* \"#utility.yul\":12522:12524   */\n      0x26\n        /* \"#utility.yul\":12502:12520   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12495:12525   */\n      mstore\n        /* \"#utility.yul\":12561:12595   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12541:12559   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12534:12596   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":12612:12630   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12605:12641   */\n      mstore\n        /* \"#utility.yul\":12658:12677   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_138\n        /* \"#utility.yul\":12281:12683   */\n      jump\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_313:\n        /* \"source/Marketplace.sol\":3090:3118  _transferOwnership(newOwner) */\n      tag_316\n        /* \"source/Marketplace.sol\":3109:3117  newOwner */\n      dup2\n        /* \"source/Marketplace.sol\":3090:3108  _transferOwnership */\n      tag_241\n        /* \"source/Marketplace.sol\":3090:3118  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_316:\n        /* \"source/Marketplace.sol\":2925:3126  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":51623:51831  function withdrawBankERC20(address erc20) public onlyOwner {... */\n    tag_127:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_318\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_183\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_318:\n        /* \"source/Marketplace.sol\":51750:51780  token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":51774:51778  this */\n      address\n        /* \"source/Marketplace.sol\":51750:51780  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":360:411   */\n      mstore\n        /* \"source/Marketplace.sol\":51715:51720  erc20 */\n      dup2\n      swap1\n        /* \"source/Marketplace.sol\":51693:51705  IERC20 token */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":51750:51765  token.balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":333:351   */\n      0x24\n      add\n        /* \"source/Marketplace.sol\":51750:51780  token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_322\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_322:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_323\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_323:\n        /* \"source/Marketplace.sol\":51732:51780  uint256 balance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":51791:51796  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":51791:51805  token.transfer */\n      and\n      0xa9059cbb\n        /* \"source/Marketplace.sol\":51806:51813  owner() */\n      tag_324\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"source/Marketplace.sol\":51806:51813  owner() */\n    tag_324:\n        /* \"source/Marketplace.sol\":51791:51823  token.transfer(owner(), balance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8391:8423   */\n      swap1\n      swap2\n      and\n        /* \"source/Marketplace.sol\":51791:51823  token.transfer(owner(), balance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8373:8424   */\n      mstore\n        /* \"#utility.yul\":8440:8458   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8433:8467   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8346:8364   */\n      0x44\n      add\n        /* \"source/Marketplace.sol\":51791:51823  token.transfer(owner(), balance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_327\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_327:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_233\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n        /* \"source/Marketplace.sol\":51252:51445  function withdrawBank() public onlyOwner {... */\n    tag_135:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_332\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_183\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_332:\n        /* \"source/Marketplace.sol\":51353:51389  payable(msg.sender).transfer(amount) */\n      mload(0x40)\n        /* \"source/Marketplace.sol\":51321:51342  address(this).balance */\n      selfbalance\n      swap1\n        /* \"source/Marketplace.sol\":51361:51371  msg.sender */\n      caller\n      swap1\n        /* \"source/Marketplace.sol\":51353:51389  payable(msg.sender).transfer(amount) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"source/Marketplace.sol\":51321:51342  address(this).balance */\n      dup4\n      swap1\n        /* \"source/Marketplace.sol\":51304:51318  uint256 amount */\n      0x00\n        /* \"source/Marketplace.sol\":51353:51389  payable(msg.sender).transfer(amount) */\n      dup2\n        /* \"source/Marketplace.sol\":51304:51318  uint256 amount */\n      dup2\n        /* \"source/Marketplace.sol\":51353:51389  payable(msg.sender).transfer(amount) */\n      dup2\n        /* \"source/Marketplace.sol\":51321:51342  address(this).balance */\n      dup6\n        /* \"source/Marketplace.sol\":51361:51371  msg.sender */\n      dup9\n        /* \"source/Marketplace.sol\":51353:51389  payable(msg.sender).transfer(amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_335\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_335:\n      pop\n        /* \"source/Marketplace.sol\":51405:51437  WithdrawBank(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":51418:51428  msg.sender */\n      caller\n        /* \"#utility.yul\":8373:8424   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8455:8457   */\n      0x20\n        /* \"#utility.yul\":8440:8458   */\n      dup2\n      add\n        /* \"#utility.yul\":8433:8467   */\n      dup4\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":51405:51437  WithdrawBank(msg.sender, amount) */\n      0xd59f809f461fb2e2ca77f931dc43a9aaaa4295b0ed3c8e6adc04d0aab43eeb47\n      swap2\n        /* \"#utility.yul\":8346:8364   */\n      add\n        /* \"source/Marketplace.sol\":51405:51437  WithdrawBank(msg.sender, amount) */\n      tag_205\n        /* \"#utility.yul\":8199:8473   */\n      jump\n        /* \"source/Marketplace.sol\":35741:35839  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_161:\n        /* \"source/Marketplace.sol\":35799:35806  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":35826:35831  a / b */\n      tag_338\n        /* \"source/Marketplace.sol\":35830:35831  b */\n      dup3\n        /* \"source/Marketplace.sol\":35826:35827  a */\n      dup5\n        /* \"source/Marketplace.sol\":35826:35831  a / b */\n      tag_339\n      jump\t// in\n    tag_338:\n        /* \"source/Marketplace.sol\":35819:35831  return a / b */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":35741:35839  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_337:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":35342:35440  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_162:\n        /* \"source/Marketplace.sol\":35400:35407  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":35427:35432  a * b */\n      tag_338\n        /* \"source/Marketplace.sol\":35431:35432  b */\n      dup3\n        /* \"source/Marketplace.sol\":35427:35428  a */\n      dup5\n        /* \"source/Marketplace.sol\":35427:35432  a * b */\n      tag_342\n      jump\t// in\n        /* \"source/Marketplace.sol\":34985:35083  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_166:\n        /* \"source/Marketplace.sol\":35043:35050  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":35070:35075  a - b */\n      tag_338\n        /* \"source/Marketplace.sol\":35074:35075  b */\n      dup3\n        /* \"source/Marketplace.sol\":35070:35071  a */\n      dup5\n        /* \"source/Marketplace.sol\":35070:35075  a - b */\n      tag_345\n      jump\t// in\n        /* \"source/Marketplace.sol\":6528:6733  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_168:\n        /* \"source/Marketplace.sol\":6629:6725  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_233\n        /* \"source/Marketplace.sol\":6649:6654  token */\n      dup5\n        /* \"source/Marketplace.sol\":6679:6706  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"source/Marketplace.sol\":6708:6712  from */\n      dup6\n        /* \"source/Marketplace.sol\":6714:6716  to */\n      dup6\n        /* \"source/Marketplace.sol\":6718:6723  value */\n      dup6\n        /* \"source/Marketplace.sol\":6656:6724  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_348\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_348:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"source/Marketplace.sol\":6629:6648  _callOptionalReturn */\n      tag_349\n        /* \"source/Marketplace.sol\":6629:6725  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n        /* \"source/Marketplace.sol\":52040:52175  function _clearSellToken(uint256 _tokenId) private {... */\n    tag_178:\n        /* \"source/Marketplace.sol\":52128:52167  SelledNFT(0, address(0), 0, address(0)) */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      dup2\n      mstore\n      dup4\n      dup6\n      add\n      dup4\n      dup2\n      mstore\n      0x60\n      dup6\n      add\n      dup5\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":52102:52125  _tokensAtSale[_tokenId] */\n      swap7\n      dup5\n      mstore\n        /* \"source/Marketplace.sol\":52102:52115  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":52102:52125  _tokensAtSale[_tokenId] */\n      swap1\n      swap3\n      mstore\n      swap4\n      swap1\n      swap2\n      keccak256\n        /* \"source/Marketplace.sol\":52102:52167  _tokensAtSale[_tokenId] = SelledNFT(0, address(0), 0, address(0)) */\n      swap2\n      mload\n      dup3\n      sstore\n      swap2\n      mload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n      swap3\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      swap3\n      mload\n      0x03\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap4\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":52040:52175  function _clearSellToken(uint256 _tokenId) private {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":2184:2316  function _checkOwner() internal view virtual {... */\n    tag_183:\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":736:746  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":2248:2271  owner() == _msgSender() */\n      eq\n        /* \"source/Marketplace.sol\":2240:2308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13700:13702   */\n      0x20\n        /* \"source/Marketplace.sol\":2240:2308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13682:13703   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13719:13737   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13712:13742   */\n      mstore\n        /* \"#utility.yul\":13778:13812   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13758:13776   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13751:13813   */\n      mstore\n        /* \"#utility.yul\":13830:13848   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":2240:2308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_138\n        /* \"#utility.yul\":13498:13854   */\n      jump\n        /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_241:\n        /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n      0x00\n        /* \"source/Marketplace.sol\":3379:3385  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":3396:3413  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"source/Marketplace.sol\":3379:3385  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n      swap1\n        /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"source/Marketplace.sol\":3349:3477  {... */\n      pop\n        /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":9231:9947  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_349:\n        /* \"source/Marketplace.sol\":9655:9678  bytes memory returndata */\n      0x00\n        /* \"source/Marketplace.sol\":9681:9750  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_360\n        /* \"source/Marketplace.sol\":9709:9713  data */\n      dup3\n        /* \"source/Marketplace.sol\":9681:9750  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":9689:9694  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":9681:9708  address(token).functionCall */\n      and\n      tag_361\n      swap1\n        /* \"source/Marketplace.sol\":9681:9750  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_360:\n        /* \"source/Marketplace.sol\":9765:9782  returndata.length */\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":9655:9750  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":9765:9786  returndata.length > 0 */\n      iszero\n        /* \"source/Marketplace.sol\":9761:9940  if (returndata.length > 0) {... */\n      tag_277\n      jumpi\n        /* \"source/Marketplace.sol\":9862:9872  returndata */\n      dup1\n        /* \"source/Marketplace.sol\":9851:9881  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_363\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_363:\n        /* \"source/Marketplace.sol\":9843:9928  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14061:14063   */\n      0x20\n        /* \"source/Marketplace.sol\":9843:9928  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14043:14064   */\n      mstore\n        /* \"#utility.yul\":14100:14102   */\n      0x2a\n        /* \"#utility.yul\":14080:14098   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14073:14103   */\n      mstore\n        /* \"#utility.yul\":14139:14173   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":14119:14137   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14112:14174   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":14190:14208   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14183:14223   */\n      mstore\n        /* \"#utility.yul\":14240:14259   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":9843:9928  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_138\n        /* \"#utility.yul\":13859:14265   */\n      jump\n        /* \"source/Marketplace.sol\":42812:43041  function functionCall(... */\n    tag_361:\n        /* \"source/Marketplace.sol\":42949:42961  bytes memory */\n      0x60\n        /* \"source/Marketplace.sol\":42981:43033  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_369\n        /* \"source/Marketplace.sol\":43003:43009  target */\n      dup5\n        /* \"source/Marketplace.sol\":43011:43015  data */\n      dup5\n        /* \"source/Marketplace.sol\":43017:43018  0 */\n      0x00\n        /* \"source/Marketplace.sol\":43020:43032  errorMessage */\n      dup6\n        /* \"source/Marketplace.sol\":42981:43002  functionCallWithValue */\n      tag_370\n        /* \"source/Marketplace.sol\":42981:43033  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_369:\n        /* \"source/Marketplace.sol\":42974:43033  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"source/Marketplace.sol\":42812:43041  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":43898:44353  function functionCallWithValue(... */\n    tag_370:\n        /* \"source/Marketplace.sol\":44068:44080  bytes memory */\n      0x60\n        /* \"source/Marketplace.sol\":44126:44131  value */\n      dup3\n        /* \"source/Marketplace.sol\":44101:44122  address(this).balance */\n      selfbalance\n        /* \"source/Marketplace.sol\":44101:44131  address(this).balance >= value */\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14472:14474   */\n      0x20\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14454:14475   */\n      mstore\n        /* \"#utility.yul\":14511:14513   */\n      0x26\n        /* \"#utility.yul\":14491:14509   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14484:14514   */\n      mstore\n        /* \"#utility.yul\":14550:14584   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":14530:14548   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14523:14585   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":14601:14619   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14594:14630   */\n      mstore\n        /* \"#utility.yul\":14647:14666   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_138\n        /* \"#utility.yul\":14270:14672   */\n      jump\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_372:\n        /* \"source/Marketplace.sol\":44186:44198  bool success */\n      0x00\n        /* \"source/Marketplace.sol\":44200:44223  bytes memory returndata */\n      dup1\n        /* \"source/Marketplace.sol\":44227:44233  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":44227:44238  target.call */\n      and\n        /* \"source/Marketplace.sol\":44246:44251  value */\n      dup6\n        /* \"source/Marketplace.sol\":44253:44257  data */\n      dup8\n        /* \"source/Marketplace.sol\":44227:44258  target.call{value: value}(data) */\n      mload(0x40)\n      tag_375\n      swap2\n      swap1\n      tag_376\n      jump\t// in\n    tag_375:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_379\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_378)\n    tag_379:\n      0x60\n      swap2\n      pop\n    tag_378:\n      pop\n        /* \"source/Marketplace.sol\":44185:44258  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":44276:44345  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_380\n        /* \"source/Marketplace.sol\":44303:44309  target */\n      dup8\n        /* \"source/Marketplace.sol\":44311:44318  success */\n      dup4\n        /* \"source/Marketplace.sol\":44320:44330  returndata */\n      dup4\n        /* \"source/Marketplace.sol\":44332:44344  errorMessage */\n      dup8\n        /* \"source/Marketplace.sol\":44276:44302  verifyCallResultFromTarget */\n      tag_381\n        /* \"source/Marketplace.sol\":44276:44345  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_380:\n        /* \"source/Marketplace.sol\":44269:44345  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"source/Marketplace.sol\":43898:44353  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":46471:47115  function verifyCallResultFromTarget(... */\n    tag_381:\n        /* \"source/Marketplace.sol\":46656:46668  bytes memory */\n      0x60\n        /* \"source/Marketplace.sol\":46685:46692  success */\n      dup4\n        /* \"source/Marketplace.sol\":46681:47108  if (success) {... */\n      iszero\n      tag_383\n      jumpi\n        /* \"source/Marketplace.sol\":46713:46723  returndata */\n      dup3\n        /* \"source/Marketplace.sol\":46713:46730  returndata.length */\n      mload\n        /* \"source/Marketplace.sol\":46734:46735  0 */\n      0x00\n        /* \"source/Marketplace.sol\":46713:46735  returndata.length == 0 */\n      sub\n        /* \"source/Marketplace.sol\":46709:46999  if (returndata.length == 0) {... */\n      tag_387\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":40351:40370  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n      tag_387\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15426:15428   */\n      0x20\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15408:15429   */\n      mstore\n        /* \"#utility.yul\":15465:15467   */\n      0x1d\n        /* \"#utility.yul\":15445:15463   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15438:15468   */\n      mstore\n        /* \"#utility.yul\":15504:15535   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":15484:15502   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15477:15536   */\n      mstore\n        /* \"#utility.yul\":15553:15571   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n      tag_138\n        /* \"#utility.yul\":15224:15577   */\n      jump\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n    tag_387:\n      pop\n        /* \"source/Marketplace.sol\":47020:47030  returndata */\n      dup2\n        /* \"source/Marketplace.sol\":47013:47030  return returndata */\n      jump(tag_369)\n        /* \"source/Marketplace.sol\":46681:47108  if (success) {... */\n    tag_383:\n        /* \"source/Marketplace.sol\":47063:47096  _revert(returndata, errorMessage) */\n      tag_369\n        /* \"source/Marketplace.sol\":47071:47081  returndata */\n      dup4\n        /* \"source/Marketplace.sol\":47083:47095  errorMessage */\n      dup4\n        /* \"source/Marketplace.sol\":47818:47835  returndata.length */\n      dup2\n      mload\n        /* \"source/Marketplace.sol\":47818:47839  returndata.length > 0 */\n      iszero\n        /* \"source/Marketplace.sol\":47814:48202  if (returndata.length > 0) {... */\n      tag_395\n      jumpi\n        /* \"source/Marketplace.sol\":48050:48060  returndata */\n      dup2\n        /* \"source/Marketplace.sol\":48044:48061  mload(returndata) */\n      mload\n        /* \"source/Marketplace.sol\":48107:48122  returndata_size */\n      dup1\n        /* \"source/Marketplace.sol\":48094:48104  returndata */\n      dup4\n        /* \"source/Marketplace.sol\":48090:48092  32 */\n      0x20\n        /* \"source/Marketplace.sol\":48086:48105  add(32, returndata) */\n      add\n        /* \"source/Marketplace.sol\":48079:48123  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"source/Marketplace.sol\":47814:48202  if (returndata.length > 0) {... */\n    tag_395:\n        /* \"source/Marketplace.sol\":48177:48189  errorMessage */\n      dup1\n        /* \"source/Marketplace.sol\":48170:48190  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_309:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_401\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_400:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_401\n      jumpi\n      dup3\n      mload\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_400)\n    tag_401:\n      pop\n      tag_402\n      swap3\n      swap2\n      pop\n      tag_403\n      jump\t// in\n    tag_402:\n      pop\n      swap1\n      jump\t// out\n    tag_403:\n    tag_404:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_402\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_404)\n        /* \"#utility.yul\":14:194   */\n    tag_32:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_412:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":422:553   */\n    tag_406:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":497:528   */\n      dup2\n      and\n        /* \"#utility.yul\":487:529   */\n      dup2\n      eq\n        /* \"#utility.yul\":477:547   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":543:544   */\n      0x00\n        /* \"#utility.yul\":540:541   */\n      dup1\n        /* \"#utility.yul\":533:545   */\n      revert\n        /* \"#utility.yul\":558:692   */\n    tag_407:\n        /* \"#utility.yul\":626:646   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":655:686   */\n      tag_417\n        /* \"#utility.yul\":626:646   */\n      dup2\n        /* \"#utility.yul\":655:686   */\n      tag_406\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":558:692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":697:944   */\n    tag_42:\n        /* \"#utility.yul\":756:762   */\n      0x00\n        /* \"#utility.yul\":809:811   */\n      0x20\n        /* \"#utility.yul\":797:806   */\n      dup3\n        /* \"#utility.yul\":788:795   */\n      dup5\n        /* \"#utility.yul\":784:807   */\n      sub\n        /* \"#utility.yul\":780:812   */\n      slt\n        /* \"#utility.yul\":777:829   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":825:826   */\n      0x00\n        /* \"#utility.yul\":822:823   */\n      dup1\n        /* \"#utility.yul\":815:827   */\n      revert\n        /* \"#utility.yul\":777:829   */\n    tag_419:\n        /* \"#utility.yul\":864:873   */\n      dup2\n        /* \"#utility.yul\":851:874   */\n      calldataload\n        /* \"#utility.yul\":883:914   */\n      tag_193\n        /* \"#utility.yul\":908:913   */\n      dup2\n        /* \"#utility.yul\":883:914   */\n      tag_406\n      jump\t// in\n        /* \"#utility.yul\":949:1981   */\n    tag_53:\n        /* \"#utility.yul\":1174:1176   */\n      0x20\n        /* \"#utility.yul\":1226:1247   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1296:1309   */\n      dup3\n      mload\n        /* \"#utility.yul\":1199:1217   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1318:1340   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1145:1149   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1174:1176   */\n      swap1\n        /* \"#utility.yul\":1359:1361   */\n      0x40\n      swap1\n        /* \"#utility.yul\":1377:1395   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1418:1433   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":1145:1149   */\n      dup6\n        /* \"#utility.yul\":1461:1955   */\n    tag_422:\n        /* \"#utility.yul\":1475:1481   */\n      dup3\n        /* \"#utility.yul\":1472:1473   */\n      dup2\n        /* \"#utility.yul\":1469:1482   */\n      lt\n        /* \"#utility.yul\":1461:1955   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":1534:1547   */\n      dup2\n      mload\n        /* \"#utility.yul\":1572:1581   */\n      dup1\n      mload\n        /* \"#utility.yul\":1560:1582   */\n      dup6\n      mstore\n        /* \"#utility.yul\":1621:1632   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":1615:1633   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1709:1730   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1695:1707   */\n      dup9\n      dup8\n      add\n        /* \"#utility.yul\":1688:1731   */\n      mstore\n        /* \"#utility.yul\":1771:1782   */\n      dup7\n      dup3\n      add\n        /* \"#utility.yul\":1765:1783   */\n      mload\n        /* \"#utility.yul\":1751:1763   */\n      dup8\n      dup8\n      add\n        /* \"#utility.yul\":1744:1784   */\n      mstore\n        /* \"#utility.yul\":1807:1811   */\n      0x60\n        /* \"#utility.yul\":1855:1866   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":1849:1867   */\n      mload\n        /* \"#utility.yul\":1845:1872   */\n      and\n        /* \"#utility.yul\":1831:1843   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":1824:1873   */\n      mstore\n        /* \"#utility.yul\":1902:1906   */\n      0x80\n        /* \"#utility.yul\":1893:1907   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":1930:1945   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1673:1674   */\n      0x01\n        /* \"#utility.yul\":1490:1499   */\n      add\n        /* \"#utility.yul\":1461:1955   */\n      jump(tag_422)\n    tag_424:\n      pop\n        /* \"#utility.yul\":1972:1975   */\n      swap2\n      swap8\n        /* \"#utility.yul\":949:1981   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2168:2826   */\n    tag_75:\n        /* \"#utility.yul\":2339:2341   */\n      0x20\n        /* \"#utility.yul\":2391:2412   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2461:2474   */\n      dup3\n      mload\n        /* \"#utility.yul\":2364:2382   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2483:2505   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2310:2314   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2339:2341   */\n      swap1\n        /* \"#utility.yul\":2562:2577   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2536:2538   */\n      0x40\n        /* \"#utility.yul\":2521:2539   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2310:2314   */\n      dup5\n        /* \"#utility.yul\":2605:2800   */\n    tag_427:\n        /* \"#utility.yul\":2619:2625   */\n      dup2\n        /* \"#utility.yul\":2616:2617   */\n      dup2\n        /* \"#utility.yul\":2613:2626   */\n      lt\n        /* \"#utility.yul\":2605:2800   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":2684:2697   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2680:2719   */\n      and\n        /* \"#utility.yul\":2668:2720   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2775:2790   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2740:2752   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":2716:2717   */\n      0x01\n        /* \"#utility.yul\":2634:2643   */\n      add\n        /* \"#utility.yul\":2605:2800   */\n      jump(tag_427)\n    tag_429:\n      pop\n        /* \"#utility.yul\":2817:2820   */\n      swap1\n      swap7\n        /* \"#utility.yul\":2168:2826   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3023:3406   */\n    tag_88:\n        /* \"#utility.yul\":3100:3106   */\n      0x00\n        /* \"#utility.yul\":3108:3114   */\n      dup1\n        /* \"#utility.yul\":3116:3122   */\n      0x00\n        /* \"#utility.yul\":3169:3171   */\n      0x60\n        /* \"#utility.yul\":3157:3166   */\n      dup5\n        /* \"#utility.yul\":3148:3155   */\n      dup7\n        /* \"#utility.yul\":3144:3167   */\n      sub\n        /* \"#utility.yul\":3140:3172   */\n      slt\n        /* \"#utility.yul\":3137:3189   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":3185:3186   */\n      0x00\n        /* \"#utility.yul\":3182:3183   */\n      dup1\n        /* \"#utility.yul\":3175:3187   */\n      revert\n        /* \"#utility.yul\":3137:3189   */\n    tag_432:\n        /* \"#utility.yul\":3221:3230   */\n      dup4\n        /* \"#utility.yul\":3208:3231   */\n      calldataload\n        /* \"#utility.yul\":3198:3231   */\n      swap3\n      pop\n        /* \"#utility.yul\":3278:3280   */\n      0x20\n        /* \"#utility.yul\":3267:3276   */\n      dup5\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"#utility.yul\":3250:3282   */\n      calldataload\n        /* \"#utility.yul\":3240:3282   */\n      swap2\n      pop\n        /* \"#utility.yul\":3332:3334   */\n      0x40\n        /* \"#utility.yul\":3321:3330   */\n      dup5\n        /* \"#utility.yul\":3317:3335   */\n      add\n        /* \"#utility.yul\":3304:3336   */\n      calldataload\n        /* \"#utility.yul\":3345:3376   */\n      tag_433\n        /* \"#utility.yul\":3370:3375   */\n      dup2\n        /* \"#utility.yul\":3345:3376   */\n      tag_406\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":3395:3400   */\n      dup1\n        /* \"#utility.yul\":3385:3400   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3023:3406   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3619:3746   */\n    tag_288:\n        /* \"#utility.yul\":3680:3690   */\n      0x4e487b71\n        /* \"#utility.yul\":3675:3678   */\n      0xe0\n        /* \"#utility.yul\":3671:3691   */\n      shl\n        /* \"#utility.yul\":3668:3669   */\n      0x00\n        /* \"#utility.yul\":3661:3692   */\n      mstore\n        /* \"#utility.yul\":3711:3715   */\n      0x41\n        /* \"#utility.yul\":3708:3709   */\n      0x04\n        /* \"#utility.yul\":3701:3716   */\n      mstore\n        /* \"#utility.yul\":3735:3739   */\n      0x24\n        /* \"#utility.yul\":3732:3733   */\n      0x00\n        /* \"#utility.yul\":3725:3740   */\n      revert\n        /* \"#utility.yul\":3751:4872   */\n    tag_118:\n        /* \"#utility.yul\":3835:3841   */\n      0x00\n        /* \"#utility.yul\":3866:3868   */\n      0x20\n        /* \"#utility.yul\":3909:3911   */\n      dup1\n        /* \"#utility.yul\":3897:3906   */\n      dup4\n        /* \"#utility.yul\":3888:3895   */\n      dup6\n        /* \"#utility.yul\":3884:3907   */\n      sub\n        /* \"#utility.yul\":3880:3912   */\n      slt\n        /* \"#utility.yul\":3877:3929   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3922:3923   */\n      dup1\n        /* \"#utility.yul\":3915:3927   */\n      revert\n        /* \"#utility.yul\":3877:3929   */\n    tag_437:\n        /* \"#utility.yul\":3965:3974   */\n      dup3\n        /* \"#utility.yul\":3952:3975   */\n      calldataload\n        /* \"#utility.yul\":3994:4012   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4035:4037   */\n      dup1\n        /* \"#utility.yul\":4027:4033   */\n      dup3\n        /* \"#utility.yul\":4024:4038   */\n      gt\n        /* \"#utility.yul\":4021:4055   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":4051:4052   */\n      0x00\n        /* \"#utility.yul\":4048:4049   */\n      dup1\n        /* \"#utility.yul\":4041:4053   */\n      revert\n        /* \"#utility.yul\":4021:4055   */\n    tag_438:\n        /* \"#utility.yul\":4089:4095   */\n      dup2\n        /* \"#utility.yul\":4078:4087   */\n      dup6\n        /* \"#utility.yul\":4074:4096   */\n      add\n        /* \"#utility.yul\":4064:4096   */\n      swap2\n      pop\n        /* \"#utility.yul\":4134:4141   */\n      dup6\n        /* \"#utility.yul\":4127:4131   */\n      0x1f\n        /* \"#utility.yul\":4123:4125   */\n      dup4\n        /* \"#utility.yul\":4119:4132   */\n      add\n        /* \"#utility.yul\":4115:4142   */\n      slt\n        /* \"#utility.yul\":4105:4160   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":4156:4157   */\n      0x00\n        /* \"#utility.yul\":4153:4154   */\n      dup1\n        /* \"#utility.yul\":4146:4158   */\n      revert\n        /* \"#utility.yul\":4105:4160   */\n    tag_439:\n        /* \"#utility.yul\":4192:4194   */\n      dup2\n        /* \"#utility.yul\":4179:4195   */\n      calldataload\n        /* \"#utility.yul\":4214:4216   */\n      dup2\n        /* \"#utility.yul\":4210:4212   */\n      dup2\n        /* \"#utility.yul\":4207:4217   */\n      gt\n        /* \"#utility.yul\":4204:4240   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":4220:4238   */\n      tag_441\n      tag_288\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4266:4268   */\n      dup1\n        /* \"#utility.yul\":4263:4264   */\n      0x05\n        /* \"#utility.yul\":4259:4269   */\n      shl\n        /* \"#utility.yul\":4298:4300   */\n      0x40\n        /* \"#utility.yul\":4292:4301   */\n      mload\n        /* \"#utility.yul\":4361:4363   */\n      0x1f\n        /* \"#utility.yul\":4357:4364   */\n      not\n        /* \"#utility.yul\":4352:4354   */\n      0x3f\n        /* \"#utility.yul\":4348:4350   */\n      dup4\n        /* \"#utility.yul\":4344:4355   */\n      add\n        /* \"#utility.yul\":4340:4365   */\n      and\n        /* \"#utility.yul\":4332:4338   */\n      dup2\n        /* \"#utility.yul\":4328:4366   */\n      add\n        /* \"#utility.yul\":4416:4422   */\n      dup2\n        /* \"#utility.yul\":4404:4414   */\n      dup2\n        /* \"#utility.yul\":4401:4423   */\n      lt\n        /* \"#utility.yul\":4396:4398   */\n      dup6\n        /* \"#utility.yul\":4384:4394   */\n      dup3\n        /* \"#utility.yul\":4381:4399   */\n      gt\n        /* \"#utility.yul\":4378:4424   */\n      or\n        /* \"#utility.yul\":4375:4447   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":4427:4445   */\n      tag_443\n      tag_288\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4463:4465   */\n      0x40\n        /* \"#utility.yul\":4456:4478   */\n      mstore\n        /* \"#utility.yul\":4513:4531   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":4547:4562   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":4589:4600   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":4585:4605   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":4617:4636   */\n      dup9\n      dup4\n      gt\n        /* \"#utility.yul\":4614:4653   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":4649:4650   */\n      0x00\n        /* \"#utility.yul\":4646:4647   */\n      dup1\n        /* \"#utility.yul\":4639:4651   */\n      revert\n        /* \"#utility.yul\":4614:4653   */\n    tag_444:\n        /* \"#utility.yul\":4673:4684   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":4693:4841   */\n    tag_445:\n        /* \"#utility.yul\":4709:4715   */\n      dup3\n        /* \"#utility.yul\":4704:4707   */\n      dup6\n        /* \"#utility.yul\":4701:4716   */\n      lt\n        /* \"#utility.yul\":4693:4841   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":4775:4798   */\n      tag_448\n        /* \"#utility.yul\":4794:4797   */\n      dup6\n        /* \"#utility.yul\":4775:4798   */\n      tag_407\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4763:4799   */\n      dup5\n      mstore\n        /* \"#utility.yul\":4726:4738   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":4819:4831   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":4693:4841   */\n      jump(tag_445)\n    tag_447:\n        /* \"#utility.yul\":4860:4866   */\n      swap9\n        /* \"#utility.yul\":3751:4872   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5591:5775   */\n    tag_147:\n        /* \"#utility.yul\":5661:5667   */\n      0x00\n        /* \"#utility.yul\":5714:5716   */\n      0x20\n        /* \"#utility.yul\":5702:5711   */\n      dup3\n        /* \"#utility.yul\":5693:5700   */\n      dup5\n        /* \"#utility.yul\":5689:5712   */\n      sub\n        /* \"#utility.yul\":5685:5717   */\n      slt\n        /* \"#utility.yul\":5682:5734   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":5730:5731   */\n      0x00\n        /* \"#utility.yul\":5727:5728   */\n      dup1\n        /* \"#utility.yul\":5720:5732   */\n      revert\n        /* \"#utility.yul\":5682:5734   */\n    tag_452:\n      pop\n        /* \"#utility.yul\":5753:5769   */\n      mload\n      swap2\n        /* \"#utility.yul\":5591:5775   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7312   */\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7195:7210   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":7177:7211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7247:7262   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":7242:7244   */\n      0x20\n        /* \"#utility.yul\":7227:7245   */\n      dup3\n      add\n        /* \"#utility.yul\":7220:7263   */\n      mstore\n        /* \"#utility.yul\":7294:7296   */\n      0x40\n        /* \"#utility.yul\":7279:7297   */\n      dup2\n      add\n        /* \"#utility.yul\":7272:7306   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7127:7129   */\n      0x60\n        /* \"#utility.yul\":7112:7130   */\n      add\n      swap1\n        /* \"#utility.yul\":6937:7312   */\n      jump\t// out\n        /* \"#utility.yul\":9692:9819   */\n    tag_248:\n        /* \"#utility.yul\":9753:9763   */\n      0x4e487b71\n        /* \"#utility.yul\":9748:9751   */\n      0xe0\n        /* \"#utility.yul\":9744:9764   */\n      shl\n        /* \"#utility.yul\":9741:9742   */\n      0x00\n        /* \"#utility.yul\":9734:9765   */\n      mstore\n        /* \"#utility.yul\":9784:9788   */\n      0x32\n        /* \"#utility.yul\":9781:9782   */\n      0x04\n        /* \"#utility.yul\":9774:9789   */\n      mstore\n        /* \"#utility.yul\":9808:9812   */\n      0x24\n        /* \"#utility.yul\":9805:9806   */\n      0x00\n        /* \"#utility.yul\":9798:9813   */\n      revert\n        /* \"#utility.yul\":9824:9951   */\n    tag_408:\n        /* \"#utility.yul\":9885:9895   */\n      0x4e487b71\n        /* \"#utility.yul\":9880:9883   */\n      0xe0\n        /* \"#utility.yul\":9876:9896   */\n      shl\n        /* \"#utility.yul\":9873:9874   */\n      0x00\n        /* \"#utility.yul\":9866:9897   */\n      mstore\n        /* \"#utility.yul\":9916:9920   */\n      0x11\n        /* \"#utility.yul\":9913:9914   */\n      0x04\n        /* \"#utility.yul\":9906:9921   */\n      mstore\n        /* \"#utility.yul\":9940:9944   */\n      0x24\n        /* \"#utility.yul\":9937:9938   */\n      0x00\n        /* \"#utility.yul\":9930:9945   */\n      revert\n        /* \"#utility.yul\":9956:10091   */\n    tag_252:\n        /* \"#utility.yul\":9995:9998   */\n      0x00\n        /* \"#utility.yul\":10016:10033   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10013:10056   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":10036:10054   */\n      tag_467\n      tag_408\n      jump\t// in\n    tag_467:\n      pop\n        /* \"#utility.yul\":10083:10084   */\n      0x01\n        /* \"#utility.yul\":10072:10085   */\n      add\n      swap1\n        /* \"#utility.yul\":9956:10091   */\n      jump\t// out\n        /* \"#utility.yul\":10096:10347   */\n    tag_258:\n        /* \"#utility.yul\":10166:10172   */\n      0x00\n        /* \"#utility.yul\":10219:10221   */\n      0x20\n        /* \"#utility.yul\":10207:10216   */\n      dup3\n        /* \"#utility.yul\":10198:10205   */\n      dup5\n        /* \"#utility.yul\":10194:10217   */\n      sub\n        /* \"#utility.yul\":10190:10222   */\n      slt\n        /* \"#utility.yul\":10187:10239   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":10235:10236   */\n      0x00\n        /* \"#utility.yul\":10232:10233   */\n      dup1\n        /* \"#utility.yul\":10225:10237   */\n      revert\n        /* \"#utility.yul\":10187:10239   */\n    tag_469:\n        /* \"#utility.yul\":10267:10276   */\n      dup2\n        /* \"#utility.yul\":10261:10277   */\n      mload\n        /* \"#utility.yul\":10286:10317   */\n      tag_193\n        /* \"#utility.yul\":10311:10316   */\n      dup2\n        /* \"#utility.yul\":10286:10317   */\n      tag_406\n      jump\t// in\n        /* \"#utility.yul\":12688:12965   */\n    tag_329:\n        /* \"#utility.yul\":12755:12761   */\n      0x00\n        /* \"#utility.yul\":12808:12810   */\n      0x20\n        /* \"#utility.yul\":12796:12805   */\n      dup3\n        /* \"#utility.yul\":12787:12794   */\n      dup5\n        /* \"#utility.yul\":12783:12806   */\n      sub\n        /* \"#utility.yul\":12779:12811   */\n      slt\n        /* \"#utility.yul\":12776:12828   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":12824:12825   */\n      0x00\n        /* \"#utility.yul\":12821:12822   */\n      dup1\n        /* \"#utility.yul\":12814:12826   */\n      revert\n        /* \"#utility.yul\":12776:12828   */\n    tag_478:\n        /* \"#utility.yul\":12856:12865   */\n      dup2\n        /* \"#utility.yul\":12850:12866   */\n      mload\n        /* \"#utility.yul\":12909:12914   */\n      dup1\n        /* \"#utility.yul\":12902:12915   */\n      iszero\n        /* \"#utility.yul\":12895:12916   */\n      iszero\n        /* \"#utility.yul\":12888:12893   */\n      dup2\n        /* \"#utility.yul\":12885:12917   */\n      eq\n        /* \"#utility.yul\":12875:12935   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":12931:12932   */\n      0x00\n        /* \"#utility.yul\":12928:12929   */\n      dup1\n        /* \"#utility.yul\":12921:12933   */\n      revert\n        /* \"#utility.yul\":12970:13187   */\n    tag_339:\n        /* \"#utility.yul\":13010:13011   */\n      0x00\n        /* \"#utility.yul\":13036:13037   */\n      dup3\n        /* \"#utility.yul\":13026:13158   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":13080:13090   */\n      0x4e487b71\n        /* \"#utility.yul\":13075:13078   */\n      0xe0\n        /* \"#utility.yul\":13071:13091   */\n      shl\n        /* \"#utility.yul\":13068:13069   */\n      0x00\n        /* \"#utility.yul\":13061:13092   */\n      mstore\n        /* \"#utility.yul\":13115:13119   */\n      0x12\n        /* \"#utility.yul\":13112:13113   */\n      0x04\n        /* \"#utility.yul\":13105:13120   */\n      mstore\n        /* \"#utility.yul\":13143:13147   */\n      0x24\n        /* \"#utility.yul\":13140:13141   */\n      0x00\n        /* \"#utility.yul\":13133:13148   */\n      revert\n        /* \"#utility.yul\":13026:13158   */\n    tag_481:\n      pop\n        /* \"#utility.yul\":13172:13181   */\n      div\n      swap1\n        /* \"#utility.yul\":12970:13187   */\n      jump\t// out\n        /* \"#utility.yul\":13192:13360   */\n    tag_342:\n        /* \"#utility.yul\":13265:13274   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":13296:13305   */\n      dup2\n      iszero\n        /* \"#utility.yul\":13313:13328   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":13307:13329   */\n      dup5\n      eq\n        /* \"#utility.yul\":13293:13330   */\n      or\n        /* \"#utility.yul\":13283:13354   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":13334:13352   */\n      tag_337\n      tag_408\n      jump\t// in\n        /* \"#utility.yul\":13365:13493   */\n    tag_345:\n        /* \"#utility.yul\":13432:13441   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":13453:13464   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":13450:13487   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":13467:13485   */\n      tag_337\n      tag_408\n      jump\t// in\n        /* \"#utility.yul\":14677:14927   */\n    tag_409:\n        /* \"#utility.yul\":14762:14763   */\n      0x00\n        /* \"#utility.yul\":14772:14885   */\n    tag_492:\n        /* \"#utility.yul\":14786:14792   */\n      dup4\n        /* \"#utility.yul\":14783:14784   */\n      dup2\n        /* \"#utility.yul\":14780:14793   */\n      lt\n        /* \"#utility.yul\":14772:14885   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":14862:14873   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":14856:14874   */\n      mload\n        /* \"#utility.yul\":14843:14854   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":14836:14875   */\n      mstore\n        /* \"#utility.yul\":14808:14810   */\n      0x20\n        /* \"#utility.yul\":14801:14811   */\n      add\n        /* \"#utility.yul\":14772:14885   */\n      jump(tag_492)\n    tag_494:\n      pop\n      pop\n        /* \"#utility.yul\":14919:14920   */\n      0x00\n        /* \"#utility.yul\":14901:14917   */\n      swap2\n      add\n        /* \"#utility.yul\":14894:14921   */\n      mstore\n        /* \"#utility.yul\":14677:14927   */\n      jump\t// out\n        /* \"#utility.yul\":14932:15219   */\n    tag_376:\n        /* \"#utility.yul\":15061:15064   */\n      0x00\n        /* \"#utility.yul\":15099:15105   */\n      dup3\n        /* \"#utility.yul\":15093:15106   */\n      mload\n        /* \"#utility.yul\":15115:15181   */\n      tag_496\n        /* \"#utility.yul\":15174:15180   */\n      dup2\n        /* \"#utility.yul\":15169:15172   */\n      dup5\n        /* \"#utility.yul\":15162:15166   */\n      0x20\n        /* \"#utility.yul\":15154:15160   */\n      dup8\n        /* \"#utility.yul\":15150:15167   */\n      add\n        /* \"#utility.yul\":15115:15181   */\n      tag_409\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":15197:15213   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":14932:15219   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15582:15978   */\n    tag_398:\n        /* \"#utility.yul\":15731:15733   */\n      0x20\n        /* \"#utility.yul\":15720:15729   */\n      dup2\n        /* \"#utility.yul\":15713:15734   */\n      mstore\n        /* \"#utility.yul\":15694:15698   */\n      0x00\n        /* \"#utility.yul\":15763:15769   */\n      dup3\n        /* \"#utility.yul\":15757:15770   */\n      mload\n        /* \"#utility.yul\":15806:15812   */\n      dup1\n        /* \"#utility.yul\":15801:15803   */\n      0x20\n        /* \"#utility.yul\":15790:15799   */\n      dup5\n        /* \"#utility.yul\":15786:15804   */\n      add\n        /* \"#utility.yul\":15779:15813   */\n      mstore\n        /* \"#utility.yul\":15822:15901   */\n      tag_499\n        /* \"#utility.yul\":15894:15900   */\n      dup2\n        /* \"#utility.yul\":15889:15891   */\n      0x40\n        /* \"#utility.yul\":15878:15887   */\n      dup6\n        /* \"#utility.yul\":15874:15892   */\n      add\n        /* \"#utility.yul\":15869:15871   */\n      0x20\n        /* \"#utility.yul\":15861:15867   */\n      dup8\n        /* \"#utility.yul\":15857:15872   */\n      add\n        /* \"#utility.yul\":15822:15901   */\n      tag_409\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":15962:15964   */\n      0x1f\n        /* \"#utility.yul\":15941:15956   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":15937:15966   */\n      and\n        /* \"#utility.yul\":15922:15967   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":15969:15971   */\n      0x40\n        /* \"#utility.yul\":15918:15972   */\n      add\n      swap3\n        /* \"#utility.yul\":15582:15978   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209dba4f57c07520b17944beb38c6ba8148df32ee9e47df738d03d4e993a9cfb6664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2455": {
									"entryPoint": null,
									"id": 2455,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_42": {
									"entryPoint": null,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_130": {
									"entryPoint": 136,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"panic_error_0x41": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1605:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "228:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "245:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "252:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "257:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "238:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "285:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "278:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "278:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "302:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "468:1135:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "514:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "523:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "516:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "516:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "489:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "498:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "485:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "510:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:32:1"
															},
															"nodeType": "YulIf",
															"src": "478:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "539:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "579:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "549:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "549:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "539:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "598:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "608:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "602:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "619:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "639:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "650:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "635:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "635:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "629:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "629:25:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "619:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "663:39:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "687:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "698:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "683:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "683:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "677:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "677:25:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "667:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "711:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "729:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "733:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "725:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "737:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "721:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "721:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "715:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "766:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "775:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "778:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "768:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "768:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "754:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "762:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:14:1"
															},
															"nodeType": "YulIf",
															"src": "748:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "791:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "805:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "801:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "795:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "871:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "880:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "883:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "873:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "873:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "873:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "850:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "854:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "846:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "846:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "861:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "842:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "842:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:35:1"
															},
															"nodeType": "YulIf",
															"src": "832:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "896:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "912:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "906:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "900:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "938:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "940:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "940:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "940:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "934:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "927:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:10:1"
															},
															"nodeType": "YulIf",
															"src": "924:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "969:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "983:1:1",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "986:2:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:10:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "973:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "998:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1018:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1012:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1012:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1002:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1030:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1052:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "1068:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1072:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1064:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1064:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1081:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1077:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1077:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1060:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1048:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1048:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1034:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1145:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1147:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1147:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1147:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1104:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1116:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1101:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1124:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1136:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1121:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1098:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:46:1"
															},
															"nodeType": "YulIf",
															"src": "1095:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1187:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1176:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1176:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1207:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1218:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1211:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1240:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1248:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1233:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1233:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1260:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1279:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1267:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1267:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1260:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1291:34:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1313:2:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "1317:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1309:11:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1322:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1305:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:20:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "1295:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1357:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1366:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1369:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1359:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1359:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1359:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1340:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1348:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1337:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:19:1"
															},
															"nodeType": "YulIf",
															"src": "1334:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1382:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1397:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1401:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1393:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1386:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1469:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1490:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1525:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "1495:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1495:34:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1483:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1483:47:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1483:47:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1543:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1559:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1550:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1550:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1543:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1424:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1429:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1421:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1421:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1437:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1439:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1450:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1455:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1446:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1439:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1417:3:1",
																"statements": []
															},
															"src": "1413:159:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1581:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1591:6:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1581:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "418:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "429:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "441:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "449:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "457:6:1",
														"type": ""
													}
												],
												"src": "328:1275:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let _1 := 32\n        value1 := mload(add(headStart, _1))\n        let offset := mload(add(headStart, 64))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _1)\n        }\n        value2 := memPtr\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x202E CODESIZE SUB DUP1 PUSH3 0x202E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3E SWAP2 PUSH3 0x18C JUMP JUMPDEST PUSH3 0x49 CALLER PUSH3 0x88 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x3 DUP3 SWAP1 SSTORE DUP1 MLOAD PUSH3 0x7E SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xD8 JUMP JUMPDEST POP POP POP POP PUSH3 0x27E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x130 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x130 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0xF9 JUMP JUMPDEST POP PUSH3 0x13E SWAP3 SWAP2 POP PUSH3 0x142 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x13E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x143 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1AD DUP5 PUSH3 0x159 JUMP JUMPDEST PUSH1 0x20 DUP6 DUP2 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD SWAP3 SWAP6 POP SWAP4 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x1FE JUMPI PUSH3 0x1FE PUSH3 0x176 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH3 0x226 JUMPI PUSH3 0x226 PUSH3 0x176 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP11 DUP4 GT ISZERO PUSH3 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH3 0x26E JUMPI PUSH3 0x25E DUP6 PUSH3 0x159 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH3 0x24A JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1DA0 DUP1 PUSH3 0x28E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C237EEA GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xE4997DC5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xE9E4E160 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xFCF984A9 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xFF7F0CF9 EQ PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C237EEA EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x952977F5 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xA096C5A2 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xB42A275E EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xD55A34E4 EQ PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x512DDCF9 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x512DDCF9 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x69C57352 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x785FA7CE EQ PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x47A5D43 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8CFBC19 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x10603023 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x19C8C1C5 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x476CAA70 EQ PUSH2 0x21D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x192 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x8EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST POP PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST PUSH2 0x170 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0xE3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0xEB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x192 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x23D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x60 PUSH2 0x210 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x23D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x11D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x1309 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x1332 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x1351 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x13CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x4BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x54686973204E4654206973206E6F7420666F722073616C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204E617469766520636F696E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x621 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F74206861766520656E6F75676820746F6B656E73206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x20796F75722062616C616E636520746F20706179 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x66E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646964206E6F7420616C6C6F772074686520636F6E74726163742074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F2073656E642074686520707572636861736520616D6F756E74000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 PUSH2 0x745 PUSH2 0x73D DUP4 PUSH1 0x64 PUSH2 0x1541 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1556 JUMP JUMPDEST SWAP1 POP PUSH2 0x759 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SUB PUSH2 0x781 JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x78D DUP4 DUP4 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x7BB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 CALLER SWAP2 AND DUP5 PUSH2 0x156E JUMP JUMPDEST DUP2 ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E9 CALLER PUSH2 0x7D7 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 SWAP1 DUP6 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x81D SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x84B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH2 0x86E DUP8 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 DUP6 ADD DUP13 SWAP1 MSTORE SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xD369FDCFEB128F60117661EBD8F220B7265C0A04FEE0E9905EB8C6AB2767B9E5 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8F6 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x922 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x970 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA0D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151A1A5CC81A5CC81B9BDD081E5BDD5C88139195 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xA41 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH2 0xA92 DUP2 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x8BF8E8F2F9D065B620F4E940D87122B03DD779D0FFD6A1590572E1E6D0416BEF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x54686973204E4654206973206E6F7420666F722073616C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F74207061696420656E6F75676820666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x73206974656D PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xC05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204552433230000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST CALLVALUE PUSH1 0x0 PUSH2 0xC16 PUSH2 0x73D DUP4 PUSH1 0x64 PUSH2 0x1541 JUMP JUMPDEST SWAP1 POP PUSH2 0xC2A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SUB PUSH2 0xC52 JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0xC5E DUP4 DUP4 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 ISZERO PUSH2 0xCE9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 ISZERO PUSH2 0x8FC MUL SWAP2 DUP6 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xD1D SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE CALLER SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x89F5ADC174562E07C9C9B1CAE7109BBECB21CF9D1B2847E550042B8653C54A0E SWAP2 POP PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xDD3 DUP5 PUSH2 0x15C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xE31 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE13 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE43 PUSH2 0x1638 JUMP JUMPDEST PUSH2 0xE4D PUSH1 0x0 PUSH2 0x1692 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE70 JUMPI PUSH2 0xE70 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0xE98 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xEA2 DUP2 PUSH2 0x1C53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE53 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xFC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1044 JUMPI PUSH2 0xFDE DUP2 PUSH2 0xE4F JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204552433230206E6F7420616C6C6F77656420617320612074726164 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x696E672063757272656E6379 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP9 DUP2 MSTORE CALLER DUP2 DUP6 ADD DUP2 DUP2 MSTORE DUP3 DUP6 ADD DUP11 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE DUP14 DUP12 MSTORE PUSH1 0x5 SWAP1 SWAP9 MSTORE SWAP9 DUP7 SWAP1 KECCAK256 SWAP4 MLOAD DUP5 SSTORE SWAP1 MLOAD DUP4 DUP6 ADD DUP1 SLOAD SWAP2 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x2 DUP5 ADD SSTORE SWAP5 MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP3 DUP9 AND SWAP3 SWAP1 SWAP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP4 SSTORE SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x10F9 SWAP3 SWAP2 ADDRESS SWAP2 DUP10 SWAP2 ADD PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1127 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 POP PUSH2 0x1193 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xA4292E75F7EAFDE90821610C4CABFC298540C274B50A7EA784A529A2B8A4A6F SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x4524387B4311078B7531910A140A6975002B10ACA4CF12255E98DA8F1FF1B35B SWAP1 PUSH1 0x60 ADD PUSH2 0x1186 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F7 JUMPI PUSH2 0x11F7 PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1249 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x1215 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1303 JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x126E JUMPI PUSH2 0x126E PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE DUP3 DUP6 MSTORE PUSH1 0x5 DUP1 DUP6 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 DUP9 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP6 DUP5 SWAP1 MSTORE SWAP1 SWAP4 MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE DUP5 MLOAD SWAP2 SWAP3 POP SWAP1 DUP2 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x12E3 JUMPI PUSH2 0x12E3 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x12FB SWAP1 PUSH2 0x1C53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x124F JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1311 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x133A PUSH2 0x1638 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x134D SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1944 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1359 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x13C7 DUP2 PUSH2 0x1692 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x13D2 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x141B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1462 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD3 SWAP2 SWAP1 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0x14DB PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x150A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xD59F809F461FB2E2CA77F931DC43A9AAAA4295B0ED3C8E6ADC04D0AAB43EEB47 SWAP2 ADD PUSH2 0xAC4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D DUP3 DUP5 PUSH2 0x1CAB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D DUP3 DUP5 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D DUP3 DUP5 PUSH2 0x1CE4 JUMP JUMPDEST PUSH2 0xDD3 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x158F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP5 DUP2 MSTORE SWAP7 DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP4 SWAP1 SWAP2 KECCAK256 SWAP2 MLOAD DUP3 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP4 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1737 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17B4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x11D1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1755 SWAP2 SWAP1 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17C3 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x17CB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x182C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1848 SWAP2 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1885 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x188A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x189B DUP8 DUP4 DUP4 DUP8 PUSH2 0x18A6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1915 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x190E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x190E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST POP DUP2 PUSH2 0x17C3 JUMP JUMPDEST PUSH2 0x17C3 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x192A JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1999 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1999 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1964 JUMP JUMPDEST POP PUSH2 0x19A5 SWAP3 SWAP2 POP PUSH2 0x19A9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x19F7 DUP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x994 DUP2 PUSH2 0x19D7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A7C JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 DUP8 ADD MSTORE DUP7 DUP3 ADD MLOAD DUP8 DUP8 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD AND SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1A36 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1ACA JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1AA5 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1B04 DUP2 PUSH2 0x19D7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B76 JUMPI PUSH2 0x1B76 PUSH2 0x1B0F JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x1B9B JUMPI PUSH2 0x1B9B PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x1BB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x1BDE JUMPI PUSH2 0x1BCF DUP6 PUSH2 0x19EC JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x1BBE JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C65 JUMPI PUSH2 0x1C65 PUSH2 0x1C3D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x994 DUP2 PUSH2 0x19D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1CC8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1550 JUMPI PUSH2 0x1550 PUSH2 0x1C3D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1550 JUMPI PUSH2 0x1550 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D12 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CFA JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1D2D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1D56 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xBA 0x4F JUMPI 0xC0 PUSH22 0x20B17944BEB38C6BA8148DF32EE9E47DF738D03D4E99 GASPRICE SWAP13 0xFB PUSH7 0x64736F6C634300 ADDMOD SLT STOP CALLER ",
							"sourceMap": "48220:10942:0:-:0;;;49052:1;49030:23;;49087:1;49062:26;;50123:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1740:32;736:10;1740:18;:32::i;:::-;50244:9;:25;;-1:-1:-1;;;;;;50244:25:0;-1:-1:-1;;;;;50244:25:0;;;;;50280:9;:22;;;50313:30;;;;:13;;:30;;;;;:::i;:::-;;50123:228;;;48220:10942;;3286:191;3360:16;3379:6;;-1:-1:-1;;;;;3396:17:0;;;-1:-1:-1;;;;;;3396:17:0;;;;;;3429:40;;3379:6;;;;;;;3429:40;;3360:16;3429:40;3349:128;3286:191;:::o;48220:10942::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;48220:10942:0;-1:-1:-1;;;;;48220:10942:0;;;;;;;;;;;-1:-1:-1;48220:10942:0;;;;;;;-1:-1:-1;48220:10942:0;;;-1:-1:-1;48220:10942:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:1;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1275;441:6;449;457;510:2;498:9;489:7;485:23;481:32;478:52;;;526:1;523;516:12;478:52;549:40;579:9;549:40;:::i;:::-;608:2;635:18;;;629:25;698:2;683:18;;677:25;539:50;;-1:-1:-1;629:25:1;-1:-1:-1;608:2:1;-1:-1:-1;;;;;751:14:1;;;748:34;;;778:1;775;768:12;748:34;816:6;805:9;801:22;791:32;;861:7;854:4;850:2;846:13;842:27;832:55;;883:1;880;873:12;832:55;912:2;906:9;934:2;930;927:10;924:36;;;940:18;;:::i;:::-;986:2;983:1;979:10;1018:2;1012:9;1081:2;1077:7;1072:2;1068;1064:11;1060:25;1052:6;1048:38;1136:6;1124:10;1121:22;1116:2;1104:10;1101:18;1098:46;1095:72;;;1147:18;;:::i;:::-;1183:2;1176:22;1233:18;;;1267:15;;;;-1:-1:-1;1309:11:1;;;1305:20;;;1337:19;;;1334:39;;;1369:1;1366;1359:12;1334:39;1393:11;;;;1413:159;1429:6;1424:3;1421:15;1413:159;;;1495:34;1525:3;1495:34;:::i;:::-;1483:47;;1446:12;;;;1550;;;;1413:159;;;1591:6;1581:16;;;;;;;;328:1275;;;;;:::o;:::-;48220:10942:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_440": {
									"entryPoint": 5858,
									"id": 440,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_73": {
									"entryPoint": 5688,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_clearSellToken_2688": {
									"entryPoint": 5574,
									"id": 2688,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_2242": {
									"entryPoint": null,
									"id": 2242,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_130": {
									"entryPoint": 5778,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addBlackList_2469": {
									"entryPoint": 2286,
									"id": 2469,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bankAmountERC20_2612": {
									"entryPoint": 2343,
									"id": 2612,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@bankAmount_2560": {
									"entryPoint": null,
									"id": 2560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@buyNFT_3111": {
									"entryPoint": 2767,
									"id": 3111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyNFTbyERC20_2974": {
									"entryPoint": 1112,
									"id": 2974,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deSellNFT_3262": {
									"entryPoint": 2459,
									"id": 3262,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_1824": {
									"entryPoint": 5441,
									"id": 1824,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_2067": {
									"entryPoint": 6091,
									"id": 2067,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_2003": {
									"entryPoint": 6068,
									"id": 2003,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAllowedERC20_2517": {
									"entryPoint": 3545,
									"id": 2517,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMyTokensAtSale_2701": {
									"entryPoint": null,
									"id": 2701,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokensAtSale_2778": {
									"entryPoint": 4566,
									"id": 2778,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTradeFee_2653": {
									"entryPoint": null,
									"id": 2653,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserTokensAtSale_2711": {
									"entryPoint": null,
									"id": 2711,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isAllowedERC20_2548": {
									"entryPoint": 3663,
									"id": 2548,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isBlacklisted_2495": {
									"entryPoint": null,
									"id": 2495,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_1931": {
									"entryPoint": null,
									"id": 1931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@marketNft_2316": {
									"entryPoint": null,
									"id": 2316,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_1809": {
									"entryPoint": 5462,
									"id": 1809,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_59": {
									"entryPoint": null,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeBlackList_2483": {
									"entryPoint": 4873,
									"id": 2483,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_87": {
									"entryPoint": 3643,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_218": {
									"entryPoint": 5486,
									"id": 218,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@sellNFT_3210": {
									"entryPoint": 3763,
									"id": 3210,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setAllowedERC20_2508": {
									"entryPoint": 4914,
									"id": 2508,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTradeFee_2665": {
									"entryPoint": 2330,
									"id": 2665,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_1794": {
									"entryPoint": 5474,
									"id": 1794,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_110": {
									"entryPoint": 4945,
									"id": 110,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2198": {
									"entryPoint": 6310,
									"id": 2198,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@version_2319": {
									"entryPoint": null,
									"id": 2319,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawBankERC20_2645": {
									"entryPoint": 5066,
									"id": 2645,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawBank_2589": {
									"entryPoint": 5331,
									"id": 2589,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 7276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 6870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7171,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$638__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7415,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6927,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15980:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "315:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "325:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "337:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "348:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "333:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "333:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "325:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "367:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "382:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "398:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "403:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "394:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "394:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "407:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "390:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "390:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "378:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "378:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "360:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "360:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$638__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "295:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "306:4:1",
														"type": ""
													}
												],
												"src": "199:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "467:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "531:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "543:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "533:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "533:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "533:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "490:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "501:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "516:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "521:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "512:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "512:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "525:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "508:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "508:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "497:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "497:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "487:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:50:1"
															},
															"nodeType": "YulIf",
															"src": "477:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "456:5:1",
														"type": ""
													}
												],
												"src": "422:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "607:85:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "617:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "639:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "626:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "617:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "680:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "655:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "655:31:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "597:5:1",
														"type": ""
													}
												],
												"src": "558:134:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "767:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "822:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "825:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "788:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "797:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "784:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "784:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "809:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "780:32:1"
															},
															"nodeType": "YulIf",
															"src": "777:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "838:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "864:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "851:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "842:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "908:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "883:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "883:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "883:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "923:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "933:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "733:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "744:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "756:6:1",
														"type": ""
													}
												],
												"src": "697:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:827:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1164:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1174:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1168:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1185:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1203:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1214:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1199:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1199:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1189:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1233:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1244:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1226:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1226:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1256:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1267:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1260:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1282:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1302:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1296:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1286:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1325:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1333:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1318:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1349:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1359:2:1",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1353:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1370:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1381:9:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1392:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1377:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1370:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1404:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1422:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1430:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1418:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1408:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1442:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1451:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1446:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1510:445:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1524:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1540:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1534:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1534:13:1"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "1528:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1567:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "1578:2:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1572:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1572:9:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1560:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1560:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1560:22:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1595:38:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "1625:2:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1629:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1621:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1621:11:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1615:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1615:18:1"
																		},
																		"variables": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulTypedName",
																				"src": "1599:12:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1646:29:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1664:3:1",
																							"type": "",
																							"value": "160"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1669:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1660:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:11:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1673:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:19:1"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "1650:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1699:3:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1704:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1695:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1695:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "memberValue0",
																							"nodeType": "YulIdentifier",
																							"src": "1713:12:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "1727:2:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1709:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1709:21:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1688:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1688:43:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1688:43:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1755:3:1"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "1760:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1751:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1751:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1775:2:1"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "1779:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1771:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1771:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1765:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1765:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1744:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1744:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1744:40:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1797:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1807:4:1",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "1801:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1835:3:1"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "1840:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1831:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1831:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1859:2:1"
																										},
																										{
																											"name": "_5",
																											"nodeType": "YulIdentifier",
																											"src": "1863:2:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1855:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1855:11:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1849:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1849:18:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "1869:2:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:27:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1824:49:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:49:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1886:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1897:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1902:4:1",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1893:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1893:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1886:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1920:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1934:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1942:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1930:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1930:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1472:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1475:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1469:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1469:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1483:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1485:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1494:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1497:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1490:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1490:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1485:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1465:3:1",
																"statements": []
															},
															"src": "1461:494:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1964:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1972:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1964:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1123:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1134:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1145:4:1",
														"type": ""
													}
												],
												"src": "949:1032:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2087:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2097:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2109:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2120:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2105:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2105:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2097:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2139:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2150:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2132:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2132:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2056:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2067:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2078:4:1",
														"type": ""
													}
												],
												"src": "1986:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2319:507:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2329:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2339:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2333:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2350:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2368:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2379:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2364:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "2354:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2398:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2409:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2391:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2391:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2421:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "2432:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "2425:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2447:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2461:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2461:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2451:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2490:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2498:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2483:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2483:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2483:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2514:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2536:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2521:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2521:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2514:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2548:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2566:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2574:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2562:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2552:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2586:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2595:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2590:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2654:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2675:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2690:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2684:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2684:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2707:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2712:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2703:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2703:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2716:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2699:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2699:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2680:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2680:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2668:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2668:52:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2668:52:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2733:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2744:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2749:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2740:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2740:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2733:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2765:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2779:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2787:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2775:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2775:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2765:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2616:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2619:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2613:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2613:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2627:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2629:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2638:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2641:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2634:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2634:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2629:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2609:3:1",
																"statements": []
															},
															"src": "2605:195:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2809:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2817:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2809:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2288:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2299:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2310:4:1",
														"type": ""
													}
												],
												"src": "2168:658:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2926:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2936:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2948:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2959:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2944:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2936:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2978:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3003:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2996:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2996:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2989:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2989:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2971:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2971:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2971:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2895:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2906:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2917:4:1",
														"type": ""
													}
												],
												"src": "2831:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3127:279:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3173:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3182:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3185:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3175:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3175:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3175:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3148:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3157:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3144:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:32:1"
															},
															"nodeType": "YulIf",
															"src": "3137:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3198:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3221:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3208:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3198:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3240:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3267:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3278:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3263:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3263:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3250:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3250:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3240:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3291:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3321:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3332:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3317:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3317:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3304:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3304:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3295:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3370:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3345:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3345:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3385:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3395:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3385:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3077:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3088:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3100:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3108:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3116:6:1",
														"type": ""
													}
												],
												"src": "3023:383:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3512:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3522:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3534:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3545:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3530:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3530:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3522:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3564:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3579:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3595:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3600:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3591:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3604:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3587:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3587:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3575:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3575:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3557:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3557:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3481:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3492:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3503:4:1",
														"type": ""
													}
												],
												"src": "3411:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3651:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3668:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3675:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3680:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3671:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3671:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3661:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3661:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3708:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3711:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3701:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3701:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3732:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3735:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3725:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3725:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3619:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3846:1026:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3856:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3866:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3860:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3913:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3922:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3925:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3915:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3915:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3915:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3888:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3897:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3884:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3884:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3909:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3880:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:32:1"
															},
															"nodeType": "YulIf",
															"src": "3877:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3938:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3965:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3952:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3952:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3942:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3984:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3994:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3988:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4039:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4048:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4051:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4041:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4041:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4041:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4027:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4035:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4024:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:14:1"
															},
															"nodeType": "YulIf",
															"src": "4021:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4064:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4078:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4089:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4074:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4074:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4068:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4144:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4153:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4156:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4146:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4146:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4146:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4123:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4127:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4119:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4119:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4134:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4115:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4115:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4108:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4108:35:1"
															},
															"nodeType": "YulIf",
															"src": "4105:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4169:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4192:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4179:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4179:16:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4173:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4218:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4220:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4220:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4220:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4210:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4214:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4207:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4207:10:1"
															},
															"nodeType": "YulIf",
															"src": "4204:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4249:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4263:1:1",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4266:2:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4259:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4259:10:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "4253:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4278:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4298:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4292:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4292:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4282:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4310:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4332:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "4348:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4352:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4344:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4344:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4361:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4357:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4357:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4340:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4328:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4314:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4425:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4427:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4427:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4427:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4384:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4396:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4381:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4381:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4404:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4416:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4401:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4401:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4378:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4378:46:1"
															},
															"nodeType": "YulIf",
															"src": "4375:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4467:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4456:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4487:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4498:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4491:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4520:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4528:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4513:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4513:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4513:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4540:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4551:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4559:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4547:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4547:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4540:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4571:34:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "4593:2:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "4597:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4589:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4589:11:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4602:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4585:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4585:20:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4575:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4637:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4646:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4649:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4639:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4639:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4639:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4620:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4628:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4617:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4617:19:1"
															},
															"nodeType": "YulIf",
															"src": "4614:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4662:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4677:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4681:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4673:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4673:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4666:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4749:92:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4770:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4794:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "4775:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4775:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4763:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4763:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4763:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4812:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4823:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4828:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4819:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4819:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4812:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4704:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4709:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4701:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4717:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4719:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4730:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4735:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4726:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4726:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4719:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4697:3:1",
																"statements": []
															},
															"src": "4693:148:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4850:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4860:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4850:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3812:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3823:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3835:6:1",
														"type": ""
													}
												],
												"src": "3751:1121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5051:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5068:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5079:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5061:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5061:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5061:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5102:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5113:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5098:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5098:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5118:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5091:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5091:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5141:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5152:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5137:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5137:18:1"
																	},
																	{
																		"hexValue": "54686973204e4654206973206e6f7420666f722073616c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5157:26:1",
																		"type": "",
																		"value": "This NFT is not for sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5193:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5216:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5201:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5201:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5193:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5028:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5042:4:1",
														"type": ""
													}
												],
												"src": "4877:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5404:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5421:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5432:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5455:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5466:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5451:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5451:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5471:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5444:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5444:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5444:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5494:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5505:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5490:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5490:18:1"
																	},
																	{
																		"hexValue": "5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5510:34:1",
																		"type": "",
																		"value": "This token selled by Native coin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5483:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5483:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5483:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5554:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5566:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5577:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5562:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5562:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5554:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5381:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5395:4:1",
														"type": ""
													}
												],
												"src": "5230:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5672:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5720:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5720:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5693:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5702:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5689:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5689:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5714:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5685:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:32:1"
															},
															"nodeType": "YulIf",
															"src": "5682:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5743:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5759:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5753:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5753:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5743:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5638:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5649:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5661:6:1",
														"type": ""
													}
												],
												"src": "5591:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5954:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5971:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5964:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5964:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5964:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6005:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6016:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6001:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6021:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5994:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5994:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6044:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6055:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6040:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6040:18:1"
																	},
																	{
																		"hexValue": "596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6060:34:1",
																		"type": "",
																		"value": "You do not have enough tokens on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6033:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6033:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6115:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6126:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6111:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6111:18:1"
																	},
																	{
																		"hexValue": "20796f75722062616c616e636520746f20706179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6131:22:1",
																		"type": "",
																		"value": " your balance to pay"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6104:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6104:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6163:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6175:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6186:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6171:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6163:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5931:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5945:4:1",
														"type": ""
													}
												],
												"src": "5780:416:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6330:175:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6340:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6352:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6363:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6348:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6348:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6340:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6375:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6393:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6398:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6389:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6389:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6402:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6385:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6385:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6379:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6420:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6435:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6443:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6431:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6431:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6413:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6413:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6478:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6463:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6487:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6495:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6483:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6483:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6456:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6291:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6302:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6310:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6321:4:1",
														"type": ""
													}
												],
												"src": "6201:304:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6684:248:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6701:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6712:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6694:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6694:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6735:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6746:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6731:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6751:2:1",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6724:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6724:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6774:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6785:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6770:18:1"
																	},
																	{
																		"hexValue": "596f7520646964206e6f7420616c6c6f772074686520636f6e74726163742074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6790:34:1",
																		"type": "",
																		"value": "You did not allow the contract t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6763:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6763:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6763:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6845:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6856:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6841:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6841:18:1"
																	},
																	{
																		"hexValue": "6f2073656e642074686520707572636861736520616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6861:28:1",
																		"type": "",
																		"value": "o send the purchase amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6834:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6834:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6834:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6899:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6911:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6922:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6907:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6907:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6899:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6661:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6675:4:1",
														"type": ""
													}
												],
												"src": "6510:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7094:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7104:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7116:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7127:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7112:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7112:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7104:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7139:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7162:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7149:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7149:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7143:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7184:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7199:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7207:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7195:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7177:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7177:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7177:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7231:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7242:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7227:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7227:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7251:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7259:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7247:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7247:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7220:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7220:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7220:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7283:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7294:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7279:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7299:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7272:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7272:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7047:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7058:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7066:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7074:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7085:4:1",
														"type": ""
													}
												],
												"src": "6937:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7530:315:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7540:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7552:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7563:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7548:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7548:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7540:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7576:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7594:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7599:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7590:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7590:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7603:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7586:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7586:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7580:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7621:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7636:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7644:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7632:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7632:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7614:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7614:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7614:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7668:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7679:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7664:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7664:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7688:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7696:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7684:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7684:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7657:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7657:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7657:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7720:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7731:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7716:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7736:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7709:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7709:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7763:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7774:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7759:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7759:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "7783:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7791:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7779:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7779:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7752:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7752:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7752:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7815:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7826:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7811:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7811:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7832:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7804:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7804:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7804:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7467:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7478:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7486:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7494:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7502:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7510:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7521:4:1",
														"type": ""
													}
												],
												"src": "7317:528:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8024:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8041:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8052:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8034:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8034:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8075:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8086:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8071:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8071:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8091:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8064:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8064:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8114:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8125:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8110:18:1"
																	},
																	{
																		"hexValue": "54686973206973206e6f7420796f7572204e4654",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8130:22:1",
																		"type": "",
																		"value": "This is not your NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8103:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8103:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8103:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8162:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8174:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8185:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8170:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8170:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8162:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8001:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8015:4:1",
														"type": ""
													}
												],
												"src": "7850:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8328:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8338:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8350:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8361:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8346:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8346:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8338:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8380:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8395:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8411:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8416:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8407:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8407:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8420:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8403:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8403:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8391:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8391:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8373:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8373:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8373:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8455:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8440:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8460:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8433:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8433:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8289:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8300:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8308:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8319:4:1",
														"type": ""
													}
												],
												"src": "8199:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8652:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8669:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8680:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8662:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8662:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8662:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8703:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8714:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8699:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8699:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8719:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8692:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8692:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8692:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8742:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8753:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8738:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8738:18:1"
																	},
																	{
																		"hexValue": "596f752068617665206e6f74207061696420656e6f75676820666f7220746869",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8758:34:1",
																		"type": "",
																		"value": "You have not paid enough for thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8731:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8731:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8731:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8813:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8824:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8809:18:1"
																	},
																	{
																		"hexValue": "73206974656d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8829:8:1",
																		"type": "",
																		"value": "s item"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8802:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8802:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8802:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8847:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8859:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8870:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8855:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8855:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8847:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8629:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8643:4:1",
														"type": ""
													}
												],
												"src": "8478:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9059:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9076:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9087:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9069:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9069:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9069:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9110:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9121:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9106:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9126:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9099:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9099:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9099:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9149:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9160:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9145:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9145:18:1"
																	},
																	{
																		"hexValue": "5468697320746f6b656e2073656c6c6564206279204552433230",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9165:28:1",
																		"type": "",
																		"value": "This token selled by ERC20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9138:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9138:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9138:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9203:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9215:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9226:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9211:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9211:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9203:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9036:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9050:4:1",
														"type": ""
													}
												],
												"src": "8885:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9425:262:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9435:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9447:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9458:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9443:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9435:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9471:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9489:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9494:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9485:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9485:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9498:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9481:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9475:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9516:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9531:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9539:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9527:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9527:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9509:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9509:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9509:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9563:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9574:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9559:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9559:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9583:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9591:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9579:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9579:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9552:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9552:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9552:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9615:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9626:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9611:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9631:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9604:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9604:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9604:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9658:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9669:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9654:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9674:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9647:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9647:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9370:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9381:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9389:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9397:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9405:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9416:4:1",
														"type": ""
													}
												],
												"src": "9240:447:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9724:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9741:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9748:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9753:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9744:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9744:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9734:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9734:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9734:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9781:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9784:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9774:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9774:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9774:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9805:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9808:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9798:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9798:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9798:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9692:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9856:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9873:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9880:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9885:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9876:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9866:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9866:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9866:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9913:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9916:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9906:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9906:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9937:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9940:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9930:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9930:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9930:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9824:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10003:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10034:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10036:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10036:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10036:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10019:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10030:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10026:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10026:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10016:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10016:17:1"
															},
															"nodeType": "YulIf",
															"src": "10013:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10065:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10076:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10083:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10072:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10072:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10065:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9985:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9995:3:1",
														"type": ""
													}
												],
												"src": "9956:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10177:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10223:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10232:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10235:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10225:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10225:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10225:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10198:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10207:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10194:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10194:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10219:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10190:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10190:32:1"
															},
															"nodeType": "YulIf",
															"src": "10187:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10248:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10267:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10261:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10261:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10252:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10311:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "10286:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10286:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10286:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10326:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10336:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10326:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10143:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10154:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10166:6:1",
														"type": ""
													}
												],
												"src": "10096:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10526:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10543:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10554:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10536:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10536:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10577:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10588:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10573:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10593:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10566:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10566:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10566:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10616:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10627:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10612:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10612:18:1"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10632:27:1",
																		"type": "",
																		"value": "You don't own this token!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10605:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10605:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10605:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10669:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10692:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10677:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10677:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10669:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10503:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10517:4:1",
														"type": ""
													}
												],
												"src": "10352:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10880:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10897:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10908:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10890:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10931:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10942:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10927:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10927:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10947:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10920:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10920:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10920:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10970:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10981:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10966:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10966:18:1"
																	},
																	{
																		"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10986:33:1",
																		"type": "",
																		"value": "Price must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10959:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10959:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10959:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11029:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11041:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11052:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11037:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11037:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11029:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10857:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10871:4:1",
														"type": ""
													}
												],
												"src": "10706:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11240:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11257:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11268:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11250:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11250:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11250:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11291:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11302:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11287:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11287:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11307:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11280:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11280:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11280:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11330:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11341:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11326:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11326:18:1"
																	},
																	{
																		"hexValue": "54686973204552433230206e6f7420616c6c6f77656420617320612074726164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11346:34:1",
																		"type": "",
																		"value": "This ERC20 not allowed as a trad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11319:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11319:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11319:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11401:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11412:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11397:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11397:18:1"
																	},
																	{
																		"hexValue": "696e672063757272656e6379",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11417:14:1",
																		"type": "",
																		"value": "ing currency"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11390:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11390:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11390:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11441:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11453:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11464:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11449:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11449:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11441:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11217:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11231:4:1",
														"type": ""
													}
												],
												"src": "11066:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11664:262:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11674:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11686:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11697:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11682:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11682:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11674:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11710:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11728:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11733:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11724:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11724:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11737:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11720:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11720:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11714:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11755:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11770:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11778:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11766:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11766:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11748:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11748:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11802:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11813:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11798:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11798:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11818:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11791:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11791:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11845:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11856:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11841:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11841:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "11865:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11873:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11861:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11861:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11834:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11834:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11834:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11897:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11908:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11893:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11913:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11886:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11886:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11609:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11620:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11628:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11636:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11655:4:1",
														"type": ""
													}
												],
												"src": "11479:447:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12088:188:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12098:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12110:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12121:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12106:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12106:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12098:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12140:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12155:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12171:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12176:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "12167:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12167:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12180:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "12163:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12163:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12151:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12133:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12133:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12133:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12204:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12215:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12200:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12220:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12193:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12193:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12247:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12258:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12243:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12263:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12236:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12236:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12041:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12052:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12060:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12068:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12079:4:1",
														"type": ""
													}
												],
												"src": "11931:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12455:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12472:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12483:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12465:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12465:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12465:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12506:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12517:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12502:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12522:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12495:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12495:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12545:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12556:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12541:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12541:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12561:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12534:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12534:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12534:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12616:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12627:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12612:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12612:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12632:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12605:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12605:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12605:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12650:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12662:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12673:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12658:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12658:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12650:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12432:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12446:4:1",
														"type": ""
													}
												],
												"src": "12281:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12766:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12812:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12821:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12824:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12814:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12814:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12814:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12787:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12796:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12783:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12783:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12808:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12779:32:1"
															},
															"nodeType": "YulIf",
															"src": "12776:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12837:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12856:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12850:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12850:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12841:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12919:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12928:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12931:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12921:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12921:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12921:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12888:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "12909:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "12902:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12902:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12895:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12895:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12885:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12885:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12878:40:1"
															},
															"nodeType": "YulIf",
															"src": "12875:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12944:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12954:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12944:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12732:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12743:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12755:6:1",
														"type": ""
													}
												],
												"src": "12688:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13016:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13047:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13068:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13075:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13080:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "13071:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13071:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13061:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13061:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13061:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13112:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13115:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13105:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13105:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13105:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13140:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13143:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13133:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13133:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13133:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13036:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13029:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13029:9:1"
															},
															"nodeType": "YulIf",
															"src": "13026:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13167:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13176:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13179:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13172:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13172:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13167:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13001:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13004:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13010:1:1",
														"type": ""
													}
												],
												"src": "12970:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13244:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13254:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13269:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13272:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13265:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13265:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13254:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13332:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13334:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13334:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13334:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13303:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13296:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13296:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13310:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "13317:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "13326:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "13313:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13313:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "13307:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13307:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "13293:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13293:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13286:45:1"
															},
															"nodeType": "YulIf",
															"src": "13283:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13223:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13226:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13232:7:1",
														"type": ""
													}
												],
												"src": "13192:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13414:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13424:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13436:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13439:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13432:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13432:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13424:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13465:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13467:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13467:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13467:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13456:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13462:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13453:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13453:11:1"
															},
															"nodeType": "YulIf",
															"src": "13450:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13396:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13399:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13405:4:1",
														"type": ""
													}
												],
												"src": "13365:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13672:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13689:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13700:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13682:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13682:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13682:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13723:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13734:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13719:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13739:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13712:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13712:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13762:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13773:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13758:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13778:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13751:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13751:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13822:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13834:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13845:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13830:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13830:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13822:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13649:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13663:4:1",
														"type": ""
													}
												],
												"src": "13498:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14033:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14050:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14043:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14043:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14043:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14084:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14095:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14080:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14080:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14100:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14073:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14073:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14123:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14134:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14119:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14119:18:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14139:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14112:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14112:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14112:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14194:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14205:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14190:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14190:18:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14210:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14183:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14183:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14232:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14244:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14255:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14240:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14232:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14010:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14024:4:1",
														"type": ""
													}
												],
												"src": "13859:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14444:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14461:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14472:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14454:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14454:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14454:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14495:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14506:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14491:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14511:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14484:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14484:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14484:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14534:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14545:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14530:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14530:18:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14550:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14523:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14523:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14605:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14616:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14601:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14601:18:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14621:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14594:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14594:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14594:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14639:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14651:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14662:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14647:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14647:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14639:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14421:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14435:4:1",
														"type": ""
													}
												],
												"src": "14270:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14743:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14753:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14762:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14757:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14822:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14847:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14852:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14843:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14843:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14866:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14871:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14862:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14862:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14856:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14856:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14836:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14836:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14836:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14783:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14786:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14780:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14780:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14794:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14796:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14805:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14808:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14801:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14801:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14796:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14776:3:1",
																"statements": []
															},
															"src": "14772:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "14905:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14910:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14901:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14901:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14919:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14894:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14894:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14894:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14721:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14726:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14731:6:1",
														"type": ""
													}
												],
												"src": "14677:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15069:150:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15079:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15099:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15093:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15093:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15083:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15154:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15162:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15150:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15150:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15169:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15174:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15115:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15115:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15115:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15190:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15201:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15206:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15197:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15197:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15190:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15045:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15050:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15061:3:1",
														"type": ""
													}
												],
												"src": "14932:287:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15398:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15415:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15426:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15408:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15408:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15449:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15460:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15445:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15445:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15465:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15438:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15438:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15438:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15488:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15499:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15484:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15484:18:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15504:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15477:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15477:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15477:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15545:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15557:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15568:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15553:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15553:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15545:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15375:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15389:4:1",
														"type": ""
													}
												],
												"src": "15224:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15703:275:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15720:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15731:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15713:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15713:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15713:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15743:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15763:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15757:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15757:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15747:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15790:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15801:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15786:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15786:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15806:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15779:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15779:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15779:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15861:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15869:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15857:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15878:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15889:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15874:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15874:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15894:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15822:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15822:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15822:79:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15910:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15926:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "15945:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15953:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15941:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15941:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15962:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "15958:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15958:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "15937:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15937:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15922:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15922:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15969:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15918:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15918:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15910:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15672:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15683:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15694:4:1",
														"type": ""
													}
												],
												"src": "15582:396:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$638__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, mload(_3))\n            let memberValue0 := mload(add(_3, _1))\n            let _4 := sub(shl(160, 1), 1)\n            mstore(add(pos, _1), and(memberValue0, _4))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _5 := 0x60\n            mstore(add(pos, _5), and(mload(add(_3, _5)), _4))\n            pos := add(pos, 0x80)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"This NFT is not for sale\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"This token selled by Native coin\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"You do not have enough tokens on\")\n        mstore(add(headStart, 96), \" your balance to pay\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"You did not allow the contract t\")\n        mstore(add(headStart, 96), \"o send the purchase amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"This is not your NFT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"You have not paid enough for thi\")\n        mstore(add(headStart, 96), \"s item\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"This token selled by ERC20\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"You don't own this token!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Price must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"This ERC20 not allowed as a trad\")\n        mstore(add(headStart, 96), \"ing currency\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061014b5760003560e01c80637c237eea116100b6578063e4997dc51161006f578063e4997dc51461038a578063e9e4e160146103aa578063f2fde38b146103ca578063fcf984a9146103ea578063fe575a871461040a578063ff7f0cf91461044357600080fd5b80637c237eea146102fb5780638da5cb5b1461031b578063952977f514610339578063a096c5a21461034e578063b42a275e14610362578063d55a34e41461037557600080fd5b8063512ddcf911610108578063512ddcf91461024b57806351ed82881461026b57806354fd4d501461027e57806369c5735214610294578063715018a6146102b6578063785fa7ce146102cb57600080fd5b8063047a5d431461015057806308cfbc19146101725780630ecb93c0146101af57806310603023146101cf57806319c8c1c5146101ef578063476caa701461021d575b600080fd5b34801561015c57600080fd5b5061017061016b3660046119be565b610458565b005b34801561017e57600080fd5b50600154610192906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101bb57600080fd5b506101706101ca3660046119fc565b6108ee565b3480156101db57600080fd5b506101706101ea3660046119be565b61091a565b3480156101fb57600080fd5b5061021061020a3660046119fc565b50606090565b6040516101a69190611a19565b34801561022957600080fd5b5061023d6102383660046119fc565b610927565b6040519081526020016101a6565b34801561025757600080fd5b506101706102663660046119be565b61099b565b6101706102793660046119be565b610acf565b34801561028a57600080fd5b5061023d60025481565b3480156102a057600080fd5b506102a9610dd9565b6040516101a69190611a89565b3480156102c257600080fd5b50610170610e3b565b3480156102d757600080fd5b506102eb6102e63660046119fc565b610e4f565b60405190151581526020016101a6565b34801561030757600080fd5b50610170610316366004611ad6565b610eb3565b34801561032757600080fd5b506000546001600160a01b0316610192565b34801561034557600080fd5b5060035461023d565b34801561035a57600080fd5b506060610210565b34801561036e57600080fd5b504761023d565b34801561038157600080fd5b506102106111d6565b34801561039657600080fd5b506101706103a53660046119fc565b611309565b3480156103b657600080fd5b506101706103c5366004611b25565b611332565b3480156103d657600080fd5b506101706103e53660046119fc565b611351565b3480156103f657600080fd5b506101706104053660046119fc565b6113ca565b34801561041657600080fd5b506102eb6104253660046119fc565b6001600160a01b031660009081526006602052604090205460ff1690565b34801561044f57600080fd5b506101706114d3565b60008181526004602052604090205460ff1615156001146104bb5760405162461bcd60e51b815260206004820152601860248201527754686973204e4654206973206e6f7420666f722073616c6560401b60448201526064015b60405180910390fd5b6000818152600560205260409020600301546001600160a01b03166105225760405162461bcd60e51b815260206004820181905260248201527f5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e60448201526064016104b2565b6000818152600560205260408082206003015490516370a0823160e01b81523360048201526001600160a01b03909116919082906370a0823190602401602060405180830381865afa15801561057c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a09190611bea565b6000848152600560205260409020600201549091508110156106215760405162461bcd60e51b815260206004820152603460248201527f596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e60448201527320796f75722062616c616e636520746f2070617960601b60648201526084016104b2565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106929190611bea565b60008581526005602052604090206002015490915081101561071c5760405162461bcd60e51b815260206004820152603a60248201527f596f7520646964206e6f7420616c6c6f772074686520636f6e7472616374207460448201527f6f2073656e642074686520707572636861736520616d6f756e7400000000000060648201526084016104b2565b6000848152600560205260408120600201549061074561073d836064611541565b600354611556565b90506107596000546001600160a01b031690565b6000878152600560205260409020600101546001600160a01b03918216911603610781575060005b600061078d8383611562565b6000888152600560205260409020600101549091506107bb906001600160a01b03888116913391168461156e565b81156107e9576107e9336107d76000546001600160a01b031690565b6001600160a01b03891691908561156e565b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061081d90309033908c90600401611c03565b600060405180830381600087803b15801561083757600080fd5b505af115801561084b573d6000803e3d6000fd5b5050506000888152600460205260409020805460ff191690555061086e876115c6565b6000878152600560209081526040918290206001810154600382015460029092015484516001600160a01b03928316815233948101949094528385018c905291166060830152608082015290517fd369fdcfeb128f60117661ebd8f220b7265c0a04fee0e9905eb8c6ab2767b9e59181900360a00190a150505050505050565b6108f6611638565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b610922611638565b600355565b6040516370a0823160e01b815230600482015260009082906001600160a01b038216906370a0823190602401602060405180830381865afa158015610970573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109949190611bea565b9392505050565b6000546001600160a01b03163314610a0d576000818152600560205260409020600101546001600160a01b03163314610a0d5760405162461bcd60e51b8152602060048201526014602482015273151a1a5cc81a5cc81b9bdd081e5bdd5c8813919560621b60448201526064016104b2565b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610a4190309033908690600401611c03565b600060405180830381600087803b158015610a5b57600080fd5b505af1158015610a6f573d6000803e3d6000fd5b5050506000828152600460205260409020805460ff1916905550610a92816115c6565b60408051338152602081018390527f8bf8e8f2f9d065b620f4e940d87122b03dd779d0ffd6a1590572e1e6d0416bef91015b60405180910390a150565b60008181526004602052604090205460ff161515600114610b2d5760405162461bcd60e51b815260206004820152601860248201527754686973204e4654206973206e6f7420666f722073616c6560401b60448201526064016104b2565b600081815260056020526040902060020154341015610b9d5760405162461bcd60e51b815260206004820152602660248201527f596f752068617665206e6f74207061696420656e6f75676820666f722074686960448201526573206974656d60d01b60648201526084016104b2565b6000818152600560205260409020600301546001600160a01b031615610c055760405162461bcd60e51b815260206004820152601a60248201527f5468697320746f6b656e2073656c6c656420627920455243323000000000000060448201526064016104b2565b346000610c1661073d836064611541565b9050610c2a6000546001600160a01b031690565b6000848152600560205260409020600101546001600160a01b03918216911603610c52575060005b6000610c5e8383611562565b6000858152600560205260408082206001015490519293506001600160a01b03169183156108fc0291849190818181858888f19350505050158015610ca7573d6000803e3d6000fd5b508115610ce957600080546040516001600160a01b039091169184156108fc02918591818181858888f19350505050158015610ce7573d6000803e3d6000fd5b505b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610d1d90309033908990600401611c03565b600060405180830381600087803b158015610d3757600080fd5b505af1158015610d4b573d6000803e3d6000fd5b5050506000858152600460209081526040808320805460ff191690556005825291829020600181015460029091015483516001600160a01b039092168252339282019290925291820187905260608201527f89f5adc174562e07c9c9b1cae7109bbecb21cf9d1b2847e550042b8653c54a0e915060800160405180910390a1610dd3846115c6565b50505050565b60606007805480602002602001604051908101604052809291908181526020018280548015610e3157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e13575b5050505050905090565b610e43611638565b610e4d6000611692565b565b6000805b600754811015610eaa5760078181548110610e7057610e70611c27565b6000918252602090912001546001600160a01b0390811690841603610e985750600192915050565b80610ea281611c53565b915050610e53565b50600092915050565b6001546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa158015610efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f209190611c6c565b6001600160a01b031614610f765760405162461bcd60e51b815260206004820152601960248201527f596f7520646f6e2774206f776e207468697320746f6b656e210000000000000060448201526064016104b2565b60008211610fc65760405162461bcd60e51b815260206004820152601f60248201527f5072696365206d7573742062652067726561746572207468616e207a65726f0060448201526064016104b2565b6001600160a01b0381161561104457610fde81610e4f565b15156001146110445760405162461bcd60e51b815260206004820152602c60248201527f54686973204552433230206e6f7420616c6c6f7765642061732061207472616460448201526b696e672063757272656e637960a01b60648201526084016104b2565b6000838152600460208181526040808420805460ff191660019081179091558151608081018352888152338185018181528285018a81526001600160a01b038a8116606086019081528d8b526005909852988690209351845590518385018054918a166001600160a01b03199283161790559051600284015594516003909201805492881692909516919091179093555490516323b872dd60e01b81529316926323b872dd926110f992913091899101611c03565b600060405180830381600087803b15801561111357600080fd5b505af1158015611127573d6000803e3d6000fd5b5050506001600160a01b03821690506111935760408051338152602081018590526001600160a01b03831691810191909152606081018390527f0a4292e75f7eafde90821610c4cabfc298540c274b50a7ea784a529a2b8a4a6f906080015b60405180910390a1505050565b60408051338152602081018590529081018390527f4524387b4311078b7531910a140a6975002b10aca4cf12255e98da8f1ff1b35b90606001611186565b505050565b60085460609060009067ffffffffffffffff8111156111f7576111f7611b0f565b60405190808252806020026020018201604052801561124957816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816112155790505b50905060005b6008548110156113035760006008828154811061126e5761126e611c27565b600091825260208083209091015460408051608081018252828152828552600580855282862060018101546001600160a01b039081168488015260028201549484019490945295849052909352600390930154909216606082015284519192509081908590859081106112e3576112e3611c27565b6020026020010181905250505080806112fb90611c53565b91505061124f565b50919050565b611311611638565b6001600160a01b03166000908152600660205260409020805460ff19169055565b61133a611638565b805161134d906007906020840190611944565b5050565b611359611638565b6001600160a01b0381166113be5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b2565b6113c781611692565b50565b6113d2611638565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561141b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143f9190611bea565b9050816001600160a01b031663a9059cbb6114626000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156114af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd39190611c89565b6114db611638565b6040514790339082156108fc029083906000818181858888f1935050505015801561150a573d6000803e3d6000fd5b5060408051338152602081018390527fd59f809f461fb2e2ca77f931dc43a9aaaa4295b0ed3c8e6adc04d0aab43eeb479101610ac4565b600061154d8284611cab565b90505b92915050565b600061154d8284611ccd565b600061154d8284611ce4565b610dd3846323b872dd60e01b85858560405160240161158f93929190611c03565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526116e2565b6040805160808101825260008082526020808301828152838501838152606085018481529684526005909252939091209151825591516001820180546001600160a01b039283166001600160a01b03199182161790915592516002830155925160039091018054919093169116179055565b6000546001600160a01b03163314610e4d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611737826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117b49092919063ffffffff16565b8051909150156111d157808060200190518101906117559190611c89565b6111d15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104b2565b60606117c384846000856117cb565b949350505050565b60608247101561182c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104b2565b600080866001600160a01b031685876040516118489190611d1b565b60006040518083038185875af1925050503d8060008114611885576040519150601f19603f3d011682016040523d82523d6000602084013e61188a565b606091505b509150915061189b878383876118a6565b979650505050505050565b6060831561191557825160000361190e576001600160a01b0385163b61190e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104b2565b50816117c3565b6117c3838381511561192a5781518083602001fd5b8060405162461bcd60e51b81526004016104b29190611d37565b828054828255906000526020600020908101928215611999579160200282015b8281111561199957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611964565b506119a59291506119a9565b5090565b5b808211156119a557600081556001016119aa565b6000602082840312156119d057600080fd5b5035919050565b6001600160a01b03811681146113c757600080fd5b80356119f7816119d7565b919050565b600060208284031215611a0e57600080fd5b8135610994816119d7565b602080825282518282018190526000919060409081850190868401855b82811015611a7c57815180518552868101516001600160a01b03908116888701528682015187870152606091820151169085015260809093019290850190600101611a36565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611aca5783516001600160a01b031683529284019291840191600101611aa5565b50909695505050505050565b600080600060608486031215611aeb57600080fd5b83359250602084013591506040840135611b04816119d7565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215611b3857600080fd5b823567ffffffffffffffff80821115611b5057600080fd5b818501915085601f830112611b6457600080fd5b813581811115611b7657611b76611b0f565b8060051b604051601f19603f83011681018181108582111715611b9b57611b9b611b0f565b604052918252848201925083810185019188831115611bb957600080fd5b938501935b82851015611bde57611bcf856119ec565b84529385019392850192611bbe565b98975050505050505050565b600060208284031215611bfc57600080fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611c6557611c65611c3d565b5060010190565b600060208284031215611c7e57600080fd5b8151610994816119d7565b600060208284031215611c9b57600080fd5b8151801515811461099457600080fd5b600082611cc857634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761155057611550611c3d565b8181038181111561155057611550611c3d565b60005b83811015611d12578181015183820152602001611cfa565b50506000910152565b60008251611d2d818460208701611cf7565b9190910192915050565b6020815260008251806020840152611d56816040850160208701611cf7565b601f01601f1916919091016040019291505056fea26469706673582212209dba4f57c07520b17944beb38c6ba8148df32ee9e47df738d03d4e993a9cfb6664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C237EEA GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xE4997DC5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xE9E4E160 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xFCF984A9 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xFF7F0CF9 EQ PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C237EEA EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x952977F5 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xA096C5A2 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xB42A275E EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xD55A34E4 EQ PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x512DDCF9 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x512DDCF9 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x69C57352 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x785FA7CE EQ PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x47A5D43 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8CFBC19 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x10603023 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x19C8C1C5 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x476CAA70 EQ PUSH2 0x21D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x192 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x8EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST POP PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST PUSH2 0x170 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0xE3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0xEB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x192 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x23D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x60 PUSH2 0x210 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x23D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x11D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x1309 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x1332 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x1351 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x13CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x4BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x54686973204E4654206973206E6F7420666F722073616C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204E617469766520636F696E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x621 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F74206861766520656E6F75676820746F6B656E73206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x20796F75722062616C616E636520746F20706179 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x66E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646964206E6F7420616C6C6F772074686520636F6E74726163742074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F2073656E642074686520707572636861736520616D6F756E74000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 PUSH2 0x745 PUSH2 0x73D DUP4 PUSH1 0x64 PUSH2 0x1541 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1556 JUMP JUMPDEST SWAP1 POP PUSH2 0x759 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SUB PUSH2 0x781 JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x78D DUP4 DUP4 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x7BB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 CALLER SWAP2 AND DUP5 PUSH2 0x156E JUMP JUMPDEST DUP2 ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E9 CALLER PUSH2 0x7D7 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 SWAP1 DUP6 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x81D SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x84B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH2 0x86E DUP8 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 DUP6 ADD DUP13 SWAP1 MSTORE SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xD369FDCFEB128F60117661EBD8F220B7265C0A04FEE0E9905EB8C6AB2767B9E5 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8F6 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x922 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x970 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA0D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151A1A5CC81A5CC81B9BDD081E5BDD5C88139195 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xA41 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH2 0xA92 DUP2 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x8BF8E8F2F9D065B620F4E940D87122B03DD779D0FFD6A1590572E1E6D0416BEF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x54686973204E4654206973206E6F7420666F722073616C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F74207061696420656E6F75676820666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x73206974656D PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xC05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204552433230000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST CALLVALUE PUSH1 0x0 PUSH2 0xC16 PUSH2 0x73D DUP4 PUSH1 0x64 PUSH2 0x1541 JUMP JUMPDEST SWAP1 POP PUSH2 0xC2A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SUB PUSH2 0xC52 JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0xC5E DUP4 DUP4 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 ISZERO PUSH2 0xCE9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 ISZERO PUSH2 0x8FC MUL SWAP2 DUP6 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xD1D SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE CALLER SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x89F5ADC174562E07C9C9B1CAE7109BBECB21CF9D1B2847E550042B8653C54A0E SWAP2 POP PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xDD3 DUP5 PUSH2 0x15C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xE31 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE13 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE43 PUSH2 0x1638 JUMP JUMPDEST PUSH2 0xE4D PUSH1 0x0 PUSH2 0x1692 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE70 JUMPI PUSH2 0xE70 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0xE98 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xEA2 DUP2 PUSH2 0x1C53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE53 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xFC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1044 JUMPI PUSH2 0xFDE DUP2 PUSH2 0xE4F JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204552433230206E6F7420616C6C6F77656420617320612074726164 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x696E672063757272656E6379 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP9 DUP2 MSTORE CALLER DUP2 DUP6 ADD DUP2 DUP2 MSTORE DUP3 DUP6 ADD DUP11 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE DUP14 DUP12 MSTORE PUSH1 0x5 SWAP1 SWAP9 MSTORE SWAP9 DUP7 SWAP1 KECCAK256 SWAP4 MLOAD DUP5 SSTORE SWAP1 MLOAD DUP4 DUP6 ADD DUP1 SLOAD SWAP2 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x2 DUP5 ADD SSTORE SWAP5 MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP3 DUP9 AND SWAP3 SWAP1 SWAP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP4 SSTORE SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x10F9 SWAP3 SWAP2 ADDRESS SWAP2 DUP10 SWAP2 ADD PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1127 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 POP PUSH2 0x1193 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xA4292E75F7EAFDE90821610C4CABFC298540C274B50A7EA784A529A2B8A4A6F SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x4524387B4311078B7531910A140A6975002B10ACA4CF12255E98DA8F1FF1B35B SWAP1 PUSH1 0x60 ADD PUSH2 0x1186 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F7 JUMPI PUSH2 0x11F7 PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1249 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x1215 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1303 JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x126E JUMPI PUSH2 0x126E PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE DUP3 DUP6 MSTORE PUSH1 0x5 DUP1 DUP6 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 DUP9 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP6 DUP5 SWAP1 MSTORE SWAP1 SWAP4 MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE DUP5 MLOAD SWAP2 SWAP3 POP SWAP1 DUP2 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x12E3 JUMPI PUSH2 0x12E3 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x12FB SWAP1 PUSH2 0x1C53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x124F JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1311 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x133A PUSH2 0x1638 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x134D SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1944 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1359 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x13C7 DUP2 PUSH2 0x1692 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x13D2 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x141B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1462 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD3 SWAP2 SWAP1 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0x14DB PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x150A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xD59F809F461FB2E2CA77F931DC43A9AAAA4295B0ED3C8E6ADC04D0AAB43EEB47 SWAP2 ADD PUSH2 0xAC4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D DUP3 DUP5 PUSH2 0x1CAB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D DUP3 DUP5 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D DUP3 DUP5 PUSH2 0x1CE4 JUMP JUMPDEST PUSH2 0xDD3 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x158F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP5 DUP2 MSTORE SWAP7 DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP4 SWAP1 SWAP2 KECCAK256 SWAP2 MLOAD DUP3 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP4 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1737 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17B4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x11D1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1755 SWAP2 SWAP1 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17C3 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x17CB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x182C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1848 SWAP2 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1885 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x188A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x189B DUP8 DUP4 DUP4 DUP8 PUSH2 0x18A6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1915 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x190E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x190E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B2 JUMP JUMPDEST POP DUP2 PUSH2 0x17C3 JUMP JUMPDEST PUSH2 0x17C3 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x192A JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1999 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1999 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1964 JUMP JUMPDEST POP PUSH2 0x19A5 SWAP3 SWAP2 POP PUSH2 0x19A9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x19F7 DUP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x994 DUP2 PUSH2 0x19D7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A7C JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 DUP8 ADD MSTORE DUP7 DUP3 ADD MLOAD DUP8 DUP8 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD AND SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1A36 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1ACA JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1AA5 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1B04 DUP2 PUSH2 0x19D7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B76 JUMPI PUSH2 0x1B76 PUSH2 0x1B0F JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x1B9B JUMPI PUSH2 0x1B9B PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x1BB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x1BDE JUMPI PUSH2 0x1BCF DUP6 PUSH2 0x19EC JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x1BBE JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C65 JUMPI PUSH2 0x1C65 PUSH2 0x1C3D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x994 DUP2 PUSH2 0x19D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1CC8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1550 JUMPI PUSH2 0x1550 PUSH2 0x1C3D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1550 JUMPI PUSH2 0x1550 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D12 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CFA JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1D2D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1D56 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xBA 0x4F JUMPI 0xC0 PUSH22 0x20B17944BEB38C6BA8148DF32EE9E47DF738D03D4E99 GASPRICE SWAP13 0xFB PUSH7 0x64736F6C634300 ADDMOD SLT STOP CALLER ",
							"sourceMap": "48220:10942:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54926:1655;;;;;;;;;;-1:-1:-1;54926:1655:0;;;;;:::i;:::-;;:::i;:::-;;48997:24;;;;;;;;;;-1:-1:-1;48997:24:0;;;;-1:-1:-1;;;;;48997:24:0;;;;;;-1:-1:-1;;;;;378:32:1;;;360:51;;348:2;333:18;48997:24:0;;;;;;;;50359:95;;;;;;;;;;-1:-1:-1;50359:95:0;;;;;:::i;:::-;;:::i;51930:100::-;;;;;;;;;;-1:-1:-1;51930:100:0;;;;;:::i;:::-;;:::i;52324:1092::-;;;;;;;;;;-1:-1:-1;52324:1092:0;;;;;:::i;:::-;-1:-1:-1;52408:22:0;;52324:1092;;;;;;;;:::i;51453:164::-;;;;;;;;;;-1:-1:-1;51453:164:0;;;;;:::i;:::-;;:::i;:::-;;;2132:25:1;;;2120:2;2105:18;51453:164:0;1986:177:1;58741:418:0;;;;;;;;;;-1:-1:-1;58741:418:0;;;;;:::i;:::-;;:::i;56591:1166::-;;;;;;:::i;:::-;;:::i;49030:23::-;;;;;;;;;;;;;;;;50810:104;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2667:103::-;;;;;;;;;;;;;:::i;50920:218::-;;;;;;;;;;-1:-1:-1;50920:218:0;;;;;:::i;:::-;;:::i;:::-;;;2996:14:1;;2989:22;2971:41;;2959:2;2944:18;50920:218:0;2831:187:1;57765:968:0;;;;;;;;;;-1:-1:-1;57765:968:0;;;;;:::i;:::-;;:::i;2019:87::-;;;;;;;;;;-1:-1:-1;2065:7:0;2092:6;-1:-1:-1;;;;;2092:6:0;2019:87;;51839:85;;;;;;;;;;-1:-1:-1;51907:9:0;;51839:85;;52183:133;;;;;;;;;;-1:-1:-1;52235:22:0;52183:133;;51146:98;;;;;;;;;;-1:-1:-1;51215:21:0;51146:98;;53424:1494;;;;;;;;;;;;;:::i;50460:99::-;;;;;;;;;;-1:-1:-1;50460:99:0;;;;;:::i;:::-;;:::i;50678:126::-;;;;;;;;;;-1:-1:-1;50678:126:0;;;;;:::i;:::-;;:::i;2925:201::-;;;;;;;;;;-1:-1:-1;2925:201:0;;;;;:::i;:::-;;:::i;51623:208::-;;;;;;;;;;-1:-1:-1;51623:208:0;;;;;:::i;:::-;;:::i;50565:105::-;;;;;;;;;;-1:-1:-1;50565:105:0;;;;;:::i;:::-;-1:-1:-1;;;;;50646:16:0;50622:4;50646:16;;;:10;:16;;;;;;;;;50565:105;51252:193;;;;;;;;;;;;;:::i;54926:1655::-;55004:25;;;;:15;:25;;;;;;;;:33;;:25;:33;54996:70;;;;-1:-1:-1;;;54996:70:0;;5079:2:1;54996:70:0;;;5061:21:1;5118:2;5098:18;;;5091:30;-1:-1:-1;;;5137:18:1;;;5130:54;5201:18;;54996:70:0;;;;;;;;;55126:1;55085:23;;;:13;:23;;;;;:29;;;-1:-1:-1;;;;;55085:29:0;55077:88;;;;-1:-1:-1;;;55077:88:0;;5432:2:1;55077:88:0;;;5414:21:1;;;5451:18;;;5444:30;5510:34;5490:18;;;5483:62;5562:18;;55077:88:0;5230:356:1;55077:88:0;55178:15;55203:23;;;:13;:23;;;;;;:29;;;55267:30;;-1:-1:-1;;;55267:30:0;;55286:10;55267:30;;;360:51:1;-1:-1:-1;;;;;55203:29:0;;;;55178:15;55203:29;;55267:18;;333::1;;55267:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;55332:23;;;;:13;:23;;;;;:29;;;55244:53;;-1:-1:-1;55316:45:0;;;55308:110;;;;-1:-1:-1;;;55308:110:0;;5982:2:1;55308:110:0;;;5964:21:1;6021:2;6001:18;;;5994:30;6060:34;6040:18;;;6033:62;-1:-1:-1;;;6111:18:1;;;6104:50;6171:19;;55308:110:0;5780:416:1;55308:110:0;55454:45;;-1:-1:-1;;;55454:45:0;;55473:10;55454:45;;;6413:34:1;55493:4:0;6463:18:1;;;6456:43;55429:22:0;;-1:-1:-1;;;;;55454:18:0;;;;;6348::1;;55454:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;55536:23;;;;:13;:23;;;;;:29;;;55429:70;;-1:-1:-1;55518:47:0;;;55510:118;;;;-1:-1:-1;;;55510:118:0;;6712:2:1;55510:118:0;;;6694:21:1;6751:2;6731:18;;;6724:30;6790:34;6770:18;;;6763:62;6861:28;6841:18;;;6834:56;6907:19;;55510:118:0;6510:422:1;55510:118:0;55651:14;55668:23;;;:13;:23;;;;;:29;;;;55728:50;55741:25;55668:29;55762:3;55741:12;:25::i;:::-;55768:9;;55728:12;:50::i;:::-;55708:70;;55827:7;2065;2092:6;-1:-1:-1;;;;;2092:6:0;;2019:87;55827:7;55793:23;;;;:13;:23;;;;;:30;;;-1:-1:-1;;;;;55793:41:0;;;:30;;:41;55789:60;;-1:-1:-1;55848:1:0;55789:60;55860:21;55884:31;55897:6;55905:9;55884:12;:31::i;:::-;56010:23;;;;:13;:23;;;;;:30;;;55860:55;;-1:-1:-1;55928:152:0;;-1:-1:-1;;;;;55928:25:0;;;;55976:10;;56010:30;55860:55;55928:25;:152::i;:::-;56095:13;;56091:187;;56125:141;56177:10;56215:7;2065;2092:6;-1:-1:-1;;;;;2092:6:0;;2019:87;56215:7;-1:-1:-1;;;;;56125:25:0;;;:141;56242:9;56125:25;:141::i;:::-;56288:9;;:59;;-1:-1:-1;;;56288:59:0;;-1:-1:-1;;;;;56288:9:0;;;;:22;;:59;;56319:4;;56326:10;;56338:8;;56288:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;56386:5:0;56358:25;;;:15;:25;;;;;:33;;-1:-1:-1;;56358:33:0;;;-1:-1:-1;56402:25:0;56374:8;56402:15;:25::i;:::-;56458:23;;;;:13;:23;;;;;;;;;:30;;;;56512:29;;;;56543;;;;;56445:128;;-1:-1:-1;;;;;56458:30:0;;;7614:34:1;;56490:10:0;7664:18:1;;;7657:43;;;;7716:18;;;7709:34;;;56512:29:0;;7774:2:1;7759:18;;7752:43;7826:3;7811:19;;7804:35;56445:128:0;;;;;;;7563:3:1;56445:128:0;;;54985:1596;;;;;;54926:1655;:::o;50359:95::-;1905:13;:11;:13::i;:::-;-1:-1:-1;;;;;50423:16:0::1;;::::0;;;:10:::1;:16;::::0;;;;:23;;-1:-1:-1;;50423:23:0::1;50442:4;50423:23;::::0;;50359:95::o;51930:100::-;1905:13;:11;:13::i;:::-;51998:9:::1;:24:::0;51930:100::o;51453:164::-;51579:30;;-1:-1:-1;;;51579:30:0;;51603:4;51579:30;;;360:51:1;51513:7:0;;51555:5;;-1:-1:-1;;;;;51579:15:0;;;;;333:18:1;;51579:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51572:37;51453:164;-1:-1:-1;;;51453:164:0:o;58741:418::-;2065:7;2092:6;-1:-1:-1;;;;;2092:6:0;58799:10;:21;58796:130;;58859:23;;;;:13;:23;;;;;:30;;;-1:-1:-1;;;;;58859:30:0;58845:10;:44;58837:77;;;;-1:-1:-1;;;58837:77:0;;8052:2:1;58837:77:0;;;8034:21:1;8091:2;8071:18;;;8064:30;-1:-1:-1;;;8110:18:1;;;8103:50;8170:18;;58837:77:0;7850:344:1;58837:77:0;58938:9;;:59;;-1:-1:-1;;;58938:59:0;;-1:-1:-1;;;;;58938:9:0;;;;:22;;:59;;58969:4;;58976:10;;58988:8;;58938:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;59038:5:0;59010:25;;;:15;:25;;;;;:33;;-1:-1:-1;;59010:33:0;;;-1:-1:-1;59062:25:0;59026:8;59062:15;:25::i;:::-;59113:38;;;59130:10;8373:51:1;;8455:2;8440:18;;8433:34;;;59113:38:0;;8346:18:1;59113:38:0;;;;;;;;58741:418;:::o;56591:1166::-;56719:25;;;;:15;:25;;;;;;;;:33;;:25;:33;56711:70;;;;-1:-1:-1;;;56711:70:0;;5079:2:1;56711:70:0;;;5061:21:1;5118:2;5098:18;;;5091:30;-1:-1:-1;;;5137:18:1;;;5130:54;5201:18;;56711:70:0;4877:348:1;56711:70:0;56839:23;;;;:13;:23;;;;;:29;;;56826:9;:42;;56818:93;;;;-1:-1:-1;;;56818:93:0;;8680:2:1;56818:93:0;;;8662:21:1;8719:2;8699:18;;;8692:30;8758:34;8738:18;;;8731:62;-1:-1:-1;;;8809:18:1;;;8802:36;8855:19;;56818:93:0;8478:402:1;56818:93:0;57015:1;56974:23;;;:13;:23;;;;;:29;;;-1:-1:-1;;;;;56974:29:0;:43;56966:82;;;;-1:-1:-1;;;56966:82:0;;9087:2:1;56966:82:0;;;9069:21:1;9126:2;9106:18;;;9099:30;9165:28;9145:18;;;9138:56;9211:18;;56966:82:0;8885:350:1;56966:82:0;57086:9;57069:14;57126:50;57139:25;57086:9;57160:3;57139:12;:25::i;57126:50::-;57106:70;;57225:7;2065;2092:6;-1:-1:-1;;;;;2092:6:0;;2019:87;57225:7;57191:23;;;;:13;:23;;;;;:30;;;-1:-1:-1;;;;;57191:41:0;;;:30;;:41;57187:60;;-1:-1:-1;57246:1:0;57187:60;57258:21;57282:31;57295:6;57303:9;57282:12;:31::i;:::-;57334:23;;;;:13;:23;;;;;;:30;;;57326:63;;57258:55;;-1:-1:-1;;;;;;57334:30:0;;57326:63;;;;;57258:55;;57326:63;;57334:23;57326:63;57258:55;57334:30;57326:63;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57404:13:0;;57400:82;;2065:7;2092:6;;57434:36;;-1:-1:-1;;;;;2092:6:0;;;;57434:36;;;;;57460:9;;57434:36;2065:7;57434:36;57460:9;2092:6;57434:36;;;;;;;;;;;;;;;;;;;;;57400:82;57502:9;;:59;;-1:-1:-1;;;57502:59:0;;-1:-1:-1;;;;;57502:9:0;;;;:22;;:59;;57533:4;;57540:10;;57552:8;;57502:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;57600:5:0;57572:25;;;:15;:25;;;;;;;;:33;;-1:-1:-1;;57572:33:0;;;57627:13;:23;;;;;;-1:-1:-1;57627:30:0;;;57681:29;;;;;57623:88;;-1:-1:-1;;;;;57627:30:0;;;9509:34:1;;57659:10:0;9559:18:1;;;9552:43;;;;9611:18;;;9604:34;;;9669:2;9654:18;;9647:34;57623:88:0;;-1:-1:-1;9458:3:1;9443:19;57623:88:0;;;;;;;57724:25;57740:8;57724:15;:25::i;:::-;56663:1094;;;56591:1166;:::o;50810:104::-;50857:16;50893:13;50886:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;50886:20:0;;;;;;;;;;;;;;;;;;;;;;;50810:104;:::o;2667:103::-;1905:13;:11;:13::i;:::-;2732:30:::1;2759:1;2732:18;:30::i;:::-;2667:103::o:0;50920:218::-;50980:4;;50997:111;51013:13;:20;51011:22;;50997:111;;;51067:13;51081:1;51067:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;51067:16:0;;;51058:25;;;;51054:42;;-1:-1:-1;51092:4:0;;50920:218;-1:-1:-1;;50920:218:0:o;51054:42::-;51034:3;;;;:::i;:::-;;;;50997:111;;;-1:-1:-1;51125:5:0;;50920:218;-1:-1:-1;;50920:218:0:o;57765:968::-;57919:9;;:27;;-1:-1:-1;;;57919:27:0;;;;;2132:25:1;;;57950:10:0;;-1:-1:-1;;;;;57919:9:0;;:17;;2105:18:1;;57919:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;57919:41:0;;57897:116;;;;-1:-1:-1;;;57897:116:0;;10554:2:1;57897:116:0;;;10536:21:1;10593:2;10573:18;;;10566:30;10632:27;10612:18;;;10605:55;10677:18;;57897:116:0;10352:349:1;57897:116:0;58040:1;58032:5;:9;58024:53;;;;-1:-1:-1;;;58024:53:0;;10908:2:1;58024:53:0;;;10890:21:1;10947:2;10927:18;;;10920:30;10986:33;10966:18;;;10959:61;11037:18;;58024:53:0;10706:355:1;58024:53:0;-1:-1:-1;;;;;58092:20:0;;;58088:172;;58169:22;58184:6;58169:14;:22::i;:::-;:30;;58195:4;58169:30;58161:87;;;;-1:-1:-1;;;58161:87:0;;11268:2:1;58161:87:0;;;11250:21:1;11307:2;11287:18;;;11280:30;11346:34;11326:18;;;11319:62;-1:-1:-1;;;11397:18:1;;;11390:42;11449:19;;58161:87:0;11066:408:1;58161:87:0;58272:25;;;;:15;:25;;;;;;;;:32;;-1:-1:-1;;58272:32:0;58300:4;58272:32;;;;;;58341:109;;;;;;;;;;58388:10;58341:109;;;;;;;;;;;;-1:-1:-1;;;;;58341:109:0;;;;;;;;;58315:23;;;:13;:23;;;;;;;:135;;;;;;;;;;;;;;-1:-1:-1;;;;;;58315:135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58461:9;:59;;-1:-1:-1;;;58461:59:0;;:9;;;:22;;:59;;58388:10;58504:4;;58288:8;;58461:59;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;58535:20:0;;;-1:-1:-1;58531:195:0;;58577:58;;;58599:10;11748:34:1;;11813:2;11798:18;;11791:34;;;-1:-1:-1;;;;;11861:15:1;;11841:18;;;11834:43;;;;11908:2;11893:18;;11886:34;;;58577:58:0;;11697:3:1;11682:19;58577:58:0;;;;;;;;57765:968;;;:::o;58531:195::-;58673:41;;;58686:10;12133:51:1;;12215:2;12200:18;;12193:34;;;12243:18;;;12236:34;;;58673:41:0;;12121:2:1;12106:18;58673:41:0;11931:345:1;58531:195:0;57765:968;;;:::o;53424:1494::-;53574:16;:23;53492:22;;53532:23;;53558:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53558:40:0;;-1:-1:-1;;53558:40:0;;;;;;;;;;;;53532:66;;53614:9;53609:393;53633:16;:23;53629:27;;53609:393;;;53678:16;53697;53714:1;53697:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;53760:196;;;;;;;;;;;53815:23;;;:13;:23;;;;;;:30;;;;-1:-1:-1;;;;;53815:30:0;;;53760:196;;;;53864:29;;;;53760:196;;;;;;;53912:23;;;;;;;:29;;;;;;;;53760:196;;;;53971:7;;53697:19;;-1:-1:-1;53760:196:0;;;53971:4;;53976:1;;53971:7;;;;;;:::i;:::-;;;;;;:19;;;;53663:339;;53658:3;;;;;:::i;:::-;;;;53609:393;;;-1:-1:-1;54019:4:0;53424:1494;-1:-1:-1;53424:1494:0:o;50460:99::-;1905:13;:11;:13::i;:::-;-1:-1:-1;;;;;50527:16:0::1;50546:5;50527:16:::0;;;:10:::1;:16;::::0;;;;:24;;-1:-1:-1;;50527:24:0::1;::::0;;50460:99::o;50678:126::-;1905:13;:11;:13::i;:::-;50765:31;;::::1;::::0;:13:::1;::::0;:31:::1;::::0;::::1;::::0;::::1;:::i;:::-;;50678:126:::0;:::o;2925:201::-;1905:13;:11;:13::i;:::-;-1:-1:-1;;;;;3014:22:0;::::1;3006:73;;;::::0;-1:-1:-1;;;3006:73:0;;12483:2:1;3006:73:0::1;::::0;::::1;12465:21:1::0;12522:2;12502:18;;;12495:30;12561:34;12541:18;;;12534:62;-1:-1:-1;;;12612:18:1;;;12605:36;12658:19;;3006:73:0::1;12281:402:1::0;3006:73:0::1;3090:28;3109:8;3090:18;:28::i;:::-;2925:201:::0;:::o;51623:208::-;1905:13;:11;:13::i;:::-;51750:30:::1;::::0;-1:-1:-1;;;51750:30:0;;51774:4:::1;51750:30;::::0;::::1;360:51:1::0;51715:5:0;;51693:12:::1;::::0;-1:-1:-1;;;;;51750:15:0;::::1;::::0;::::1;::::0;333:18:1;;51750:30:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51732:48;;51791:5;-1:-1:-1::0;;;;;51791:14:0::1;;51806:7;2065::::0;2092:6;-1:-1:-1;;;;;2092:6:0;;2019:87;51806:7:::1;51791:32;::::0;-1:-1:-1;;;;;;51791:32:0::1;::::0;;;;;;-1:-1:-1;;;;;8391:32:1;;;51791::0::1;::::0;::::1;8373:51:1::0;8440:18;;;8433:34;;;8346:18;;51791:32:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;51252:193::-:0;1905:13;:11;:13::i;:::-;51353:36:::1;::::0;51321:21:::1;::::0;51361:10:::1;::::0;51353:36;::::1;;;::::0;51321:21;;51304:14:::1;51353:36:::0;51304:14;51353:36;51321:21;51361:10;51353:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;51405:32:0::1;::::0;;51418:10:::1;8373:51:1::0;;8455:2;8440:18;;8433:34;;;51405:32:0::1;::::0;8346:18:1;51405:32:0::1;8199:274:1::0;35741:98:0;35799:7;35826:5;35830:1;35826;:5;:::i;:::-;35819:12;;35741:98;;;;;:::o;35342:::-;35400:7;35427:5;35431:1;35427;:5;:::i;34985:98::-;35043:7;35070:5;35074:1;35070;:5;:::i;6528:205::-;6629:96;6649:5;6679:27;;;6708:4;6714:2;6718:5;6656:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6656:68:0;;;;;;;;;;;;;;-1:-1:-1;;;;;6656:68:0;-1:-1:-1;;;;;;6656:68:0;;;;;;;;;;6629:19;:96::i;52040:135::-;52128:39;;;;;;;;-1:-1:-1;52128:39:0;;;;;;;;;;;;;;;;;;;;;;52102:23;;;:13;:23;;;;;;;:65;;;;;;;;;;;-1:-1:-1;;;;;52102:65:0;;;-1:-1:-1;;;;;;52102:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52040:135::o;2184:132::-;2065:7;2092:6;-1:-1:-1;;;;;2092:6:0;736:10;2248:23;2240:68;;;;-1:-1:-1;;;2240:68:0;;13700:2:1;2240:68:0;;;13682:21:1;;;13719:18;;;13712:30;13778:34;13758:18;;;13751:62;13830:18;;2240:68:0;13498:356:1;3286:191:0;3360:16;3379:6;;-1:-1:-1;;;;;3396:17:0;;;-1:-1:-1;;;;;;3396:17:0;;;;;;3429:40;;3379:6;;;;;;;3429:40;;3360:16;3429:40;3349:128;3286:191;:::o;9231:716::-;9655:23;9681:69;9709:4;9681:69;;;;;;;;;;;;;;;;;9689:5;-1:-1:-1;;;;;9681:27:0;;;:69;;;;;:::i;:::-;9765:17;;9655:95;;-1:-1:-1;9765:21:0;9761:179;;9862:10;9851:30;;;;;;;;;;;;:::i;:::-;9843:85;;;;-1:-1:-1;;;9843:85:0;;14061:2:1;9843:85:0;;;14043:21:1;14100:2;14080:18;;;14073:30;14139:34;14119:18;;;14112:62;-1:-1:-1;;;14190:18:1;;;14183:40;14240:19;;9843:85:0;13859:406:1;42812:229:0;42949:12;42981:52;43003:6;43011:4;43017:1;43020:12;42981:21;:52::i;:::-;42974:59;42812:229;-1:-1:-1;;;;42812:229:0:o;43898:455::-;44068:12;44126:5;44101:21;:30;;44093:81;;;;-1:-1:-1;;;44093:81:0;;14472:2:1;44093:81:0;;;14454:21:1;14511:2;14491:18;;;14484:30;14550:34;14530:18;;;14523:62;-1:-1:-1;;;14601:18:1;;;14594:36;14647:19;;44093:81:0;14270:402:1;44093:81:0;44186:12;44200:23;44227:6;-1:-1:-1;;;;;44227:11:0;44246:5;44253:4;44227:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44185:73;;;;44276:69;44303:6;44311:7;44320:10;44332:12;44276:26;:69::i;:::-;44269:76;43898:455;-1:-1:-1;;;;;;;43898:455:0:o;46471:644::-;46656:12;46685:7;46681:427;;;46713:10;:17;46734:1;46713:22;46709:290;;-1:-1:-1;;;;;40351:19:0;;;46923:60;;;;-1:-1:-1;;;46923:60:0;;15426:2:1;46923:60:0;;;15408:21:1;15465:2;15445:18;;;15438:30;15504:31;15484:18;;;15477:59;15553:18;;46923:60:0;15224:353:1;46923:60:0;-1:-1:-1;47020:10:0;47013:17;;46681:427;47063:33;47071:10;47083:12;47818:17;;:21;47814:388;;48050:10;48044:17;48107:15;48094:10;48090:2;48086:19;48079:44;47814:388;48177:12;48170:20;;-1:-1:-1;;;48170:20:0;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:1;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;422:131::-;-1:-1:-1;;;;;497:31:1;;487:42;;477:70;;543:1;540;533:12;558:134;626:20;;655:31;626:20;655:31;:::i;:::-;558:134;;;:::o;697:247::-;756:6;809:2;797:9;788:7;784:23;780:32;777:52;;;825:1;822;815:12;777:52;864:9;851:23;883:31;908:5;883:31;:::i;949:1032::-;1174:2;1226:21;;;1296:13;;1199:18;;;1318:22;;;1145:4;;1174:2;1359;;1377:18;;;;1418:15;;;1145:4;1461:494;1475:6;1472:1;1469:13;1461:494;;;1534:13;;1572:9;;1560:22;;1621:11;;;1615:18;-1:-1:-1;;;;;1709:21:1;;;1695:12;;;1688:43;1771:11;;;1765:18;1751:12;;;1744:40;1807:4;1855:11;;;1849:18;1845:27;1831:12;;;1824:49;1902:4;1893:14;;;;1930:15;;;;1673:1;1490:9;1461:494;;;-1:-1:-1;1972:3:1;;949:1032;-1:-1:-1;;;;;;;949:1032:1:o;2168:658::-;2339:2;2391:21;;;2461:13;;2364:18;;;2483:22;;;2310:4;;2339:2;2562:15;;;;2536:2;2521:18;;;2310:4;2605:195;2619:6;2616:1;2613:13;2605:195;;;2684:13;;-1:-1:-1;;;;;2680:39:1;2668:52;;2775:15;;;;2740:12;;;;2716:1;2634:9;2605:195;;;-1:-1:-1;2817:3:1;;2168:658;-1:-1:-1;;;;;;2168:658:1:o;3023:383::-;3100:6;3108;3116;3169:2;3157:9;3148:7;3144:23;3140:32;3137:52;;;3185:1;3182;3175:12;3137:52;3221:9;3208:23;3198:33;;3278:2;3267:9;3263:18;3250:32;3240:42;;3332:2;3321:9;3317:18;3304:32;3345:31;3370:5;3345:31;:::i;:::-;3395:5;3385:15;;;3023:383;;;;;:::o;3619:127::-;3680:10;3675:3;3671:20;3668:1;3661:31;3711:4;3708:1;3701:15;3735:4;3732:1;3725:15;3751:1121;3835:6;3866:2;3909;3897:9;3888:7;3884:23;3880:32;3877:52;;;3925:1;3922;3915:12;3877:52;3965:9;3952:23;3994:18;4035:2;4027:6;4024:14;4021:34;;;4051:1;4048;4041:12;4021:34;4089:6;4078:9;4074:22;4064:32;;4134:7;4127:4;4123:2;4119:13;4115:27;4105:55;;4156:1;4153;4146:12;4105:55;4192:2;4179:16;4214:2;4210;4207:10;4204:36;;;4220:18;;:::i;:::-;4266:2;4263:1;4259:10;4298:2;4292:9;4361:2;4357:7;4352:2;4348;4344:11;4340:25;4332:6;4328:38;4416:6;4404:10;4401:22;4396:2;4384:10;4381:18;4378:46;4375:72;;;4427:18;;:::i;:::-;4463:2;4456:22;4513:18;;;4547:15;;;;-1:-1:-1;4589:11:1;;;4585:20;;;4617:19;;;4614:39;;;4649:1;4646;4639:12;4614:39;4673:11;;;;4693:148;4709:6;4704:3;4701:15;4693:148;;;4775:23;4794:3;4775:23;:::i;:::-;4763:36;;4726:12;;;;4819;;;;4693:148;;;4860:6;3751:1121;-1:-1:-1;;;;;;;;3751:1121:1:o;5591:184::-;5661:6;5714:2;5702:9;5693:7;5689:23;5685:32;5682:52;;;5730:1;5727;5720:12;5682:52;-1:-1:-1;5753:16:1;;5591:184;-1:-1:-1;5591:184:1:o;6937:375::-;-1:-1:-1;;;;;7195:15:1;;;7177:34;;7247:15;;;;7242:2;7227:18;;7220:43;7294:2;7279:18;;7272:34;;;;7127:2;7112:18;;6937:375::o;9692:127::-;9753:10;9748:3;9744:20;9741:1;9734:31;9784:4;9781:1;9774:15;9808:4;9805:1;9798:15;9824:127;9885:10;9880:3;9876:20;9873:1;9866:31;9916:4;9913:1;9906:15;9940:4;9937:1;9930:15;9956:135;9995:3;10016:17;;;10013:43;;10036:18;;:::i;:::-;-1:-1:-1;10083:1:1;10072:13;;9956:135::o;10096:251::-;10166:6;10219:2;10207:9;10198:7;10194:23;10190:32;10187:52;;;10235:1;10232;10225:12;10187:52;10267:9;10261:16;10286:31;10311:5;10286:31;:::i;12688:277::-;12755:6;12808:2;12796:9;12787:7;12783:23;12779:32;12776:52;;;12824:1;12821;12814:12;12776:52;12856:9;12850:16;12909:5;12902:13;12895:21;12888:5;12885:32;12875:60;;12931:1;12928;12921:12;12970:217;13010:1;13036;13026:132;;13080:10;13075:3;13071:20;13068:1;13061:31;13115:4;13112:1;13105:15;13143:4;13140:1;13133:15;13026:132;-1:-1:-1;13172:9:1;;12970:217::o;13192:168::-;13265:9;;;13296;;13313:15;;;13307:22;;13293:37;13283:71;;13334:18;;:::i;13365:128::-;13432:9;;;13453:11;;;13450:37;;;13467:18;;:::i;14677:250::-;14762:1;14772:113;14786:6;14783:1;14780:13;14772:113;;;14862:11;;;14856:18;14843:11;;;14836:39;14808:2;14801:10;14772:113;;;-1:-1:-1;;14919:1:1;14901:16;;14894:27;14677:250::o;14932:287::-;15061:3;15099:6;15093:13;15115:66;15174:6;15169:3;15162:4;15154:6;15150:17;15115:66;:::i;:::-;15197:16;;;;;14932:287;-1:-1:-1;;14932:287:1:o;15582:396::-;15731:2;15720:9;15713:21;15694:4;15763:6;15757:13;15806:6;15801:2;15790:9;15786:18;15779:34;15822:79;15894:6;15889:2;15878:9;15874:18;15869:2;15861:6;15857:15;15822:79;:::i;:::-;15962:2;15941:15;-1:-1:-1;;15937:29:1;15922:45;;;;15969:2;15918:54;;15582:396;-1:-1:-1;;15582:396:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1516800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addBlackList(address)": "26836",
								"bankAmount()": "305",
								"bankAmountERC20(address)": "infinite",
								"buyNFT(uint256)": "infinite",
								"buyNFTbyERC20(uint256)": "infinite",
								"deSellNFT(uint256)": "infinite",
								"getAllowedERC20()": "infinite",
								"getMyTokensAtSale()": "infinite",
								"getTokensAtSale()": "infinite",
								"getTradeFee()": "2359",
								"getUserTokensAtSale(address)": "infinite",
								"isAllowedERC20(address)": "infinite",
								"isBlacklisted(address)": "2653",
								"marketNft()": "2372",
								"owner()": "2365",
								"removeBlackList(address)": "26784",
								"renounceOwnership()": "infinite",
								"sellNFT(uint256,uint256,address)": "infinite",
								"setAllowedERC20(address[])": "infinite",
								"setTradeFee(uint256)": "24578",
								"transferOwnership(address)": "infinite",
								"version()": "2362",
								"withdrawBank()": "infinite",
								"withdrawBankERC20(address)": "infinite"
							},
							"internal": {
								"__addTokenToSale(uint256)": "infinite",
								"__delTokenForSale(uint256)": "infinite",
								"_clearSellToken(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 49052,
									"end": 49053,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 49030,
									"end": 49053,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 49030,
									"end": 49053,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 49087,
									"end": 49088,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49062,
									"end": 49088,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 49062,
									"end": 49088,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 50123,
									"end": 50351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1740,
									"end": 1772,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1740,
									"end": 1772,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1740,
									"end": 1772,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1740,
									"end": 1772,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50244,
									"end": 50253,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50244,
									"end": 50269,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50244,
									"end": 50269,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 50244,
									"end": 50269,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 50244,
									"end": 50269,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 50244,
									"end": 50269,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 50244,
									"end": 50269,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 50244,
									"end": 50269,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50244,
									"end": 50269,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50280,
									"end": 50289,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 50280,
									"end": 50302,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50280,
									"end": 50302,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50280,
									"end": 50302,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50313,
									"end": 50343,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50313,
									"end": 50343,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50313,
									"end": 50343,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 50313,
									"end": 50343,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50313,
									"end": 50326,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 50313,
									"end": 50326,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50313,
									"end": 50343,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50313,
									"end": 50343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 50313,
									"end": 50343,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50313,
									"end": 50343,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50313,
									"end": 50343,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 50313,
									"end": 50343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50313,
									"end": 50343,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 50313,
									"end": 50343,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50313,
									"end": 50343,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50123,
									"end": 50351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3286,
									"end": 3477,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3286,
									"end": 3477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3360,
									"end": 3376,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3360,
									"end": 3376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3349,
									"end": 3477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3286,
									"end": 3477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3286,
									"end": 3477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 48220,
									"end": 59162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1603,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 328,
									"end": 1603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 441,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 455,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 457,
									"end": 463,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 512,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 498,
									"end": 507,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 489,
									"end": 496,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 485,
									"end": 508,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 481,
									"end": 513,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 478,
									"end": 530,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 478,
									"end": 530,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 478,
									"end": 530,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 524,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 478,
									"end": 530,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 478,
									"end": 530,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 549,
									"end": 589,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 579,
									"end": 588,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 549,
									"end": 589,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 549,
									"end": 589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 549,
									"end": 589,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 549,
									"end": 589,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 608,
									"end": 610,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 635,
									"end": 653,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 635,
									"end": 653,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 635,
									"end": 653,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 629,
									"end": 654,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 698,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 683,
									"end": 701,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 683,
									"end": 701,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 677,
									"end": 702,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 539,
									"end": 589,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 539,
									"end": 589,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 629,
									"end": 654,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 608,
									"end": 610,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 751,
									"end": 765,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 751,
									"end": 765,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 765,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 782,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 748,
									"end": 782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 778,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 775,
									"end": 776,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 768,
									"end": 780,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 782,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 748,
									"end": 782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 816,
									"end": 822,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 805,
									"end": 814,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 801,
									"end": 823,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 791,
									"end": 823,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 791,
									"end": 823,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 861,
									"end": 868,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 854,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 850,
									"end": 852,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 846,
									"end": 859,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 842,
									"end": 869,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 832,
									"end": 887,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 832,
									"end": 887,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 883,
									"end": 884,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 880,
									"end": 881,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 873,
									"end": 885,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 832,
									"end": 887,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 832,
									"end": 887,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 912,
									"end": 914,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 906,
									"end": 915,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 934,
									"end": 936,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 927,
									"end": 937,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 924,
									"end": 960,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 924,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 924,
									"end": 960,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 940,
									"end": 958,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 940,
									"end": 958,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 940,
									"end": 958,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 940,
									"end": 958,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 940,
									"end": 958,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 986,
									"end": 988,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 983,
									"end": 984,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 979,
									"end": 989,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1020,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1012,
									"end": 1021,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1083,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1077,
									"end": 1084,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1074,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 1068,
									"end": 1070,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1064,
									"end": 1075,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1085,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1052,
									"end": 1058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1048,
									"end": 1086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1136,
									"end": 1142,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1124,
									"end": 1134,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1116,
									"end": 1118,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1114,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1101,
									"end": 1119,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1144,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1167,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1167,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1095,
									"end": 1167,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1147,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1147,
									"end": 1165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1165,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1147,
									"end": 1165,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1176,
									"end": 1198,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1309,
									"end": 1320,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1320,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1305,
									"end": 1325,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1305,
									"end": 1325,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1305,
									"end": 1325,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1337,
									"end": 1356,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 1337,
									"end": 1356,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1337,
									"end": 1356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1334,
									"end": 1373,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1334,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1334,
									"end": 1373,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1369,
									"end": 1370,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1366,
									"end": 1367,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1371,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1334,
									"end": 1373,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1334,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1393,
									"end": 1404,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1393,
									"end": 1404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1393,
									"end": 1404,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1393,
									"end": 1404,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1572,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1413,
									"end": 1572,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1435,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1424,
									"end": 1427,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1421,
									"end": 1436,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1572,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1572,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1413,
									"end": 1572,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1495,
									"end": 1529,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1525,
									"end": 1528,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1495,
									"end": 1529,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1495,
									"end": 1529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1495,
									"end": 1529,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1495,
									"end": 1529,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1483,
									"end": 1530,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1483,
									"end": 1530,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1458,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1458,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1458,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1458,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1562,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1572,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1413,
									"end": 1572,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1572,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1413,
									"end": 1572,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1591,
									"end": 1597,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1597,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1603,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1603,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1603,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1603,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1603,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1603,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1603,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 328,
									"end": 1603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48220,
									"end": 59162,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209dba4f57c07520b17944beb38c6ba8148df32ee9e47df738d03d4e993a9cfb6664736f6c63430008120033",
									".code": [
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "7C237EEA"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "E4997DC5"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "E4997DC5"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "E9E4E160"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "FCF984A9"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "FE575A87"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "FF7F0CF9"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "7C237EEA"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "952977F5"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "A096C5A2"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "B42A275E"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "D55A34E4"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "512DDCF9"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "512DDCF9"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "51ED8288"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "54FD4D50"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "69C57352"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "785FA7CE"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "47A5D43"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "8CFBC19"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "ECB93C0"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "10603023"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "19C8C1C5"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "476CAA70"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48220,
											"end": 59162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 54926,
											"end": 56581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 54926,
											"end": 56581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 378,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 378,
											"end": 410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 378,
											"end": 410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 360,
											"end": 411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48997,
											"end": 49021,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 50359,
											"end": 50454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 50359,
											"end": 50454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 51930,
											"end": 52030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 51930,
											"end": 52030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 52324,
											"end": 53416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52408,
											"end": 52430,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 52408,
											"end": 52430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52324,
											"end": 53416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 52324,
											"end": 53416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 51453,
											"end": 51617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 51453,
											"end": 51617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1986,
											"end": 2163,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 58741,
											"end": 59159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 58741,
											"end": 59159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56591,
											"end": 57757,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 56591,
											"end": 57757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56591,
											"end": 57757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 56591,
											"end": 57757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 56591,
											"end": 57757,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56591,
											"end": 57757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56591,
											"end": 57757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 56591,
											"end": 57757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56591,
											"end": 57757,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 56591,
											"end": 57757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56591,
											"end": 57757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 56591,
											"end": 57757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49030,
											"end": 49053,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 50810,
											"end": 50914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 50810,
											"end": 50914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2667,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 50920,
											"end": 51138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 50920,
											"end": 51138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3010,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2944,
											"end": 2962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2831,
											"end": 3018,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 57765,
											"end": 58733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 57765,
											"end": 58733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51907,
											"end": 51916,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 51907,
											"end": 51916,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 51839,
											"end": 51924,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52235,
											"end": 52257,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 52183,
											"end": 52316,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51215,
											"end": 51236,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 51146,
											"end": 51244,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 53424,
											"end": 54918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 50460,
											"end": 50559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 50460,
											"end": 50559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 50678,
											"end": 50804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 50678,
											"end": 50804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2925,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2925,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 51623,
											"end": 51831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 51623,
											"end": 51831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 50565,
											"end": 50670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50646,
											"end": 50662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50622,
											"end": 50626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50646,
											"end": 50662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50646,
											"end": 50662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50646,
											"end": 50662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50646,
											"end": 50656,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50646,
											"end": 50662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50646,
											"end": 50662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50646,
											"end": 50662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50646,
											"end": 50662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50646,
											"end": 50662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50646,
											"end": 50662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50646,
											"end": 50662,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 50646,
											"end": 50662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50646,
											"end": 50662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50565,
											"end": 50670,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 51252,
											"end": 51445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55004,
											"end": 55029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55004,
											"end": 55029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55004,
											"end": 55029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55004,
											"end": 55029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55004,
											"end": 55019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55004,
											"end": 55029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55004,
											"end": 55029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55004,
											"end": 55029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55004,
											"end": 55029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55004,
											"end": 55029,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55004,
											"end": 55029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55004,
											"end": 55029,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 55004,
											"end": 55029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55004,
											"end": 55037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55004,
											"end": 55037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55004,
											"end": 55029,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55004,
											"end": 55037,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5079,
											"end": 5081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5061,
											"end": 5082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54686973204E4654206973206E6F7420666F722073616C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5137,
											"end": 5155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5130,
											"end": 5184,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 54996,
											"end": 55066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55126,
											"end": 55127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55085,
											"end": 55108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55085,
											"end": 55108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55085,
											"end": 55108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55085,
											"end": 55098,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55085,
											"end": 55108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55085,
											"end": 55108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55085,
											"end": 55108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55085,
											"end": 55108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55085,
											"end": 55108,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55085,
											"end": 55114,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55085,
											"end": 55114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55085,
											"end": 55114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55085,
											"end": 55114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 55077,
											"end": 55165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55077,
											"end": 55165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55077,
											"end": 55165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 55077,
											"end": 55165,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55077,
											"end": 55165,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5510,
											"end": 5544,
											"name": "PUSH",
											"source": 1,
											"value": "5468697320746F6B656E2073656C6C6564206279204E617469766520636F696E"
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5580,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5562,
											"end": 5580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55077,
											"end": 55165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5230,
											"end": 5586,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55077,
											"end": 55165,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 55077,
											"end": 55165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55178,
											"end": 55193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55203,
											"end": 55226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55203,
											"end": 55226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55203,
											"end": 55226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55203,
											"end": 55216,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55203,
											"end": 55226,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55203,
											"end": 55226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55203,
											"end": 55226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55203,
											"end": 55226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55203,
											"end": 55226,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55203,
											"end": 55226,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55203,
											"end": 55232,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55203,
											"end": 55232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55203,
											"end": 55232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55286,
											"end": 55296,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 360,
											"end": 411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55203,
											"end": 55232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55203,
											"end": 55232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55203,
											"end": 55232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55203,
											"end": 55232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55178,
											"end": 55193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55203,
											"end": 55232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55203,
											"end": 55232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55285,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 55267,
											"end": 55285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 351,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 333,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 55267,
											"end": 55297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 55267,
											"end": 55297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55332,
											"end": 55355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55332,
											"end": 55355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55332,
											"end": 55355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55332,
											"end": 55355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55332,
											"end": 55345,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55332,
											"end": 55355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55332,
											"end": 55355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55332,
											"end": 55355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55332,
											"end": 55355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55332,
											"end": 55355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55332,
											"end": 55361,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55332,
											"end": 55361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55332,
											"end": 55361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55244,
											"end": 55297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55244,
											"end": 55297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55316,
											"end": 55361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55316,
											"end": 55361,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55316,
											"end": 55361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55308,
											"end": 55418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 55308,
											"end": 55418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55308,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55308,
											"end": 55418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55308,
											"end": 55418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55308,
											"end": 55418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 55308,
											"end": 55418,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55308,
											"end": 55418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55308,
											"end": 55418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6023,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6094,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F206E6F74206861766520656E6F75676820746F6B656E73206F6E"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20796F75722062616C616E636520746F20706179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6104,
											"end": 6154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55308,
											"end": 55418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5780,
											"end": 6196,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55308,
											"end": 55418,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 55308,
											"end": 55418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55473,
											"end": 55483,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6413,
											"end": 6447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 55493,
											"end": 55497,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6463,
											"end": 6481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6456,
											"end": 6499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 55429,
											"end": 55451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55429,
											"end": 55451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55454,
											"end": 55472,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55472,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 55454,
											"end": 55472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6366,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6348,
											"end": 6366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 55454,
											"end": 55499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 55454,
											"end": 55499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55536,
											"end": 55559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55536,
											"end": 55559,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55536,
											"end": 55559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55536,
											"end": 55559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55536,
											"end": 55549,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55536,
											"end": 55559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55536,
											"end": 55559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55536,
											"end": 55559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55536,
											"end": 55559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55536,
											"end": 55559,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55536,
											"end": 55565,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55536,
											"end": 55565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55536,
											"end": 55565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55429,
											"end": 55499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55429,
											"end": 55499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55518,
											"end": 55565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55565,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55518,
											"end": 55565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55510,
											"end": 55628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 55510,
											"end": 55628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55510,
											"end": 55628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55510,
											"end": 55628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55510,
											"end": 55628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55510,
											"end": 55628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 55510,
											"end": 55628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55510,
											"end": 55628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55510,
											"end": 55628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6751,
											"end": 6753,
											"name": "PUSH",
											"source": 1,
											"value": "3A"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6724,
											"end": 6754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6824,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646964206E6F7420616C6C6F772074686520636F6E74726163742074"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6763,
											"end": 6825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6889,
											"name": "PUSH",
											"source": 1,
											"value": "6F2073656E642074686520707572636861736520616D6F756E74000000000000"
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6907,
											"end": 6926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55510,
											"end": 55628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6510,
											"end": 6932,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55510,
											"end": 55628,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 55510,
											"end": 55628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55651,
											"end": 55665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55681,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55691,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55697,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55668,
											"end": 55697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55668,
											"end": 55697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55728,
											"end": 55778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 55741,
											"end": 55766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 55668,
											"end": 55697,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55762,
											"end": 55765,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 55741,
											"end": 55753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 55741,
											"end": 55766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55741,
											"end": 55766,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 55741,
											"end": 55766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55768,
											"end": 55777,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55768,
											"end": 55777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55728,
											"end": 55740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 55728,
											"end": 55778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55728,
											"end": 55778,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 55728,
											"end": 55778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55708,
											"end": 55778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55708,
											"end": 55778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55827,
											"end": 55834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55827,
											"end": 55834,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 55827,
											"end": 55834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55793,
											"end": 55816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55793,
											"end": 55816,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 55793,
											"end": 55816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55793,
											"end": 55816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55793,
											"end": 55806,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55793,
											"end": 55816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55793,
											"end": 55816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55793,
											"end": 55816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55793,
											"end": 55816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55793,
											"end": 55816,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55793,
											"end": 55823,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55793,
											"end": 55823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55793,
											"end": 55823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55793,
											"end": 55834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55793,
											"end": 55834,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55793,
											"end": 55834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55793,
											"end": 55823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55793,
											"end": 55823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55793,
											"end": 55834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55789,
											"end": 55849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 55789,
											"end": 55849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55848,
											"end": 55849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55789,
											"end": 55849,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 55789,
											"end": 55849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55860,
											"end": 55881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55884,
											"end": 55915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 55897,
											"end": 55903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55905,
											"end": 55914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55884,
											"end": 55896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 55884,
											"end": 55915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55884,
											"end": 55915,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 55884,
											"end": 55915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56010,
											"end": 56033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56010,
											"end": 56033,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 56010,
											"end": 56033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56010,
											"end": 56033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56010,
											"end": 56023,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56010,
											"end": 56033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56010,
											"end": 56033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56010,
											"end": 56033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56010,
											"end": 56033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56010,
											"end": 56033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56010,
											"end": 56040,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56010,
											"end": 56040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56010,
											"end": 56040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55860,
											"end": 55915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55860,
											"end": 55915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55928,
											"end": 56080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 55928,
											"end": 56080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55928,
											"end": 55953,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 55928,
											"end": 55953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55928,
											"end": 55953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55928,
											"end": 55953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55976,
											"end": 55986,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55976,
											"end": 55986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56010,
											"end": 56040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55860,
											"end": 55915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55928,
											"end": 55953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 55928,
											"end": 56080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55928,
											"end": 56080,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 55928,
											"end": 56080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56095,
											"end": 56108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56095,
											"end": 56108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56091,
											"end": 56278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 56091,
											"end": 56278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56125,
											"end": 56266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 56177,
											"end": 56187,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 56215,
											"end": 56222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56215,
											"end": 56222,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 56215,
											"end": 56222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56125,
											"end": 56150,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 56125,
											"end": 56150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56125,
											"end": 56150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56125,
											"end": 56266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56242,
											"end": 56251,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56125,
											"end": 56150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 56125,
											"end": 56266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56125,
											"end": 56266,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 56125,
											"end": 56266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56297,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56288,
											"end": 56297,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56288,
											"end": 56297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56310,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 56288,
											"end": 56310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56319,
											"end": 56323,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 56319,
											"end": 56323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56326,
											"end": 56336,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 56326,
											"end": 56336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56338,
											"end": 56346,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 56338,
											"end": 56346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 56288,
											"end": 56347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 56288,
											"end": 56347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56386,
											"end": 56391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56358,
											"end": 56383,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 56358,
											"end": 56383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56358,
											"end": 56383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56358,
											"end": 56373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56358,
											"end": 56383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56358,
											"end": 56383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56358,
											"end": 56383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56358,
											"end": 56383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56358,
											"end": 56383,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56358,
											"end": 56391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56358,
											"end": 56391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 56358,
											"end": 56391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56358,
											"end": 56391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56358,
											"end": 56391,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56402,
											"end": 56427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 56374,
											"end": 56382,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56402,
											"end": 56417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 56402,
											"end": 56427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56402,
											"end": 56427,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 56402,
											"end": 56427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56481,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56471,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56458,
											"end": 56481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56458,
											"end": 56481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56481,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56488,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56458,
											"end": 56488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56541,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56512,
											"end": 56541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56541,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56543,
											"end": 56572,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56543,
											"end": 56572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56543,
											"end": 56572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56543,
											"end": 56572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56543,
											"end": 56572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56573,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56573,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56488,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56488,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7614,
											"end": 7648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 56490,
											"end": 56500,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 7700,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 7700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 7700,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 7700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7709,
											"end": 7743,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 7709,
											"end": 7743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7709,
											"end": 7743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 56512,
											"end": 56541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56512,
											"end": 56541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7776,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7759,
											"end": 7777,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7759,
											"end": 7777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7752,
											"end": 7795,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7829,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7811,
											"end": 7830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7804,
											"end": 7839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 56445,
											"end": 56573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56573,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56573,
											"name": "PUSH",
											"source": 0,
											"value": "D369FDCFEB128F60117661EBD8F220B7265C0A04FEE0E9905EB8C6AB2767B9E5"
										},
										{
											"begin": 56445,
											"end": 56573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7566,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 56445,
											"end": 56573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56573,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 54985,
											"end": 56581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54985,
											"end": 56581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54985,
											"end": 56581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54985,
											"end": 56581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54985,
											"end": 56581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54985,
											"end": 56581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54926,
											"end": 56581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 50359,
											"end": 50454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50423,
											"end": 50439,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50423,
											"end": 50439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50423,
											"end": 50439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50423,
											"end": 50439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50423,
											"end": 50439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50423,
											"end": 50433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50423,
											"end": 50439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50423,
											"end": 50439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50423,
											"end": 50439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50423,
											"end": 50439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50423,
											"end": 50439,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50423,
											"end": 50446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50423,
											"end": 50446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 50423,
											"end": 50446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50442,
											"end": 50446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50423,
											"end": 50446,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 50423,
											"end": 50446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50423,
											"end": 50446,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 51930,
											"end": 52030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51998,
											"end": 52007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 51998,
											"end": 52022,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51930,
											"end": 52030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51603,
											"end": 51607,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 360,
											"end": 411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 51513,
											"end": 51520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51513,
											"end": 51520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51555,
											"end": 51560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51555,
											"end": 51560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51579,
											"end": 51594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51594,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 51579,
											"end": 51594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 351,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 333,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 51579,
											"end": 51609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 51579,
											"end": 51609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51572,
											"end": 51609,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51617,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51453,
											"end": 51617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58799,
											"end": 58809,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58799,
											"end": 58820,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58796,
											"end": 58926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 58796,
											"end": 58926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58859,
											"end": 58882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58859,
											"end": 58882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58859,
											"end": 58882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58859,
											"end": 58882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58859,
											"end": 58872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58859,
											"end": 58882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58859,
											"end": 58882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58859,
											"end": 58882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58859,
											"end": 58882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58859,
											"end": 58882,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58859,
											"end": 58889,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58859,
											"end": 58889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58859,
											"end": 58889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58859,
											"end": 58889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58845,
											"end": 58855,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58845,
											"end": 58889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58837,
											"end": 58914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 58837,
											"end": 58914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58837,
											"end": 58914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58837,
											"end": 58914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58837,
											"end": 58914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58837,
											"end": 58914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 58837,
											"end": 58914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58837,
											"end": 58914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58837,
											"end": 58914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8034,
											"end": 8055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8091,
											"end": 8093,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A1A5CC81A5CC81B9BDD081E5BDD5C88139195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8170,
											"end": 8188,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8170,
											"end": 8188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58837,
											"end": 58914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7850,
											"end": 8194,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58837,
											"end": 58914,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 58837,
											"end": 58914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58947,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58938,
											"end": 58947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58938,
											"end": 58947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58960,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 58938,
											"end": 58960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58969,
											"end": 58973,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 58969,
											"end": 58973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58976,
											"end": 58986,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58976,
											"end": 58986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58988,
											"end": 58996,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 58988,
											"end": 58996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 58938,
											"end": 58997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 58938,
											"end": 58997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59038,
											"end": 59043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59010,
											"end": 59035,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59010,
											"end": 59035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59010,
											"end": 59035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59010,
											"end": 59025,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59010,
											"end": 59035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59010,
											"end": 59035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59010,
											"end": 59035,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59010,
											"end": 59035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59010,
											"end": 59035,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59010,
											"end": 59043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59010,
											"end": 59043,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 59010,
											"end": 59043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59010,
											"end": 59043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59010,
											"end": 59043,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59062,
											"end": 59087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 59026,
											"end": 59034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59062,
											"end": 59077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 59062,
											"end": 59087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59062,
											"end": 59087,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 59062,
											"end": 59087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59130,
											"end": 59140,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8373,
											"end": 8424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8373,
											"end": 8424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8455,
											"end": 8457,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8440,
											"end": 8458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8433,
											"end": 8467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8433,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8433,
											"end": 8467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "PUSH",
											"source": 0,
											"value": "8BF8E8F2F9D065B620F4E940D87122B03DD779D0FFD6A1590572E1E6D0416BEF"
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59113,
											"end": 59151,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 58741,
											"end": 59159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58741,
											"end": 59159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56591,
											"end": 57757,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 56591,
											"end": 57757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 56744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56719,
											"end": 56744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 56744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 56744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 56734,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56719,
											"end": 56744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56719,
											"end": 56744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 56744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56719,
											"end": 56744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 56744,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 56744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 56744,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 56719,
											"end": 56744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 56752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 56752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 56744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56719,
											"end": 56752,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56711,
											"end": 56781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 56711,
											"end": 56781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56711,
											"end": 56781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56711,
											"end": 56781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56711,
											"end": 56781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56711,
											"end": 56781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5079,
											"end": 5081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 56711,
											"end": 56781,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56711,
											"end": 56781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56711,
											"end": 56781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5061,
											"end": 5082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54686973204E4654206973206E6F7420666F722073616C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5137,
											"end": 5155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5130,
											"end": 5184,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56711,
											"end": 56781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4877,
											"end": 5225,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 56711,
											"end": 56781,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 56711,
											"end": 56781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56839,
											"end": 56862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56839,
											"end": 56862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56839,
											"end": 56862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56839,
											"end": 56862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56839,
											"end": 56852,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56839,
											"end": 56862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56839,
											"end": 56862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56839,
											"end": 56862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56839,
											"end": 56862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56839,
											"end": 56862,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56839,
											"end": 56868,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56839,
											"end": 56868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56839,
											"end": 56868,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56835,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56868,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56818,
											"end": 56911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 56818,
											"end": 56911,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56818,
											"end": 56911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56818,
											"end": 56911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56818,
											"end": 56911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56818,
											"end": 56911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8680,
											"end": 8682,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 56818,
											"end": 56911,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56818,
											"end": 56911,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56818,
											"end": 56911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8662,
											"end": 8683,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8719,
											"end": 8721,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8699,
											"end": 8717,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8699,
											"end": 8717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8699,
											"end": 8717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8692,
											"end": 8722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8758,
											"end": 8792,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F74207061696420656E6F75676820666F7220746869"
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73206974656D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8809,
											"end": 8827,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8809,
											"end": 8827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8809,
											"end": 8827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8855,
											"end": 8874,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8855,
											"end": 8874,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56818,
											"end": 56911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8478,
											"end": 8880,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 56818,
											"end": 56911,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 56818,
											"end": 56911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57015,
											"end": 57016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56974,
											"end": 56997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56974,
											"end": 56997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56974,
											"end": 56997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56974,
											"end": 56987,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56974,
											"end": 56997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56974,
											"end": 56997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56974,
											"end": 56997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56974,
											"end": 56997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56974,
											"end": 56997,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56974,
											"end": 57003,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56974,
											"end": 57003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56974,
											"end": 57003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56974,
											"end": 57003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56974,
											"end": 57017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56966,
											"end": 57048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 56966,
											"end": 57048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56966,
											"end": 57048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56966,
											"end": 57048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56966,
											"end": 57048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56966,
											"end": 57048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9087,
											"end": 9089,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 56966,
											"end": 57048,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56966,
											"end": 57048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56966,
											"end": 57048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9069,
											"end": 9090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9128,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 9106,
											"end": 9124,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9106,
											"end": 9124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9099,
											"end": 9129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9165,
											"end": 9193,
											"name": "PUSH",
											"source": 1,
											"value": "5468697320746F6B656E2073656C6C6564206279204552433230000000000000"
										},
										{
											"begin": 9145,
											"end": 9163,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9145,
											"end": 9163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9145,
											"end": 9163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9138,
											"end": 9194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56966,
											"end": 57048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8885,
											"end": 9235,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 56966,
											"end": 57048,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 56966,
											"end": 57048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57086,
											"end": 57095,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57069,
											"end": 57083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57126,
											"end": 57176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 57139,
											"end": 57164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 57086,
											"end": 57095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57160,
											"end": 57163,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 57139,
											"end": 57151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 57139,
											"end": 57164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57126,
											"end": 57176,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 57126,
											"end": 57176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57106,
											"end": 57176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57106,
											"end": 57176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57225,
											"end": 57232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57225,
											"end": 57232,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 57225,
											"end": 57232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57191,
											"end": 57214,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57204,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57191,
											"end": 57214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57191,
											"end": 57214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57191,
											"end": 57214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57214,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57221,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57191,
											"end": 57221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57221,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57191,
											"end": 57232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57187,
											"end": 57247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 57187,
											"end": 57247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57246,
											"end": 57247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57187,
											"end": 57247,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 57187,
											"end": 57247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57258,
											"end": 57279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57282,
											"end": 57313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 57295,
											"end": 57301,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57303,
											"end": 57312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57282,
											"end": 57294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 57282,
											"end": 57313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57282,
											"end": 57313,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 57282,
											"end": 57313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57334,
											"end": 57357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57334,
											"end": 57357,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57334,
											"end": 57357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57334,
											"end": 57357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57334,
											"end": 57347,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57334,
											"end": 57357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57334,
											"end": 57357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57334,
											"end": 57357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57334,
											"end": 57357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57334,
											"end": 57357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57334,
											"end": 57357,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57334,
											"end": 57364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57334,
											"end": 57364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57334,
											"end": 57364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57258,
											"end": 57313,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57258,
											"end": 57313,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57334,
											"end": 57364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57334,
											"end": 57364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57258,
											"end": 57313,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57258,
											"end": 57313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57334,
											"end": 57357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57258,
											"end": 57313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57334,
											"end": 57364,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 57326,
											"end": 57389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57404,
											"end": 57417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57404,
											"end": 57417,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57400,
											"end": 57482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 57400,
											"end": 57482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57469,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57469,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57434,
											"end": 57470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57400,
											"end": 57482,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 57400,
											"end": 57482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57511,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57502,
											"end": 57511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57502,
											"end": 57511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57524,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 57502,
											"end": 57524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57533,
											"end": 57537,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 57533,
											"end": 57537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57540,
											"end": 57550,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57540,
											"end": 57550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57552,
											"end": 57560,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 57552,
											"end": 57560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 57502,
											"end": 57561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 57502,
											"end": 57561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57600,
											"end": 57605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57572,
											"end": 57597,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57572,
											"end": 57597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57572,
											"end": 57597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57572,
											"end": 57587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57572,
											"end": 57597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57572,
											"end": 57597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57572,
											"end": 57597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57572,
											"end": 57597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57572,
											"end": 57597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57572,
											"end": 57597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57572,
											"end": 57597,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57572,
											"end": 57597,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57572,
											"end": 57605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57572,
											"end": 57605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 57572,
											"end": 57605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57572,
											"end": 57605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57572,
											"end": 57605,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 57627,
											"end": 57640,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57627,
											"end": 57650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57627,
											"end": 57650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57627,
											"end": 57650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57627,
											"end": 57650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57627,
											"end": 57650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57627,
											"end": 57650,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 57627,
											"end": 57657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57627,
											"end": 57657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57627,
											"end": 57657,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57681,
											"end": 57710,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57681,
											"end": 57710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57681,
											"end": 57710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57681,
											"end": 57710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57681,
											"end": 57710,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57623,
											"end": 57711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57623,
											"end": 57711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57627,
											"end": 57657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57627,
											"end": 57657,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57627,
											"end": 57657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9509,
											"end": 9543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 57659,
											"end": 57669,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9552,
											"end": 9595,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9552,
											"end": 9595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9552,
											"end": 9595,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9552,
											"end": 9595,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9611,
											"end": 9629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9611,
											"end": 9629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9611,
											"end": 9629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9604,
											"end": 9638,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9604,
											"end": 9638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9604,
											"end": 9638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9669,
											"end": 9671,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9654,
											"end": 9672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9647,
											"end": 9681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 57623,
											"end": 57711,
											"name": "PUSH",
											"source": 0,
											"value": "89F5ADC174562E07C9C9B1CAE7109BBECB21CF9D1B2847E550042B8653C54A0E"
										},
										{
											"begin": 57623,
											"end": 57711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9458,
											"end": 9461,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57623,
											"end": 57711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57623,
											"end": 57711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57623,
											"end": 57711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57623,
											"end": 57711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57623,
											"end": 57711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57623,
											"end": 57711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57623,
											"end": 57711,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 57724,
											"end": 57749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 57740,
											"end": 57748,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57724,
											"end": 57739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 57724,
											"end": 57749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57724,
											"end": 57749,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 57724,
											"end": 57749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56663,
											"end": 57757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56663,
											"end": 57757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56663,
											"end": 57757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56591,
											"end": 57757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56591,
											"end": 57757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50857,
											"end": 50873,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 50893,
											"end": 50906,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50886,
											"end": 50906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50810,
											"end": 50914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2759,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2732,
											"end": 2762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2732,
											"end": 2762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50980,
											"end": 50984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50980,
											"end": 50984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50997,
											"end": 51108,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 50997,
											"end": 51108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51013,
											"end": 51026,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 51013,
											"end": 51033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51011,
											"end": 51033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51011,
											"end": 51033,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50997,
											"end": 51108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50997,
											"end": 51108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 50997,
											"end": 51108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51080,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 51081,
											"end": 51082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 51067,
											"end": 51083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51067,
											"end": 51083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51058,
											"end": 51083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51058,
											"end": 51083,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51058,
											"end": 51083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51058,
											"end": 51083,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51054,
											"end": 51096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 51054,
											"end": 51096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51092,
											"end": 51096,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51092,
											"end": 51096,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50920,
											"end": 51138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51054,
											"end": 51096,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 51054,
											"end": 51096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51034,
											"end": 51037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51034,
											"end": 51037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 51034,
											"end": 51037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51034,
											"end": 51037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 51034,
											"end": 51037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51034,
											"end": 51037,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 51034,
											"end": 51037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51034,
											"end": 51037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51034,
											"end": 51037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51034,
											"end": 51037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50997,
											"end": 51108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 50997,
											"end": 51108,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50997,
											"end": 51108,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 50997,
											"end": 51108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51125,
											"end": 51130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51125,
											"end": 51130,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50920,
											"end": 51138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50920,
											"end": 51138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57928,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57919,
											"end": 57928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2157,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 57950,
											"end": 57960,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57950,
											"end": 57960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57919,
											"end": 57928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57936,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 57919,
											"end": 57936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 57919,
											"end": 57946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 57919,
											"end": 57946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57919,
											"end": 57960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57919,
											"end": 57960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57897,
											"end": 58013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 57897,
											"end": 58013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57897,
											"end": 58013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57897,
											"end": 58013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57897,
											"end": 58013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57897,
											"end": 58013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10554,
											"end": 10556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 57897,
											"end": 58013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57897,
											"end": 58013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57897,
											"end": 58013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10536,
											"end": 10557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10593,
											"end": 10595,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 10573,
											"end": 10591,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10573,
											"end": 10591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10573,
											"end": 10591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10566,
											"end": 10596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10659,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000"
										},
										{
											"begin": 10612,
											"end": 10630,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10612,
											"end": 10630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10612,
											"end": 10630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10695,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10677,
											"end": 10695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57897,
											"end": 58013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 10352,
											"end": 10701,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57897,
											"end": 58013,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 57897,
											"end": 58013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58040,
											"end": 58041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58032,
											"end": 58037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58032,
											"end": 58041,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58024,
											"end": 58077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 58024,
											"end": 58077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58024,
											"end": 58077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58024,
											"end": 58077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58024,
											"end": 58077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58024,
											"end": 58077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10908,
											"end": 10910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 58024,
											"end": 58077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58024,
											"end": 58077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58024,
											"end": 58077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10890,
											"end": 10911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10947,
											"end": 10949,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10927,
											"end": 10945,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10927,
											"end": 10945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10986,
											"end": 11019,
											"name": "PUSH",
											"source": 1,
											"value": "5072696365206D7573742062652067726561746572207468616E207A65726F00"
										},
										{
											"begin": 10966,
											"end": 10984,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10966,
											"end": 10984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10959,
											"end": 11020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58024,
											"end": 58077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 10706,
											"end": 11061,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58024,
											"end": 58077,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 58024,
											"end": 58077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58092,
											"end": 58112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58092,
											"end": 58112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58092,
											"end": 58112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58088,
											"end": 58260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 58088,
											"end": 58260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58169,
											"end": 58191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 58184,
											"end": 58190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58169,
											"end": 58183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 58169,
											"end": 58191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58169,
											"end": 58191,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 58169,
											"end": 58191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58169,
											"end": 58199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58169,
											"end": 58199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58195,
											"end": 58199,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58169,
											"end": 58199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58161,
											"end": 58248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 58161,
											"end": 58248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58161,
											"end": 58248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58161,
											"end": 58248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58161,
											"end": 58248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58161,
											"end": 58248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11268,
											"end": 11270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 58161,
											"end": 58248,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58161,
											"end": 58248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58161,
											"end": 58248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11307,
											"end": 11309,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11280,
											"end": 11310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11380,
											"name": "PUSH",
											"source": 1,
											"value": "54686973204552433230206E6F7420616C6C6F77656420617320612074726164"
										},
										{
											"begin": 11326,
											"end": 11344,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11326,
											"end": 11344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E672063757272656E6379"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11397,
											"end": 11415,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11397,
											"end": 11415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11397,
											"end": 11415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11390,
											"end": 11432,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11449,
											"end": 11468,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11449,
											"end": 11468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58161,
											"end": 58248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11066,
											"end": 11474,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58161,
											"end": 58248,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 58161,
											"end": 58248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58272,
											"end": 58297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58287,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58272,
											"end": 58297,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58272,
											"end": 58297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58272,
											"end": 58297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58297,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58297,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 58272,
											"end": 58304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58300,
											"end": 58304,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58272,
											"end": 58304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58304,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58304,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58388,
											"end": 58398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58341,
											"end": 58450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58338,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58338,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58328,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58315,
											"end": 58338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58338,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58338,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58338,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58338,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58450,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58470,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 58461,
											"end": 58483,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58388,
											"end": 58398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58504,
											"end": 58508,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 58504,
											"end": 58508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58288,
											"end": 58296,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 58288,
											"end": 58296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 58461,
											"end": 58520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 58461,
											"end": 58520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58535,
											"end": 58555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58531,
											"end": 58726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 58531,
											"end": 58726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58599,
											"end": 58609,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11748,
											"end": 11782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11813,
											"end": 11815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11791,
											"end": 11825,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11791,
											"end": 11825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11791,
											"end": 11825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11861,
											"end": 11876,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11861,
											"end": 11876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11841,
											"end": 11859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11841,
											"end": 11859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11841,
											"end": 11859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11834,
											"end": 11877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11834,
											"end": 11877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11834,
											"end": 11877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11834,
											"end": 11877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11908,
											"end": 11910,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11893,
											"end": 11911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11893,
											"end": 11911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11886,
											"end": 11920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11886,
											"end": 11920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11886,
											"end": 11920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "PUSH",
											"source": 0,
											"value": "A4292E75F7EAFDE90821610C4CABFC298540C274B50A7EA784A529A2B8A4A6F"
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11697,
											"end": 11700,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11682,
											"end": 11701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58577,
											"end": 58635,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58531,
											"end": 58726,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 58531,
											"end": 58726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58673,
											"end": 58714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58673,
											"end": 58714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58673,
											"end": 58714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58686,
											"end": 58696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12133,
											"end": 12184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12133,
											"end": 12184,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12217,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12200,
											"end": 12218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12200,
											"end": 12218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12193,
											"end": 12227,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12193,
											"end": 12227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12193,
											"end": 12227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12243,
											"end": 12261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12243,
											"end": 12261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12243,
											"end": 12261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12236,
											"end": 12270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12236,
											"end": 12270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12236,
											"end": 12270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58673,
											"end": 58714,
											"name": "PUSH",
											"source": 0,
											"value": "4524387B4311078B7531910A140A6975002B10ACA4CF12255E98DA8F1FF1B35B"
										},
										{
											"begin": 58673,
											"end": 58714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12123,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12106,
											"end": 12124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58673,
											"end": 58714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 11931,
											"end": 12276,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58531,
											"end": 58726,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 58531,
											"end": 58726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57765,
											"end": 58733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53574,
											"end": 53590,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 53574,
											"end": 53597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53492,
											"end": 53514,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 53492,
											"end": 53514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53532,
											"end": 53555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53532,
											"end": 53555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 53558,
											"end": 53598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53532,
											"end": 53598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53532,
											"end": 53598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53614,
											"end": 53623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53609,
											"end": 54002,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 53609,
											"end": 54002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53633,
											"end": 53649,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 53633,
											"end": 53656,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53629,
											"end": 53656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53629,
											"end": 53656,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 54002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 54002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 53609,
											"end": 54002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53678,
											"end": 53694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53697,
											"end": 53713,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 53714,
											"end": 53715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 53697,
											"end": 53716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53838,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53828,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53815,
											"end": 53838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53838,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53838,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53815,
											"end": 53845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53815,
											"end": 53845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53815,
											"end": 53845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53864,
											"end": 53893,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53864,
											"end": 53893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53864,
											"end": 53893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53864,
											"end": 53893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53935,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53935,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53935,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53941,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 53912,
											"end": 53941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53941,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53941,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53912,
											"end": 53941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53697,
											"end": 53716,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53760,
											"end": 53956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53975,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53976,
											"end": 53977,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53976,
											"end": 53977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 53971,
											"end": 53978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53971,
											"end": 53990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53663,
											"end": 54002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53663,
											"end": 54002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53658,
											"end": 53661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53658,
											"end": 53661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53658,
											"end": 53661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 53658,
											"end": 53661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53658,
											"end": 53661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 53658,
											"end": 53661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53658,
											"end": 53661,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 53658,
											"end": 53661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53658,
											"end": 53661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53658,
											"end": 53661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53658,
											"end": 53661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 54002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 53609,
											"end": 54002,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 54002,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 53609,
											"end": 54002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54019,
											"end": 54023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53424,
											"end": 54918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53424,
											"end": 54918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 50460,
											"end": 50559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50527,
											"end": 50543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50546,
											"end": 50551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50527,
											"end": 50543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50527,
											"end": 50543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50527,
											"end": 50543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50527,
											"end": 50537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50527,
											"end": 50543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50527,
											"end": 50543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50527,
											"end": 50543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50527,
											"end": 50543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50527,
											"end": 50543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50527,
											"end": 50551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50527,
											"end": 50551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 50527,
											"end": 50551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50527,
											"end": 50551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50527,
											"end": 50551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50460,
											"end": 50559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50765,
											"end": 50796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50765,
											"end": 50796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50765,
											"end": 50796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 50765,
											"end": 50796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50765,
											"end": 50778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 50765,
											"end": 50778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50765,
											"end": 50796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50765,
											"end": 50796,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50765,
											"end": 50796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50765,
											"end": 50796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50765,
											"end": 50796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 50765,
											"end": 50796,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50765,
											"end": 50796,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 50765,
											"end": 50796,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50765,
											"end": 50796,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50678,
											"end": 50804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3036,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12483,
											"end": 12485,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12465,
											"end": 12486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12522,
											"end": 12524,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 12502,
											"end": 12520,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12502,
											"end": 12520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12502,
											"end": 12520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12595,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12541,
											"end": 12559,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12541,
											"end": 12559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12541,
											"end": 12559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12534,
											"end": 12596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12612,
											"end": 12630,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12612,
											"end": 12630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12612,
											"end": 12630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12605,
											"end": 12641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12658,
											"end": 12677,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12658,
											"end": 12677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 12281,
											"end": 12683,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 3109,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3090,
											"end": 3118,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 3090,
											"end": 3118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 51623,
											"end": 51831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51750,
											"end": 51780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51750,
											"end": 51780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51774,
											"end": 51778,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51750,
											"end": 51780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 360,
											"end": 411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 51715,
											"end": 51720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51715,
											"end": 51720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51693,
											"end": 51705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51693,
											"end": 51705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51750,
											"end": 51765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 51750,
											"end": 51765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 351,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 333,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51750,
											"end": 51780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 51750,
											"end": 51780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 51750,
											"end": 51780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51732,
											"end": 51780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51732,
											"end": 51780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51796,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51791,
											"end": 51805,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 51806,
											"end": 51813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51806,
											"end": 51813,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 51806,
											"end": 51813,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51791,
											"end": 51823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 51791,
											"end": 51823,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8391,
											"end": 8423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8423,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51791,
											"end": 51823,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8373,
											"end": 8424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8458,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8440,
											"end": 8458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8433,
											"end": 8467,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8433,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8433,
											"end": 8467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51791,
											"end": 51823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 51791,
											"end": 51823,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 51252,
											"end": 51445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51353,
											"end": 51389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51321,
											"end": 51342,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 51321,
											"end": 51342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51361,
											"end": 51371,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 51361,
											"end": 51371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51321,
											"end": 51342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51321,
											"end": 51342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51353,
											"end": 51389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51321,
											"end": 51342,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51361,
											"end": 51371,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51353,
											"end": 51389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 51353,
											"end": 51389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51405,
											"end": 51437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51405,
											"end": 51437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51405,
											"end": 51437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51418,
											"end": 51428,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8373,
											"end": 8424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8373,
											"end": 8424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8455,
											"end": 8457,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8440,
											"end": 8458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8433,
											"end": 8467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8433,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8433,
											"end": 8467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 51405,
											"end": 51437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D59F809F461FB2E2CA77F931DC43A9AAAA4295B0ED3C8E6ADC04D0AAB43EEB47"
										},
										{
											"begin": 51405,
											"end": 51437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51405,
											"end": 51437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8199,
											"end": 8473,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35799,
											"end": 35806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 35830,
											"end": 35831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35826,
											"end": 35827,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 35826,
											"end": 35831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35819,
											"end": 35831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35819,
											"end": 35831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35741,
											"end": 35839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35342,
											"end": 35440,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 35342,
											"end": 35440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35400,
											"end": 35407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35427,
											"end": 35432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 35431,
											"end": 35432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 35428,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 35432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 35427,
											"end": 35432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34985,
											"end": 35083,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 34985,
											"end": 35083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35043,
											"end": 35050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35070,
											"end": 35075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 35074,
											"end": 35075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 35070,
											"end": 35075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 6649,
											"end": 6654,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6679,
											"end": 6706,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 6679,
											"end": 6706,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6679,
											"end": 6706,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 6712,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6723,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6656,
											"end": 6724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 6629,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52040,
											"end": 52175,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 52040,
											"end": 52175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52128,
											"end": 52167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52125,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52125,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52115,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52102,
											"end": 52125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52125,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52125,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52125,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52102,
											"end": 52167,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52040,
											"end": 52175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2184,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13700,
											"end": 13702,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13682,
											"end": 13703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13682,
											"end": 13703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13719,
											"end": 13737,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13719,
											"end": 13737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13719,
											"end": 13737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13712,
											"end": 13742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13778,
											"end": 13812,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13758,
											"end": 13776,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13758,
											"end": 13776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13758,
											"end": 13776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13751,
											"end": 13813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13830,
											"end": 13848,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13830,
											"end": 13848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 13498,
											"end": 13854,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3477,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3286,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9947,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 9231,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 9709,
											"end": 9713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9694,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9681,
											"end": 9708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 9681,
											"end": 9708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9765,
											"end": 9786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9761,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 9761,
											"end": 9940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 9851,
											"end": 9881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14061,
											"end": 14063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14100,
											"end": 14102,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 14080,
											"end": 14098,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14080,
											"end": 14098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14080,
											"end": 14098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14073,
											"end": 14103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14139,
											"end": 14173,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 14119,
											"end": 14137,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14119,
											"end": 14137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14119,
											"end": 14137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14112,
											"end": 14174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14190,
											"end": 14208,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14190,
											"end": 14208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14190,
											"end": 14208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14183,
											"end": 14223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14240,
											"end": 14259,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14240,
											"end": 14259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 13859,
											"end": 14265,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42812,
											"end": 43041,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 42812,
											"end": 43041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42961,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42981,
											"end": 43033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 43003,
											"end": 43009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43011,
											"end": 43015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43017,
											"end": 43018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43020,
											"end": 43032,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42981,
											"end": 43002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 42981,
											"end": 43033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42981,
											"end": 43033,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 42981,
											"end": 43033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42974,
											"end": 43033,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 42812,
											"end": 43041,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42812,
											"end": 43041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43898,
											"end": 44353,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 43898,
											"end": 44353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44068,
											"end": 44080,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 44126,
											"end": 44131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44122,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44131,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14472,
											"end": 14474,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14511,
											"end": 14513,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 14491,
											"end": 14509,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14491,
											"end": 14509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14491,
											"end": 14509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14550,
											"end": 14584,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 14530,
											"end": 14548,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14530,
											"end": 14548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14530,
											"end": 14548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14523,
											"end": 14585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14601,
											"end": 14619,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14601,
											"end": 14619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14601,
											"end": 14619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14594,
											"end": 14630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 14666,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14647,
											"end": 14666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 14270,
											"end": 14672,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44186,
											"end": 44198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44200,
											"end": 44223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44233,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44227,
											"end": 44238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44246,
											"end": 44251,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44253,
											"end": 44257,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 44227,
											"end": 44258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44276,
											"end": 44345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 44303,
											"end": 44309,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44311,
											"end": 44318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44320,
											"end": 44330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44332,
											"end": 44344,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44276,
											"end": 44302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 44276,
											"end": 44345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44276,
											"end": 44345,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 44276,
											"end": 44345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44269,
											"end": 44345,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 43898,
											"end": 44353,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43898,
											"end": 44353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46471,
											"end": 47115,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 46471,
											"end": 47115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46656,
											"end": 46668,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 46685,
											"end": 46692,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46713,
											"end": 46723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46713,
											"end": 46730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46734,
											"end": 46735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46713,
											"end": 46735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46709,
											"end": 46999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 46709,
											"end": 46999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40351,
											"end": 40370,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40351,
											"end": 40370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40351,
											"end": 40370,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15428,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15408,
											"end": 15429,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15465,
											"end": 15467,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 15445,
											"end": 15463,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15445,
											"end": 15463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15445,
											"end": 15463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15438,
											"end": 15468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15504,
											"end": 15535,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 15484,
											"end": 15502,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15484,
											"end": 15502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15484,
											"end": 15502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15477,
											"end": 15536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15553,
											"end": 15571,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15553,
											"end": 15571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 15224,
											"end": 15577,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47020,
											"end": 47030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47013,
											"end": 47030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 47013,
											"end": 47030,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47063,
											"end": 47096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 47071,
											"end": 47081,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47083,
											"end": 47095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47818,
											"end": 47835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47818,
											"end": 47835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47818,
											"end": 47839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48050,
											"end": 48060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48044,
											"end": 48061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48107,
											"end": 48122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48094,
											"end": 48104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48090,
											"end": 48092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48086,
											"end": 48105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48079,
											"end": 48123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48177,
											"end": 48189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 48170,
											"end": 48190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "309"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "402"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "403"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "402"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "403"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "404"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "402"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "404"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 422,
											"end": 553,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 422,
											"end": 553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 497,
											"end": 528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 497,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 477,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 477,
											"end": 547,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 533,
											"end": 545,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 558,
											"end": 692,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 558,
											"end": 692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 626,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 626,
											"end": 646,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 655,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 655,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 686,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 655,
											"end": 686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 558,
											"end": 692,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 558,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 558,
											"end": 692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 558,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 944,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 697,
											"end": 944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 756,
											"end": 762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 780,
											"end": 812,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 777,
											"end": 829,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 777,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 777,
											"end": 829,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 825,
											"end": 826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 827,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 777,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 777,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 864,
											"end": 873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 851,
											"end": 874,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 883,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 908,
											"end": 913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 883,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 883,
											"end": 914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1981,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 949,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1395,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1955,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 1461,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1482,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1955,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 1461,
											"end": 1955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1581,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1632,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1709,
											"end": 1730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1707,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1707,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1782,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1763,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1763,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1855,
											"end": 1866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1906,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1893,
											"end": 1907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1907,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1907,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1945,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1490,
											"end": 1499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 1461,
											"end": 1955,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1955,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 1461,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 1975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1975,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1981,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 949,
											"end": 1981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2826,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2168,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2341,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2391,
											"end": 2412,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2412,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2314,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2539,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2314,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2800,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 2605,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2626,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2800,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 2605,
											"end": 2800,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2697,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2697,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2680,
											"end": 2719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2720,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2790,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2790,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2790,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2752,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 2605,
											"end": 2800,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2800,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 2605,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2826,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2168,
											"end": 2826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3406,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3023,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3171,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3157,
											"end": 3166,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3155,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3167,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3189,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 3137,
											"end": 3189,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3189,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 3137,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3230,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3231,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3276,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3282,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3321,
											"end": 3330,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3336,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 3370,
											"end": 3375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 3345,
											"end": 3376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3376,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 3345,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3400,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3406,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3406,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3406,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3746,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3619,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3675,
											"end": 3678,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3671,
											"end": 3691,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3715,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3701,
											"end": 3716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3732,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3740,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 4872,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3751,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3866,
											"end": 3868,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3909,
											"end": 3911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3906,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 3907,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 3912,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3929,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 3877,
											"end": 3929,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3927,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 3877,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 3974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3975,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4035,
											"end": 4037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4027,
											"end": 4033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4038,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4055,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 4021,
											"end": 4055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4053,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4055,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 4021,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4078,
											"end": 4087,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4141,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4131,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4123,
											"end": 4125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4142,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 4105,
											"end": 4160,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4156,
											"end": 4157,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4158,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4160,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 4105,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4195,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4217,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 4204,
											"end": 4240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 4220,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4220,
											"end": 4238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 4220,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4268,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4264,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4259,
											"end": 4269,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4298,
											"end": 4300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4361,
											"end": 4363,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4354,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 4348,
											"end": 4350,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4423,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4398,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4399,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4427,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 4427,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4427,
											"end": 4445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4427,
											"end": 4445,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 4427,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4456,
											"end": 4478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4531,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4562,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4589,
											"end": 4600,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4605,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4614,
											"end": 4653,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4614,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 4614,
											"end": 4653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4646,
											"end": 4647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4639,
											"end": 4651,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4614,
											"end": 4653,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 4614,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4841,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 4693,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4701,
											"end": 4716,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4841,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 4693,
											"end": 4841,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4794,
											"end": 4797,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 4775,
											"end": 4798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4798,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4775,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4738,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4738,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4738,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4831,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 4693,
											"end": 4841,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4841,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 4693,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 4872,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3751,
											"end": 4872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5775,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5591,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5714,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5702,
											"end": 5711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5700,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5689,
											"end": 5712,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5717,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5734,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 5682,
											"end": 5734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5730,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5727,
											"end": 5728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5734,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 5682,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5753,
											"end": 5769,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5753,
											"end": 5769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 5775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 7312,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6937,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7195,
											"end": 7210,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7210,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7262,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7242,
											"end": 7244,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7227,
											"end": 7245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7227,
											"end": 7245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 7263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7306,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7129,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7112,
											"end": 7130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7112,
											"end": 7130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 7312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9692,
											"end": 9819,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 9692,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9753,
											"end": 9763,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9748,
											"end": 9751,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9744,
											"end": 9764,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9741,
											"end": 9742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9784,
											"end": 9788,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9781,
											"end": 9782,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9805,
											"end": 9806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9813,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9824,
											"end": 9951,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 9824,
											"end": 9951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9885,
											"end": 9895,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9880,
											"end": 9883,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9876,
											"end": 9896,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9873,
											"end": 9874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9866,
											"end": 9897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9916,
											"end": 9920,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9913,
											"end": 9914,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9906,
											"end": 9921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 9944,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9937,
											"end": 9938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 9945,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 10091,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 9956,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 9998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10016,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10016,
											"end": 10033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10016,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10013,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 10013,
											"end": 10056,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 10036,
											"end": 10054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10083,
											"end": 10084,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10072,
											"end": 10085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10072,
											"end": 10085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 10091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10347,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 10096,
											"end": 10347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10166,
											"end": 10172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10219,
											"end": 10221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10207,
											"end": 10216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10198,
											"end": 10205,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10194,
											"end": 10217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10222,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10187,
											"end": 10239,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10187,
											"end": 10239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 10187,
											"end": 10239,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10232,
											"end": 10233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10237,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10187,
											"end": 10239,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 10187,
											"end": 10239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10261,
											"end": 10277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10286,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 10311,
											"end": 10316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10286,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 10286,
											"end": 10317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12688,
											"end": 12965,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 12688,
											"end": 12965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12755,
											"end": 12761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12808,
											"end": 12810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12796,
											"end": 12805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12787,
											"end": 12794,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12783,
											"end": 12806,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12779,
											"end": 12811,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12776,
											"end": 12828,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12776,
											"end": 12828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 12776,
											"end": 12828,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12824,
											"end": 12825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12821,
											"end": 12822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12814,
											"end": 12826,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12776,
											"end": 12828,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 12776,
											"end": 12828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12856,
											"end": 12865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12850,
											"end": 12866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12909,
											"end": 12914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12902,
											"end": 12915,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 12916,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 12893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12885,
											"end": 12917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12875,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 12875,
											"end": 12935,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12928,
											"end": 12929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12921,
											"end": 12933,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12970,
											"end": 13187,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 12970,
											"end": 13187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13010,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13026,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 13026,
											"end": 13158,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13080,
											"end": 13090,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 13075,
											"end": 13078,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 13071,
											"end": 13091,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13068,
											"end": 13069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13061,
											"end": 13092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13119,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 13112,
											"end": 13113,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13105,
											"end": 13120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13143,
											"end": 13147,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13140,
											"end": 13141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13133,
											"end": 13148,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13026,
											"end": 13158,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 13026,
											"end": 13158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13172,
											"end": 13181,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13172,
											"end": 13181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12970,
											"end": 13187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13192,
											"end": 13360,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 13192,
											"end": 13360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13265,
											"end": 13274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13265,
											"end": 13274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13265,
											"end": 13274,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13296,
											"end": 13305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13296,
											"end": 13305,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13328,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13307,
											"end": 13329,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13307,
											"end": 13329,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13293,
											"end": 13330,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13283,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 13283,
											"end": 13354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 13334,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 13334,
											"end": 13352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13365,
											"end": 13493,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 13365,
											"end": 13493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13432,
											"end": 13441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13432,
											"end": 13441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13432,
											"end": 13441,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13464,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13487,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 13450,
											"end": 13487,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13467,
											"end": 13485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 13467,
											"end": 13485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 13467,
											"end": 13485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14677,
											"end": 14927,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 14677,
											"end": 14927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14762,
											"end": 14763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14772,
											"end": 14885,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 14772,
											"end": 14885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14786,
											"end": 14792,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14783,
											"end": 14784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14780,
											"end": 14793,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 14772,
											"end": 14885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14862,
											"end": 14873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14862,
											"end": 14873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14862,
											"end": 14873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14856,
											"end": 14874,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14843,
											"end": 14854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14843,
											"end": 14854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14843,
											"end": 14854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14836,
											"end": 14875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14808,
											"end": 14810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14801,
											"end": 14811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 14772,
											"end": 14885,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14885,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 14772,
											"end": 14885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14919,
											"end": 14920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14901,
											"end": 14917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14901,
											"end": 14917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14894,
											"end": 14921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14677,
											"end": 14927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14932,
											"end": 15219,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 14932,
											"end": 15219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15061,
											"end": 15064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15099,
											"end": 15105,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15106,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 15174,
											"end": 15180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15169,
											"end": 15172,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15162,
											"end": 15166,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15154,
											"end": 15160,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 15115,
											"end": 15181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15181,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 15115,
											"end": 15181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15197,
											"end": 15213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15197,
											"end": 15213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15197,
											"end": 15213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15197,
											"end": 15213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15197,
											"end": 15213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14932,
											"end": 15219,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14932,
											"end": 15219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15582,
											"end": 15978,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 15582,
											"end": 15978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15731,
											"end": 15733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15720,
											"end": 15729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15713,
											"end": 15734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15763,
											"end": 15769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15757,
											"end": 15770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15806,
											"end": 15812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15801,
											"end": 15803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15790,
											"end": 15799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15786,
											"end": 15804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15779,
											"end": 15813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15822,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 15894,
											"end": 15900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15889,
											"end": 15891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15878,
											"end": 15887,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15869,
											"end": 15871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15861,
											"end": 15867,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15857,
											"end": 15872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15822,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 15822,
											"end": 15901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15822,
											"end": 15901,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 15822,
											"end": 15901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15962,
											"end": 15964,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15937,
											"end": 15966,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15922,
											"end": 15967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15922,
											"end": 15967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15922,
											"end": 15967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15922,
											"end": 15967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 15971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15918,
											"end": 15972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15918,
											"end": 15972,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15582,
											"end": 15978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15582,
											"end": 15978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addBlackList(address)": "0ecb93c0",
							"bankAmount()": "b42a275e",
							"bankAmountERC20(address)": "476caa70",
							"buyNFT(uint256)": "51ed8288",
							"buyNFTbyERC20(uint256)": "047a5d43",
							"deSellNFT(uint256)": "512ddcf9",
							"getAllowedERC20()": "69c57352",
							"getMyTokensAtSale()": "a096c5a2",
							"getTokensAtSale()": "d55a34e4",
							"getTradeFee()": "952977f5",
							"getUserTokensAtSale(address)": "19c8c1c5",
							"isAllowedERC20(address)": "785fa7ce",
							"isBlacklisted(address)": "fe575a87",
							"marketNft()": "08cfbc19",
							"owner()": "8da5cb5b",
							"removeBlackList(address)": "e4997dc5",
							"renounceOwnership()": "715018a6",
							"sellNFT(uint256,uint256,address)": "7c237eea",
							"setAllowedERC20(address[])": "e9e4e160",
							"setTradeFee(uint256)": "10603023",
							"transferOwnership(address)": "f2fde38b",
							"version()": "54fd4d50",
							"withdrawBank()": "ff7f0cf9",
							"withdrawBankERC20(address)": "fcf984a9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"__tradeFee\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"__allowedERC20\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"BuyWithERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PutUpForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PutUpForSaleWithERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawBank\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"WithdrawFromSale\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bankAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"bankAmountERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFTbyERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deSellNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedERC20\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"ret\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"ret\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTradeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getUserTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"ret\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"isAllowedERC20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketNft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"}],\"name\":\"sellNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newAllowedERC20\",\"type\":\"address[]\"}],\"name\":\"setAllowedERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTradeFee\",\"type\":\"uint256\"}],\"name\":\"setTradeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"withdrawBankERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x96592ed31474210ef6ef9b446daf8c9bca2a569d711a45c0002529c7193502c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ec1a996b870845a558032f6419c93b18eaca9ac9dd9d8e62a334808a3d56fa\",\"dweb:/ipfs/QmNtwb6CdJ9qoj3RpafnconLFRXnuw6BbJHjFMgV4dUXFb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2316,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "marketNft",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721)638"
							},
							{
								"astId": 2319,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "version",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2322,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_tradeFee",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2326,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_isTokensAtSale",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 2331,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_tokensAtSale",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(SelledNFT)2313_storage)"
							},
							{
								"astId": 2335,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_blackList",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2338,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_allowedERC20",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 2341,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_tokensIdsAtSale",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC721)638": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(SelledNFT)2313_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Marketplace.SelledNFT)",
								"numberOfBytes": "32",
								"value": "t_struct(SelledNFT)2313_storage"
							},
							"t_struct(SelledNFT)2313_storage": {
								"encoding": "inplace",
								"label": "struct Marketplace.SelledNFT",
								"members": [
									{
										"astId": 2306,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2308,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "seller",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 2310,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2312,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "erc20",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":17953:30569  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":17953:30569  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220be0ee1e05be5f6d21230e3f901493ea329f29b3cf4f38c6c0fe4b60f311ac6f064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220be0ee1e05be5f6d21230e3f901493ea329f29b3cf4f38c6c0fe4b60f311ac6f064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xE 0xE1 0xE0 JUMPDEST 0xE5 0xF6 0xD2 SLT ADDRESS 0xE3 0xF9 ADD 0x49 RETURNDATACOPY LOG3 0x29 CALLCODE SWAP12 EXTCODECOPY DELEGATECALL RETURN DUP13 PUSH13 0xFE4B60F311AC6F064736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "17953:12616:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;17953:12616:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220be0ee1e05be5f6d21230e3f901493ea329f29b3cf4f38c6c0fe4b60f311ac6f064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xE 0xE1 0xE0 JUMPDEST 0xE5 0xF6 0xD2 SLT ADDRESS 0xE3 0xF9 ADD 0x49 RETURNDATACOPY LOG3 0x29 CALLCODE SWAP12 EXTCODECOPY DELEGATECALL RETURN DUP13 PUSH13 0xFE4B60F311AC6F064736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "17953:12616:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be0ee1e05be5f6d21230e3f901493ea329f29b3cf4f38c6c0fe4b60f311ac6f064736f6c63430008120033",
									".code": [
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x96592ed31474210ef6ef9b446daf8c9bca2a569d711a45c0002529c7193502c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ec1a996b870845a558032f6419c93b18eaca9ac9dd9d8e62a334808a3d56fa\",\"dweb:/ipfs/QmNtwb6CdJ9qoj3RpafnconLFRXnuw6BbJHjFMgV4dUXFb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x96592ed31474210ef6ef9b446daf8c9bca2a569d711a45c0002529c7193502c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ec1a996b870845a558032f6419c93b18eaca9ac9dd9d8e62a334808a3d56fa\",\"dweb:/ipfs/QmNtwb6CdJ9qoj3RpafnconLFRXnuw6BbJHjFMgV4dUXFb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "source/Marketplace.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":6284:9950  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":6284:9950  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204ac38d05e27c60c85ed5df3c7270b46838b7363121d39a93a4a26e892731bfe164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ac38d05e27c60c85ed5df3c7270b46838b7363121d39a93a4a26e892731bfe164736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0xC3 DUP14 SDIV 0xE2 PUSH29 0x60C85ED5DF3C7270B46838B7363121D39A93A4A26E892731BFE164736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "6284:3666:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;6284:3666:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ac38d05e27c60c85ed5df3c7270b46838b7363121d39a93a4a26e892731bfe164736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0xC3 DUP14 SDIV 0xE2 PUSH29 0x60C85ED5DF3C7270B46838B7363121D39A93A4A26E892731BFE164736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "6284:3666:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204ac38d05e27c60c85ed5df3c7270b46838b7363121d39a93a4a26e892731bfe164736f6c63430008120033",
									".code": [
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x96592ed31474210ef6ef9b446daf8c9bca2a569d711a45c0002529c7193502c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ec1a996b870845a558032f6419c93b18eaca9ac9dd9d8e62a334808a3d56fa\",\"dweb:/ipfs/QmNtwb6CdJ9qoj3RpafnconLFRXnuw6BbJHjFMgV4dUXFb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":32254:38663  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":32254:38663  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220aec03b77a8655312e64a47e2541cea924726a1c487541a65fcffca29e81b9c4564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aec03b77a8655312e64a47e2541cea924726a1c487541a65fcffca29e81b9c4564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xC0 EXTCODESIZE PUSH24 0xA8655312E64A47E2541CEA924726A1C487541A65FCFFCA29 0xE8 SHL SWAP13 GASLIMIT PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "32254:6409:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;32254:6409:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aec03b77a8655312e64a47e2541cea924726a1c487541a65fcffca29e81b9c4564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xC0 EXTCODESIZE PUSH24 0xA8655312E64A47E2541CEA924726A1C487541A65FCFFCA29 0xE8 SHL SWAP13 GASLIMIT PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "32254:6409:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aec03b77a8655312e64a47e2541cea924726a1c487541a65fcffca29e81b9c4564736f6c63430008120033",
									".code": [
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x96592ed31474210ef6ef9b446daf8c9bca2a569d711a45c0002529c7193502c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ec1a996b870845a558032f6419c93b18eaca9ac9dd9d8e62a334808a3d56fa\",\"dweb:/ipfs/QmNtwb6CdJ9qoj3RpafnconLFRXnuw6BbJHjFMgV4dUXFb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":30734:31815  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":30734:31815  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220632f894401a5bf50542c86d9572f1cd2c83b6b8888be51a27463aa16130d381764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220632f894401a5bf50542c86d9572f1cd2c83b6b8888be51a27463aa16130d381764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x2F894401 0xA5 0xBF POP SLOAD 0x2C DUP7 0xD9 JUMPI 0x2F SHR 0xD2 0xC8 EXTCODESIZE PUSH12 0x8888BE51A27463AA16130D38 OR PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "30734:1081:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;30734:1081:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220632f894401a5bf50542c86d9572f1cd2c83b6b8888be51a27463aa16130d381764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x2F894401 0xA5 0xBF POP SLOAD 0x2C DUP7 0xD9 JUMPI 0x2F SHR 0xD2 0xC8 EXTCODESIZE PUSH12 0x8888BE51A27463AA16130D38 OR PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "30734:1081:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220632f894401a5bf50542c86d9572f1cd2c83b6b8888be51a27463aa16130d381764736f6c63430008120033",
									".code": [
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x96592ed31474210ef6ef9b446daf8c9bca2a569d711a45c0002529c7193502c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ec1a996b870845a558032f6419c93b18eaca9ac9dd9d8e62a334808a3d56fa\",\"dweb:/ipfs/QmNtwb6CdJ9qoj3RpafnconLFRXnuw6BbJHjFMgV4dUXFb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"source/Marketplace.sol": {
				"ast": {
					"absolutePath": "source/Marketplace.sol",
					"exportedSymbols": {
						"Address": [
							2243
						],
						"Context": [
							21
						],
						"IERC165": [
							526
						],
						"IERC20": [
							517
						],
						"IERC20Permit": [
							165
						],
						"IERC721": [
							638
						],
						"Marketplace": [
							3263
						],
						"Math": [
							1502
						],
						"Ownable": [
							131
						],
						"SafeERC20": [
							441
						],
						"SafeMath": [
							1915
						],
						"SignedMath": [
							1605
						]
					},
					"id": 3264,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "641:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "718:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "729:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "709:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:0"
									},
									"scope": 21,
									"src": "656:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "829:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "840:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "813:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:0"
									},
									"scope": 21,
									"src": "762:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3264,
							"src": "623:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 23,
										"name": "Context",
										"nameLocations": [
											"1478:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1478:7:0"
									},
									"id": 24,
									"nodeType": "InheritanceSpecifier",
									"src": "1478:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 22,
								"nodeType": "StructuredDocumentation",
								"src": "942:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								21
							],
							"name": "Ownable",
							"nameLocation": "1467:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1509:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "1493:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 25,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 32,
									"name": "OwnershipTransferred",
									"nameLocation": "1530:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1567:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1551:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1598:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1582:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1550:57:0"
									},
									"src": "1524:84:0"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "1729:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 37,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1759:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1759:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 36,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1740:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1740:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1740:32:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1616:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 42,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1726:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:0:0"
									},
									"scope": 131,
									"src": "1715:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1894:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 45,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1905:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "1905:13:0"
											},
											{
												"id": 48,
												"nodeType": "PlaceholderStatement",
												"src": "1929:1:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1788:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 50,
									"name": "onlyOwner",
									"nameLocation": "1882:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1891:2:0"
									},
									"src": "1873:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "2074:32:0",
										"statements": [
											{
												"expression": {
													"id": 56,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "2092:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 55,
												"id": 57,
												"nodeType": "Return",
												"src": "2085:13:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1946:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2028:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2033:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:9:0"
									},
									"scope": 131,
									"src": "2019:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "2229:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 64,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "2248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 66,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 63,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "2240:68:0"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "2114:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2193:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2204:2:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2229:0:0"
									},
									"scope": 131,
									"src": "2184:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2721:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 80,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 79,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2732:30:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2324:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 77,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 76,
												"name": "onlyOwner",
												"nameLocations": [
													"2711:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "2711:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2711:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2676:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2721:0:0"
									},
									"scope": 131,
									"src": "2667:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2995:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 96,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "3014:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3034:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3026:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 97,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3026:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3026:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3014:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3038:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3006:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "3006:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 106,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "3109:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "3090:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3090:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "3090:28:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2778:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyOwner",
												"nameLocations": [
													"2985:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "2985:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2985:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2934:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2960:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2952:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:18:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2995:0:0"
									},
									"scope": 131,
									"src": "2925:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "3349:128:0",
										"statements": [
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3368:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "3360:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 116,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3360:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"id": 118,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "3379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3360:25:0"
											},
											{
												"expression": {
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 120,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "3396:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 121,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "3405:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3396:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "3396:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 125,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3450:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 126,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3460:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 124,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "3429:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3429:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "EmitStatement",
												"src": "3424:45:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3134:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3295:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3322:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "3314:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:18:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:0"
									},
									"scope": 131,
									"src": "3286:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3264,
							"src": "1449:2031:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 132,
								"nodeType": "StructuredDocumentation",
								"src": "3562:487:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 165,
							"linearizedBaseContracts": [
								165
							],
							"name": "IERC20Permit",
							"nameLocation": "4061:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "4081:812:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "4908:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4933:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4957:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4949:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4983:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4975:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5007:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4999:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5032:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5026:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 142,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5026:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5052:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5044:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5072:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5064:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4914:166:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5089:0:0"
									},
									"scope": 165,
									"src": "4899:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5098:300:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "5413:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5428:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5420:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5419:15:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5458:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5457:9:0"
									},
									"scope": 165,
									"src": "5404:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5475:130:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "5674:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5690:2:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5716:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 161,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5715:9:0"
									},
									"scope": 165,
									"src": "5665:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3264,
							"src": "4051:1677:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 166,
								"nodeType": "StructuredDocumentation",
								"src": "5817:465:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 441,
							"linearizedBaseContracts": [
								441
							],
							"name": "SafeERC20",
							"nameLocation": "6292:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 169,
									"libraryName": {
										"id": 167,
										"name": "Address",
										"nameLocations": [
											"6315:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2243,
										"src": "6315:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "6309:26:0",
									"typeName": {
										"id": 168,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6327:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "6415:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 180,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "6446:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 183,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "6476:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6482:8:0",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 484,
																		"src": "6476:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6491:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "6476:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 186,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "6501:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 187,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "6505:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 181,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6453:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6457:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "6453:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6453:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 179,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "6426:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6426:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "6426:86:0"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "6352:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6372:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6365:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 170,
														"name": "IERC20",
														"nameLocations": [
															"6365:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "6365:6:0"
													},
													"referencedDeclaration": 517,
													"src": "6365:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6387:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6379:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6364:41:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6415:0:0"
									},
									"scope": 441,
									"src": "6343:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "6618:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 205,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6649:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 208,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 195,
																			"src": "6679:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6685:12:0",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 516,
																		"src": "6679:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6698:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "6679:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 211,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "6708:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 212,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "6714:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 213,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "6718:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 206,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6656:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6660:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "6656:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6656:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 204,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "6629:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6629:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "6629:96:0"
											}
										]
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6537:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6561:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6554:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 194,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 193,
														"name": "IERC20",
														"nameLocations": [
															"6554:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "6554:6:0"
													},
													"referencedDeclaration": 517,
													"src": "6554:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6576:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6568:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6590:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6582:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6602:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6594:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6553:55:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6618:0:0"
									},
									"scope": 441,
									"src": "6528:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7078:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 230,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 226,
																			"src": "7332:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7341:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7332:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 233,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7331:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 238,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "7372:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$441",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$441",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 237,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7364:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 236,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "7364:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7364:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 240,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 224,
																					"src": "7379:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 234,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 222,
																					"src": "7348:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$517",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7354:9:0",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 494,
																				"src": "7348:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7348:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7391:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7348:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 244,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7347:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7331:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7408:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7309:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7309:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 250,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "7506:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 253,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "7536:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7542:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 504,
																		"src": "7536:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7550:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "7536:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "7560:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 257,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "7569:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 251,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7513:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7517:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "7513:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7513:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 249,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "7486:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7486:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "7486:90:0"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "6741:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "7011:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7030:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7023:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "IERC20",
														"nameLocations": [
															"7023:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "7023:6:0"
													},
													"referencedDeclaration": 517,
													"src": "7023:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7045:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7062:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7054:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7022:46:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7078:0:0"
									},
									"scope": 441,
									"src": "7002:582:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "7678:197:0",
										"statements": [
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "7697:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 297,
														"src": "7689:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 278,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7736:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$441",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$441",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7728:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 276,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7728:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7728:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 280,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7743:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 274,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "7712:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$517",
																	"typeString": "contract IERC20"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7718:9:0",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 494,
															"src": "7712:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7712:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 282,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "7754:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7712:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7689:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 286,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "7790:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 289,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 265,
																			"src": "7820:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7826:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 504,
																		"src": "7820:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7834:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "7820:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 292,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "7844:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 293,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "7853:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 287,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7797:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7801:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "7797:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7797:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 285,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "7770:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7770:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "7770:97:0"
											}
										]
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "7601:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7630:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7623:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 263,
														"name": "IERC20",
														"nameLocations": [
															"7623:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "7623:6:0"
													},
													"referencedDeclaration": 517,
													"src": "7623:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7637:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7662:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7654:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7622:46:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7678:0:0"
									},
									"scope": 441,
									"src": "7592:283:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7969:377:0",
										"statements": [
											{
												"id": 344,
												"nodeType": "UncheckedBlock",
												"src": "7980:359:0",
												"statements": [
													{
														"assignments": [
															309
														],
														"declarations": [
															{
																"constant": false,
																"id": 309,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "8013:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 344,
																"src": "8005:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 308,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8005:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 318,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 314,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8052:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$441",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$441",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8044:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 312,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8044:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8044:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 316,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "8059:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 310,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "8028:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8034:9:0",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 494,
																"src": "8028:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8028:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8005:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 320,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "8090:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 321,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "8106:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8090:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8113:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 319,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "8082:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8082:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "8082:75:0"
													},
													{
														"assignments": [
															327
														],
														"declarations": [
															{
																"constant": false,
																"id": 327,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "8180:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 344,
																"src": "8172:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 326,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8172:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 331,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 328,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "8195:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "8210:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8195:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8172:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 333,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "8250:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 336,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 301,
																					"src": "8280:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$517",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8286:7:0",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 504,
																				"src": "8280:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8294:8:0",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "8280:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 339,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 303,
																			"src": "8304:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 340,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "8313:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 334,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "8257:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8261:18:0",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "8257:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8257:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 332,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "8230:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8230:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 343,
														"nodeType": "ExpressionStatement",
														"src": "8230:97:0"
													}
												]
											}
										]
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "7892:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7921:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7914:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 299,
														"name": "IERC20",
														"nameLocations": [
															"7914:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "7914:6:0"
													},
													"referencedDeclaration": 517,
													"src": "7914:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7936:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7953:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7945:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7913:46:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7969:0:0"
									},
									"scope": 441,
									"src": "7883:463:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8578:262:0",
										"statements": [
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "8597:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "8589:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 372,
												"initialValue": {
													"arguments": [
														{
															"id": 370,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8624:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 368,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8611:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$165",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8617:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "8611:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8611:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8589:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 376,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8654:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "8661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "8670:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 379,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "8677:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 380,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "8687:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 381,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "8690:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 382,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "8693:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 373,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8641:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$165",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8647:6:0",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 150,
														"src": "8641:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8641:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "8641:54:0"
											},
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "8714:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "8706:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 385,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [
														{
															"id": 389,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8740:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 387,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8727:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$165",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8733:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "8727:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8727:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8706:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "8765:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 394,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "8779:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8793:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8779:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8765:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8796:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8757:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8757:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8757:75:0"
											}
										]
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "8363:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8397:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8384:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$165",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 347,
														"name": "IERC20Permit",
														"nameLocations": [
															"8384:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 165,
														"src": "8384:12:0"
													},
													"referencedDeclaration": 165,
													"src": "8384:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$165",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8421:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8413:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8445:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8437:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8471:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8463:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "8495:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8487:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "8520:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8514:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 358,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8514:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "8540:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8532:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "8560:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8552:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 362,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8373:195:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8578:0:0"
									},
									"scope": 441,
									"src": "8354:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "9301:646:0",
										"statements": [
											{
												"assignments": [
													412
												],
												"declarations": [
													{
														"constant": false,
														"id": 412,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "9668:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 439,
														"src": "9655:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 411,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9655:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"arguments": [
														{
															"id": 418,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9709:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9715:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 415,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "9689:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9681:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 413,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9681:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9681:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9696:12:0",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2003,
														"src": "9681:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9681:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9655:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 422,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9765:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9776:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9765:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9785:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9765:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 438,
												"nodeType": "IfStatement",
												"src": "9761:179:0",
												"trueBody": {
													"id": 437,
													"nodeType": "Block",
													"src": "9788:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 429,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "9862:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 431,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "9875:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 430,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "9875:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 432,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "9874:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 427,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "9851:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "9855:6:0",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "9851:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9851:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9883:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 426,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9843:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9843:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 436,
															"nodeType": "ExpressionStatement",
															"src": "9843:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "8848:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "9240:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9267:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "9260:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 405,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 404,
														"name": "IERC20",
														"nameLocations": [
															"9260:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "9260:6:0"
													},
													"referencedDeclaration": 517,
													"src": "9260:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9287:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "9274:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9274:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9259:33:0"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9301:0:0"
									},
									"scope": 441,
									"src": "9231:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3264,
							"src": "6284:3666:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 442,
								"nodeType": "StructuredDocumentation",
								"src": "10030:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 517,
							"linearizedBaseContracts": [
								517
							],
							"name": "IERC20",
							"nameLocation": "10114:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "10128:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 451,
									"name": "Transfer",
									"nameLocation": "10303:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10328:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10312:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10350:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10334:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10334:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10362:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10354:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10311:57:0"
									},
									"src": "10297:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "10377:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 460,
									"name": "Approval",
									"nameLocation": "10540:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "10549:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10588:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "10572:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10605:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "10597:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10548:63:0"
									},
									"src": "10534:78:0"
								},
								{
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "10620:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "10703:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10714:2:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "10740:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10739:9:0"
									},
									"scope": 517,
									"src": "10694:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "10757:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "10846:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10864:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "10856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10855:17:0"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "10896:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10895:9:0"
									},
									"scope": 517,
									"src": "10837:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "10913:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "11136:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11153:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11145:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11165:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11157:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11144:28:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11191:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11191:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11190:6:0"
									},
									"scope": 517,
									"src": "11127:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "11205:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "11490:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11508:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11500:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11523:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11515:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11499:32:0"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11555:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11554:9:0"
									},
									"scope": 517,
									"src": "11481:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "11572:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "12242:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12258:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12250:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12275:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12267:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12249:33:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12301:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12301:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12300:6:0"
									},
									"scope": 517,
									"src": "12233:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "12315:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "12625:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12660:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12652:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12672:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12664:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12637:42:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12698:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12698:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12697:6:0"
									},
									"scope": 517,
									"src": "12616:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3264,
							"src": "10104:2603:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 526,
							"linearizedBaseContracts": [
								526
							],
							"name": "IERC165",
							"nameLocation": "12723:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "12738:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "13100:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "13125:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "13118:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 519,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "13118:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13117:20:0"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "13161:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13160:6:0"
									},
									"scope": 526,
									"src": "13091:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3264,
							"src": "12713:457:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "IERC165",
										"nameLocations": [
											"13195:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 526,
										"src": "13195:7:0"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "13195:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 638,
							"linearizedBaseContracts": [
								638,
								526
							],
							"name": "IERC721",
							"nameLocation": "13184:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "13210:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 537,
									"name": "Transfer",
									"nameLocation": "13312:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13337:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "13321:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13359:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "13343:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13379:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "13363:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13320:67:0"
									},
									"src": "13306:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "13396:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 546,
									"name": "Approval",
									"nameLocation": "13504:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13529:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "13513:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13552:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "13536:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13578:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "13562:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13512:74:0"
									},
									"src": "13498:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "13595:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 555,
									"name": "ApprovalForAll",
									"nameLocation": "13726:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13757:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13741:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13780:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13764:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13795:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13790:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13790:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13740:64:0"
									},
									"src": "13720:85:0"
								},
								{
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "13813:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13906:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13924:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13916:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13915:15:0"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "13962:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13954:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13953:17:0"
									},
									"scope": 638,
									"src": "13897:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "13979:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "14131:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14147:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "14139:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14138:17:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "14179:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:15:0"
									},
									"scope": 638,
									"src": "14122:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "14202:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14785:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14820:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14812:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14843:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14835:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14864:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14897:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14882:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14882:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14801:107:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14917:0:0"
									},
									"scope": 638,
									"src": "14776:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "14926:700:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "15641:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "15668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15699:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "15691:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15720:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "15712:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15657:77:0"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15743:0:0"
									},
									"scope": 638,
									"src": "15632:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "15752:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "16284:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16315:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "16307:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16338:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "16330:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16359:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "16351:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16296:77:0"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16382:0:0"
									},
									"scope": 638,
									"src": "16275:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "16391:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16870:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16886:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16878:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16898:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16890:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16877:29:0"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16915:0:0"
									},
									"scope": 638,
									"src": "16861:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "16924:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "17257:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17283:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "17275:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "17298:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "17293:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17293:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17274:34:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17317:0:0"
									},
									"scope": 638,
									"src": "17248:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "17326:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "17486:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17506:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "17498:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17497:17:0"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17546:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "17538:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17537:18:0"
									},
									"scope": 638,
									"src": "17477:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "17564:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17721:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "17738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17761:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "17753:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17737:33:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "17794:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17794:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17793:6:0"
									},
									"scope": 638,
									"src": "17712:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3264,
							"src": "13174:4629:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 639,
								"nodeType": "StructuredDocumentation",
								"src": "17876:75:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1502,
							"linearizedBaseContracts": [
								1502
							],
							"name": "Math",
							"nameLocation": "17961:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 643,
									"members": [
										{
											"id": 640,
											"name": "Down",
											"nameLocation": "17998:4:0",
											"nodeType": "EnumValue",
											"src": "17998:4:0"
										},
										{
											"id": 641,
											"name": "Up",
											"nameLocation": "18041:2:0",
											"nodeType": "EnumValue",
											"src": "18041:2:0"
										},
										{
											"id": 642,
											"name": "Zero",
											"nameLocation": "18073:4:0",
											"nodeType": "EnumValue",
											"src": "18073:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "17978:8:0",
									"nodeType": "EnumDefinition",
									"src": "17973:126:0"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "18241:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 653,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "18259:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 654,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "18263:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18259:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 657,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "18271:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18259:13:0",
													"trueExpression": {
														"id": 656,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "18267:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 652,
												"id": 659,
												"nodeType": "Return",
												"src": "18252:20:0"
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "18107:61:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "18183:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18195:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "18187:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18206:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "18198:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18186:22:0"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "18232:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18231:9:0"
									},
									"scope": 1502,
									"src": "18174:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "18423:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 671,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "18441:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 672,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "18445:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18441:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 675,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "18453:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18441:13:0",
													"trueExpression": {
														"id": 674,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "18449:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 670,
												"id": 677,
												"nodeType": "Return",
												"src": "18434:20:0"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "18288:62:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "18365:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18377:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "18369:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18388:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "18380:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18368:22:0"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "18414:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18413:9:0"
									},
									"scope": 1502,
									"src": "18356:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "18652:85:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 689,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "18709:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 690,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "18713:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18709:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 692,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18708:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 693,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "18719:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 694,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "18723:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18719:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 696,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "18718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18728:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "18718:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18708:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 688,
												"id": 700,
												"nodeType": "Return",
												"src": "18701:28:0"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "18470:105:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "18590:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18606:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "18598:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18617:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "18609:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18597:22:0"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "18643:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18642:9:0"
									},
									"scope": 1502,
									"src": "18581:156:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "19015:126:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "19105:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19110:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19105:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 716,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 705,
																			"src": "19119:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19123:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19119:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 719,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "19128:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19118:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19132:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "19118:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19105:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19114:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 711,
												"id": 725,
												"nodeType": "Return",
												"src": "19098:35:0"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "18745:193:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "18953:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18969:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "18961:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18980:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "18972:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18960:22:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "19006:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19005:9:0"
									},
									"scope": 1502,
									"src": "18944:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "19562:3898:0",
										"statements": [
											{
												"id": 848,
												"nodeType": "UncheckedBlock",
												"src": "19573:3880:0",
												"statements": [
													{
														"assignments": [
															740
														],
														"declarations": [
															{
																"constant": false,
																"id": 740,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "19906:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "19898:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 739,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19898:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 741,
														"nodeType": "VariableDeclarationStatement",
														"src": "19898:13:0"
													},
													{
														"assignments": [
															743
														],
														"declarations": [
															{
																"constant": false,
																"id": 743,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "19979:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "19971:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 742,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19971:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 744,
														"nodeType": "VariableDeclarationStatement",
														"src": "19971:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "20052:161:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20071:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20088:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20091:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20098:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "20094:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20094:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "20081:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20081:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "20075:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20119:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20132:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20135:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "20128:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20128:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "20119:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20155:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "20172:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "20176:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "20168:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20168:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "20187:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "20191:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "20184:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20184:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20164:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20164:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "20155:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "20119:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "20176:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "20191:5:0",
																"valueSize": 1
															},
															{
																"declaration": 743,
																"isOffset": false,
																"isSlot": false,
																"src": "20155:5:0",
																"valueSize": 1
															},
															{
																"declaration": 730,
																"isOffset": false,
																"isSlot": false,
																"src": "20088:1:0",
																"valueSize": 1
															},
															{
																"declaration": 730,
																"isOffset": false,
																"isSlot": false,
																"src": "20132:1:0",
																"valueSize": 1
															},
															{
																"declaration": 732,
																"isOffset": false,
																"isSlot": false,
																"src": "20091:1:0",
																"valueSize": 1
															},
															{
																"declaration": 732,
																"isOffset": false,
																"isSlot": false,
																"src": "20135:1:0",
																"valueSize": 1
															}
														],
														"id": 745,
														"nodeType": "InlineAssembly",
														"src": "20043:170:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 746,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "20297:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20306:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20297:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 754,
														"nodeType": "IfStatement",
														"src": "20293:77:0",
														"trueBody": {
															"id": 753,
															"nodeType": "Block",
															"src": "20309:61:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 749,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "20335:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 750,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "20343:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20335:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 738,
																	"id": 752,
																	"nodeType": "Return",
																	"src": "20328:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 756,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "20483:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 757,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 743,
																		"src": "20497:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "20483:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20504:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 755,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "20475:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20475:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 761,
														"nodeType": "ExpressionStatement",
														"src": "20475:53:0"
													},
													{
														"assignments": [
															763
														],
														"declarations": [
															{
																"constant": false,
																"id": 763,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "20799:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "20791:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 762,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20791:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 764,
														"nodeType": "VariableDeclarationStatement",
														"src": "20791:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "20832:298:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "20903:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20923:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20926:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "20929:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "20916:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20916:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "20903:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21026:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "21039:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "21049:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "21060:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "21046:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21046:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21035:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21035:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "21026:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21085:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "21098:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "21105:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21094:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21094:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "21085:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 734,
																"isOffset": false,
																"isSlot": false,
																"src": "20929:11:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21060:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21085:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21098:5:0",
																"valueSize": 1
															},
															{
																"declaration": 743,
																"isOffset": false,
																"isSlot": false,
																"src": "21026:5:0",
																"valueSize": 1
															},
															{
																"declaration": 743,
																"isOffset": false,
																"isSlot": false,
																"src": "21039:5:0",
																"valueSize": 1
															},
															{
																"declaration": 763,
																"isOffset": false,
																"isSlot": false,
																"src": "20903:9:0",
																"valueSize": 1
															},
															{
																"declaration": 763,
																"isOffset": false,
																"isSlot": false,
																"src": "21049:9:0",
																"valueSize": 1
															},
															{
																"declaration": 763,
																"isOffset": false,
																"isSlot": false,
																"src": "21105:9:0",
																"valueSize": 1
															},
															{
																"declaration": 730,
																"isOffset": false,
																"isSlot": false,
																"src": "20923:1:0",
																"valueSize": 1
															},
															{
																"declaration": 732,
																"isOffset": false,
																"isSlot": false,
																"src": "20926:1:0",
																"valueSize": 1
															}
														],
														"id": 765,
														"nodeType": "InlineAssembly",
														"src": "20823:307:0"
													},
													{
														"assignments": [
															767
														],
														"declarations": [
															{
																"constant": false,
																"id": 767,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "21451:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "21443:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 766,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21443:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 775,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 768,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "21458:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "21473:12:0",
																			"subExpression": {
																				"id": 769,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 734,
																				"src": "21474:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21488:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "21473:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 773,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21472:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21458:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21443:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "21514:371:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "21581:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "21600:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "21613:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "21596:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21596:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "21581:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21688:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "21701:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "21708:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "21697:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21697:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "21688:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21831:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "21851:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "21854:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "21847:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21847:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "21861:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "21843:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21843:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21868:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21839:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21839:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "21831:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 734,
																"isOffset": false,
																"isSlot": false,
																"src": "21581:11:0",
																"valueSize": 1
															},
															{
																"declaration": 734,
																"isOffset": false,
																"isSlot": false,
																"src": "21600:11:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21688:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21701:5:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21613:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21708:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21831:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21854:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21861:4:0",
																"valueSize": 1
															}
														],
														"id": 776,
														"nodeType": "InlineAssembly",
														"src": "21505:380:0"
													},
													{
														"expression": {
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 777,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "21954:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 778,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "21963:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 779,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "21971:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21963:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21954:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 782,
														"nodeType": "ExpressionStatement",
														"src": "21954:21:0"
													},
													{
														"assignments": [
															784
														],
														"declarations": [
															{
																"constant": false,
																"id": 784,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "22306:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "22298:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 783,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22298:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 791,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22317:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 786,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "22321:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22317:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 788,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22316:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22336:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "22316:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22298:39:0"
													},
													{
														"expression": {
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 792,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22569:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 794,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22573:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 795,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22587:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22573:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22569:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22558:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 799,
														"nodeType": "ExpressionStatement",
														"src": "22558:36:0"
													},
													{
														"expression": {
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 800,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22628:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22639:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 802,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22643:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 803,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22657:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22643:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22639:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22628:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 807,
														"nodeType": "ExpressionStatement",
														"src": "22628:36:0"
													},
													{
														"expression": {
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 808,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22699:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22710:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 810,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22714:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 811,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22728:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22714:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22710:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22699:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 815,
														"nodeType": "ExpressionStatement",
														"src": "22699:36:0"
													},
													{
														"expression": {
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 816,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22770:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22781:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 818,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22785:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 819,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22799:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22785:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22781:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22770:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 823,
														"nodeType": "ExpressionStatement",
														"src": "22770:36:0"
													},
													{
														"expression": {
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 824,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22841:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22852:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 826,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22856:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 827,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22870:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22856:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22852:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22841:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 831,
														"nodeType": "ExpressionStatement",
														"src": "22841:36:0"
													},
													{
														"expression": {
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 832,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22913:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22924:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 834,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22928:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 835,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22928:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22924:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22913:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 839,
														"nodeType": "ExpressionStatement",
														"src": "22913:36:0"
													},
													{
														"expression": {
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 840,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "23389:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 841,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "23398:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 842,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "23406:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23398:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23389:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 845,
														"nodeType": "ExpressionStatement",
														"src": "23389:24:0"
													},
													{
														"expression": {
															"id": 846,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "23435:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 738,
														"id": 847,
														"nodeType": "Return",
														"src": "23428:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "19149:309:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "19473:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "19488:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19480:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "19499:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19491:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "19510:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19502:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19479:43:0"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "19554:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19546:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19545:16:0"
									},
									"scope": 1502,
									"src": "19464:3996:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "23707:195:0",
										"statements": [
											{
												"assignments": [
													866
												],
												"declarations": [
													{
														"constant": false,
														"id": 866,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23726:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 893,
														"src": "23718:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 865,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 872,
												"initialValue": {
													"arguments": [
														{
															"id": 868,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "23742:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 869,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "23745:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 870,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "23748:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 867,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															850,
															894
														],
														"referencedDeclaration": 850,
														"src": "23735:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23735:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23718:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$643",
															"typeString": "enum Math.Rounding"
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "23775:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$643",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 874,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "23787:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "23796:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 641,
															"src": "23787:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$643",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "23775:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 878,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "23809:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 879,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "23812:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 880,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "23815:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 877,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "23802:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23802:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23830:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "23802:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23775:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "23771:100:0",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "23833:38:0",
													"statements": [
														{
															"expression": {
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 885,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "23848:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23858:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "23848:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 888,
															"nodeType": "ExpressionStatement",
															"src": "23848:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 891,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 866,
													"src": "23888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 864,
												"id": 892,
												"nodeType": "Return",
												"src": "23881:13:0"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "23468:123:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "23606:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "23621:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23613:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "23632:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23624:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "23643:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23635:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23665:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23656:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 859,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 858,
														"name": "Rounding",
														"nameLocations": [
															"23656:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "23656:8:0"
													},
													"referencedDeclaration": 643,
													"src": "23656:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23612:62:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23698:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23697:9:0"
									},
									"scope": 1502,
									"src": "23597:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "24185:1616:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 902,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "24200:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24205:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24200:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 908,
												"nodeType": "IfStatement",
												"src": "24196:47:0",
												"trueBody": {
													"id": 907,
													"nodeType": "Block",
													"src": "24208:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24230:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 901,
															"id": 906,
															"nodeType": "Return",
															"src": "24223:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24942:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "24934:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24934:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24951:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 913,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 897,
																			"src": "24962:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 912,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1174,
																			1210
																		],
																		"referencedDeclaration": 1174,
																		"src": "24957:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24957:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24968:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24957:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 917,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24956:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24951:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24934:36:0"
											},
											{
												"id": 1004,
												"nodeType": "UncheckedBlock",
												"src": "25377:417:0",
												"statements": [
													{
														"expression": {
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 920,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25402:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 921,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25412:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 924,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 922,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25421:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 923,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25425:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25421:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25412:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 926,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25411:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25436:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25411:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25402:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 930,
														"nodeType": "ExpressionStatement",
														"src": "25402:35:0"
													},
													{
														"expression": {
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 931,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25452:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 932,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25462:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 933,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25471:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 934,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25475:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25471:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25462:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 937,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25461:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25486:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25461:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25452:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 941,
														"nodeType": "ExpressionStatement",
														"src": "25452:35:0"
													},
													{
														"expression": {
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 942,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25502:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 943,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25512:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 946,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 944,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25521:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 945,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25525:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25521:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25512:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 948,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25511:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25536:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25511:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25502:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 952,
														"nodeType": "ExpressionStatement",
														"src": "25502:35:0"
													},
													{
														"expression": {
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 953,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25552:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 954,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25562:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 955,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25571:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 956,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25575:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25571:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25562:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 959,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25561:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25586:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25561:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25552:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 963,
														"nodeType": "ExpressionStatement",
														"src": "25552:35:0"
													},
													{
														"expression": {
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 964,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25602:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 965,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25612:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 966,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25621:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 967,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25625:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25621:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25612:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 970,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25611:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25636:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25611:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25602:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 974,
														"nodeType": "ExpressionStatement",
														"src": "25602:35:0"
													},
													{
														"expression": {
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 975,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25652:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 976,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25662:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 977,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25671:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 978,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25675:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25671:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25662:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 981,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25661:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25686:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25661:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25652:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 985,
														"nodeType": "ExpressionStatement",
														"src": "25652:35:0"
													},
													{
														"expression": {
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 986,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25702:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 987,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25712:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 988,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25721:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 989,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25725:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25721:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25712:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 992,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25711:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25736:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25711:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25702:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 996,
														"nodeType": "ExpressionStatement",
														"src": "25702:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 998,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "25763:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 999,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "25771:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1000,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "25775:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25771:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 997,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "25759:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25759:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 901,
														"id": 1003,
														"nodeType": "Return",
														"src": "25752:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "23910:212:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "24137:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24150:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "24142:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24141:11:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "24176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24175:9:0"
									},
									"scope": 1502,
									"src": "24128:1673:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "25982:166:0",
										"statements": [
											{
												"id": 1040,
												"nodeType": "UncheckedBlock",
												"src": "25993:148:0",
												"statements": [
													{
														"assignments": [
															1018
														],
														"declarations": [
															{
																"constant": false,
																"id": 1018,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26026:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1040,
																"src": "26018:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1017,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1022,
														"initialValue": {
															"arguments": [
																{
																	"id": 1020,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "26040:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1019,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1006,
																	1042
																],
																"referencedDeclaration": 1006,
																"src": "26035:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26035:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26018:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1023,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "26064:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1024,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1012,
																					"src": "26074:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1025,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "26086:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1026,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "26095:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "26086:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "26074:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1030,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1028,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1018,
																						"src": "26101:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1029,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1018,
																						"src": "26110:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "26101:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1031,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1009,
																					"src": "26119:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26101:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "26074:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26127:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "26074:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26123:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "26073:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "26064:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1016,
														"id": 1039,
														"nodeType": "Return",
														"src": "26057:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "25809:91:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "25915:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25928:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25920:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25940:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25931:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1011,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1010,
														"name": "Rounding",
														"nameLocations": [
															"25931:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "25931:8:0"
													},
													"referencedDeclaration": 643,
													"src": "25931:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25919:30:0"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25973:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25972:9:0"
									},
									"scope": 1502,
									"src": "25906:242:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "26339:958:0",
										"statements": [
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26358:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "26350:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26350:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": {
													"hexValue": "30",
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26367:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26350:18:0"
											},
											{
												"id": 1170,
												"nodeType": "UncheckedBlock",
												"src": "26379:887:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1054,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26408:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26417:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "26408:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26423:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26408:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1068,
														"nodeType": "IfStatement",
														"src": "26404:102:0",
														"trueBody": {
															"id": 1067,
															"nodeType": "Block",
															"src": "26426:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1059,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26445:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26455:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "26445:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1062,
																	"nodeType": "ExpressionStatement",
																	"src": "26445:13:0"
																},
																{
																	"expression": {
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1063,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26477:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26487:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "26477:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1066,
																	"nodeType": "ExpressionStatement",
																	"src": "26477:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1069,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26524:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26533:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "26524:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26538:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26524:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1083,
														"nodeType": "IfStatement",
														"src": "26520:99:0",
														"trueBody": {
															"id": 1082,
															"nodeType": "Block",
															"src": "26541:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1074,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26560:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26570:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "26560:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1077,
																	"nodeType": "ExpressionStatement",
																	"src": "26560:12:0"
																},
																{
																	"expression": {
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1078,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26591:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26601:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "26591:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1081,
																	"nodeType": "ExpressionStatement",
																	"src": "26591:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1084,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26637:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26646:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "26637:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26651:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26637:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1098,
														"nodeType": "IfStatement",
														"src": "26633:99:0",
														"trueBody": {
															"id": 1097,
															"nodeType": "Block",
															"src": "26654:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1089,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26673:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26683:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "26673:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1092,
																	"nodeType": "ExpressionStatement",
																	"src": "26673:12:0"
																},
																{
																	"expression": {
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1093,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26704:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26714:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "26704:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1096,
																	"nodeType": "ExpressionStatement",
																	"src": "26704:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1099,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26750:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26759:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "26750:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26764:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26750:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1113,
														"nodeType": "IfStatement",
														"src": "26746:99:0",
														"trueBody": {
															"id": 1112,
															"nodeType": "Block",
															"src": "26767:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1104,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26786:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26796:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "26786:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1107,
																	"nodeType": "ExpressionStatement",
																	"src": "26786:12:0"
																},
																{
																	"expression": {
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1108,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26817:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26827:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "26817:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1111,
																	"nodeType": "ExpressionStatement",
																	"src": "26817:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1114,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26863:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26872:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "26863:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26876:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26863:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1128,
														"nodeType": "IfStatement",
														"src": "26859:96:0",
														"trueBody": {
															"id": 1127,
															"nodeType": "Block",
															"src": "26879:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1119,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26898:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26908:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "26898:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1122,
																	"nodeType": "ExpressionStatement",
																	"src": "26898:11:0"
																},
																{
																	"expression": {
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1123,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26928:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26938:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "26928:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1126,
																	"nodeType": "ExpressionStatement",
																	"src": "26928:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1129,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26973:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26982:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "26973:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26986:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26973:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1143,
														"nodeType": "IfStatement",
														"src": "26969:96:0",
														"trueBody": {
															"id": 1142,
															"nodeType": "Block",
															"src": "26989:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1134,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "27008:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27018:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "27008:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1137,
																	"nodeType": "ExpressionStatement",
																	"src": "27008:11:0"
																},
																{
																	"expression": {
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1138,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "27038:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27048:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "27038:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1141,
																	"nodeType": "ExpressionStatement",
																	"src": "27038:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1144,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "27083:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27092:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27083:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27096:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27083:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1158,
														"nodeType": "IfStatement",
														"src": "27079:96:0",
														"trueBody": {
															"id": 1157,
															"nodeType": "Block",
															"src": "27099:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1149,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "27118:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27128:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "27118:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1152,
																	"nodeType": "ExpressionStatement",
																	"src": "27118:11:0"
																},
																{
																	"expression": {
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1153,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "27148:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27158:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "27148:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1156,
																	"nodeType": "ExpressionStatement",
																	"src": "27148:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "27193:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27202:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "27193:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27206:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27193:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1169,
														"nodeType": "IfStatement",
														"src": "27189:66:0",
														"trueBody": {
															"id": 1168,
															"nodeType": "Block",
															"src": "27209:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1164,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "27228:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27238:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "27228:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1167,
																	"nodeType": "ExpressionStatement",
																	"src": "27228:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1171,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1051,
													"src": "27283:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1049,
												"id": 1172,
												"nodeType": "Return",
												"src": "27276:13:0"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "26156:116:0",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "26287:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "26292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26291:15:0"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "26330:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26329:9:0"
									},
									"scope": 1502,
									"src": "26278:1019:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "27536:170:0",
										"statements": [
											{
												"id": 1208,
												"nodeType": "UncheckedBlock",
												"src": "27547:152:0",
												"statements": [
													{
														"assignments": [
															1186
														],
														"declarations": [
															{
																"constant": false,
																"id": 1186,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27580:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1208,
																"src": "27572:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1185,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27572:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1190,
														"initialValue": {
															"arguments": [
																{
																	"id": 1188,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "27594:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1187,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1174,
																	1210
																],
																"referencedDeclaration": 1174,
																"src": "27589:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27589:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27572:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1191,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "27622:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1192,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "27632:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1193,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "27644:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "27653:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "27644:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "27632:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1196,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "27659:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1197,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1186,
																						"src": "27664:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27659:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1199,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1177,
																					"src": "27673:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "27659:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "27632:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27685:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "27632:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27681:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1205,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "27631:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "27622:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1184,
														"id": 1207,
														"nodeType": "Return",
														"src": "27615:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "27305:145:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "27465:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27478:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "27470:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27494:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "27485:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1179,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1178,
														"name": "Rounding",
														"nameLocations": [
															"27485:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "27485:8:0"
													},
													"referencedDeclaration": 643,
													"src": "27485:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27469:34:0"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "27527:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27526:9:0"
									},
									"scope": 1502,
									"src": "27456:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "27899:886:0",
										"statements": [
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "27918:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "27910:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1221,
												"initialValue": {
													"hexValue": "30",
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27927:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27910:18:0"
											},
											{
												"id": 1335,
												"nodeType": "UncheckedBlock",
												"src": "27939:815:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1222,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "27968:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27977:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27983:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27977:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "27968:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1238,
														"nodeType": "IfStatement",
														"src": "27964:106:0",
														"trueBody": {
															"id": 1237,
															"nodeType": "Block",
															"src": "27987:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1227,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28006:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28015:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28021:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "28015:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "28006:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1232,
																	"nodeType": "ExpressionStatement",
																	"src": "28006:17:0"
																},
																{
																	"expression": {
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1233,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28042:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28052:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "28042:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1236,
																	"nodeType": "ExpressionStatement",
																	"src": "28042:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1239,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28088:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28097:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28103:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "28097:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "28088:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1255,
														"nodeType": "IfStatement",
														"src": "28084:106:0",
														"trueBody": {
															"id": 1254,
															"nodeType": "Block",
															"src": "28107:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1244,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28126:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28135:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28141:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "28135:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "28126:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1249,
																	"nodeType": "ExpressionStatement",
																	"src": "28126:17:0"
																},
																{
																	"expression": {
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1250,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28162:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28172:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "28162:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1253,
																	"nodeType": "ExpressionStatement",
																	"src": "28162:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1256,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28208:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28217:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28223:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "28217:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "28208:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1272,
														"nodeType": "IfStatement",
														"src": "28204:106:0",
														"trueBody": {
															"id": 1271,
															"nodeType": "Block",
															"src": "28227:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1261,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28246:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28255:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28261:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "28255:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "28246:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1266,
																	"nodeType": "ExpressionStatement",
																	"src": "28246:17:0"
																},
																{
																	"expression": {
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1267,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28282:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28292:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "28282:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1270,
																	"nodeType": "ExpressionStatement",
																	"src": "28282:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1273,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28328:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28337:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28343:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "28337:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "28328:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1289,
														"nodeType": "IfStatement",
														"src": "28324:103:0",
														"trueBody": {
															"id": 1288,
															"nodeType": "Block",
															"src": "28346:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1278,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28365:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28374:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28380:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "28374:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "28365:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1283,
																	"nodeType": "ExpressionStatement",
																	"src": "28365:16:0"
																},
																{
																	"expression": {
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1284,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28400:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28410:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "28400:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1287,
																	"nodeType": "ExpressionStatement",
																	"src": "28400:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1290,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28445:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28454:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28460:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "28454:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "28445:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1306,
														"nodeType": "IfStatement",
														"src": "28441:103:0",
														"trueBody": {
															"id": 1305,
															"nodeType": "Block",
															"src": "28463:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1295,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28482:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28491:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28497:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "28491:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "28482:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1300,
																	"nodeType": "ExpressionStatement",
																	"src": "28482:16:0"
																},
																{
																	"expression": {
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1301,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28517:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28527:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "28517:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1304,
																	"nodeType": "ExpressionStatement",
																	"src": "28517:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1307,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28562:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28571:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28577:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "28571:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "28562:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1323,
														"nodeType": "IfStatement",
														"src": "28558:103:0",
														"trueBody": {
															"id": 1322,
															"nodeType": "Block",
															"src": "28580:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1312,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28599:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28608:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28614:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "28608:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "28599:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1317,
																	"nodeType": "ExpressionStatement",
																	"src": "28599:16:0"
																},
																{
																	"expression": {
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1318,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28634:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28644:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "28634:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1321,
																	"nodeType": "ExpressionStatement",
																	"src": "28634:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28679:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28688:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28694:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "28688:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "28679:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1334,
														"nodeType": "IfStatement",
														"src": "28675:68:0",
														"trueBody": {
															"id": 1333,
															"nodeType": "Block",
															"src": "28697:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1329,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28716:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28726:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "28716:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1332,
																	"nodeType": "ExpressionStatement",
																	"src": "28716:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1336,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1219,
													"src": "28771:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1217,
												"id": 1337,
												"nodeType": "Return",
												"src": "28764:13:0"
											}
										]
									},
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "27714:117:0",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "27846:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27860:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "27852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27851:15:0"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "27890:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27889:9:0"
									},
									"scope": 1502,
									"src": "27837:948:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "29026:172:0",
										"statements": [
											{
												"id": 1373,
												"nodeType": "UncheckedBlock",
												"src": "29037:154:0",
												"statements": [
													{
														"assignments": [
															1351
														],
														"declarations": [
															{
																"constant": false,
																"id": 1351,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "29070:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1373,
																"src": "29062:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1350,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29062:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1355,
														"initialValue": {
															"arguments": [
																{
																	"id": 1353,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "29085:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1352,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1339,
																	1375
																],
																"referencedDeclaration": 1339,
																"src": "29079:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29079:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29062:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1356,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "29113:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1357,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1345,
																					"src": "29123:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1358,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "29135:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "29144:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "29135:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "29123:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1363,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1361,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "29150:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1362,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1351,
																						"src": "29156:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "29150:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1364,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1342,
																					"src": "29165:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29150:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "29123:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29177:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "29123:55:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29173:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1370,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "29122:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "29113:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1349,
														"id": 1372,
														"nodeType": "Return",
														"src": "29106:73:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "28793:146:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "28954:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28968:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "28960:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28984:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "28975:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1343,
														"name": "Rounding",
														"nameLocations": [
															"28975:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "28975:8:0"
													},
													"referencedDeclaration": 643,
													"src": "28975:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28959:34:0"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "29017:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29016:9:0"
									},
									"scope": 1502,
									"src": "28945:253:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "29520:624:0",
										"statements": [
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "29539:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "29531:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29531:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"hexValue": "30",
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29548:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29531:18:0"
											},
											{
												"id": 1458,
												"nodeType": "UncheckedBlock",
												"src": "29560:553:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1387,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29589:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29598:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "29589:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29604:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29589:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1401,
														"nodeType": "IfStatement",
														"src": "29585:101:0",
														"trueBody": {
															"id": 1400,
															"nodeType": "Block",
															"src": "29607:79:0",
															"statements": [
																{
																	"expression": {
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1392,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29626:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29636:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "29626:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1395,
																	"nodeType": "ExpressionStatement",
																	"src": "29626:13:0"
																},
																{
																	"expression": {
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1396,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29658:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29668:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29658:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1399,
																	"nodeType": "ExpressionStatement",
																	"src": "29658:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1402,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29704:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29713:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "29704:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29718:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29704:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1416,
														"nodeType": "IfStatement",
														"src": "29700:98:0",
														"trueBody": {
															"id": 1415,
															"nodeType": "Block",
															"src": "29721:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29740:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29750:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "29740:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1410,
																	"nodeType": "ExpressionStatement",
																	"src": "29740:12:0"
																},
																{
																	"expression": {
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1411,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29771:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29781:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "29771:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1414,
																	"nodeType": "ExpressionStatement",
																	"src": "29771:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1417,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29816:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29825:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "29816:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29830:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29816:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1431,
														"nodeType": "IfStatement",
														"src": "29812:98:0",
														"trueBody": {
															"id": 1430,
															"nodeType": "Block",
															"src": "29833:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1422,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29852:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29862:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "29852:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1425,
																	"nodeType": "ExpressionStatement",
																	"src": "29852:12:0"
																},
																{
																	"expression": {
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1426,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29883:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29893:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "29883:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1429,
																	"nodeType": "ExpressionStatement",
																	"src": "29883:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1432,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29928:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29937:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "29928:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29942:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29928:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1446,
														"nodeType": "IfStatement",
														"src": "29924:98:0",
														"trueBody": {
															"id": 1445,
															"nodeType": "Block",
															"src": "29945:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29964:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29974:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29964:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1440,
																	"nodeType": "ExpressionStatement",
																	"src": "29964:12:0"
																},
																{
																	"expression": {
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1441,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29995:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30005:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "29995:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1444,
																	"nodeType": "ExpressionStatement",
																	"src": "29995:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1447,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "30040:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30049:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "30040:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30053:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30040:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1457,
														"nodeType": "IfStatement",
														"src": "30036:66:0",
														"trueBody": {
															"id": 1456,
															"nodeType": "Block",
															"src": "30056:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1452,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "30075:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30085:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "30075:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1455,
																	"nodeType": "ExpressionStatement",
																	"src": "30075:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1459,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1384,
													"src": "30130:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1382,
												"id": 1460,
												"nodeType": "Return",
												"src": "30123:13:0"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "29206:245:0",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "29466:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29481:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29473:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29472:15:0"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29511:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29510:9:0"
									},
									"scope": 1502,
									"src": "29457:687:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "30387:179:0",
										"statements": [
											{
												"id": 1499,
												"nodeType": "UncheckedBlock",
												"src": "30398:161:0",
												"statements": [
													{
														"assignments": [
															1474
														],
														"declarations": [
															{
																"constant": false,
																"id": 1474,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "30431:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1499,
																"src": "30423:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1473,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30423:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1478,
														"initialValue": {
															"arguments": [
																{
																	"id": 1476,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "30447:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1475,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1462,
																	1501
																],
																"referencedDeclaration": 1462,
																"src": "30440:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30440:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "30423:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1479,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "30475:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1480,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1468,
																					"src": "30485:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1481,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "30497:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1482,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "30506:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "30497:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "30485:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1489,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1484,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "30512:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1487,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1485,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1474,
																									"src": "30518:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1486,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "30528:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "30518:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1488,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "30517:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "30512:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1490,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1465,
																					"src": "30533:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "30512:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "30485:53:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30545:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "30485:61:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30541:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1496,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "30484:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "30475:72:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1472,
														"id": 1498,
														"nodeType": "Return",
														"src": "30468:79:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "30152:147:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "30314:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "30321:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "30345:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "30336:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1467,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1466,
														"name": "Rounding",
														"nameLocations": [
															"30336:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "30336:8:0"
													},
													"referencedDeclaration": 643,
													"src": "30336:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30320:34:0"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "30378:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30377:9:0"
									},
									"scope": 1502,
									"src": "30305:261:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3264,
							"src": "17953:12616:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1503,
								"nodeType": "StructuredDocumentation",
								"src": "30650:82:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1605,
							"linearizedBaseContracts": [
								1605
							],
							"name": "SignedMath",
							"nameLocation": "30742:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "30898:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1513,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "30916:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1514,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "30920:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "30916:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1517,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "30928:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "30916:13:0",
													"trueExpression": {
														"id": 1516,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "30924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1512,
												"id": 1519,
												"nodeType": "Return",
												"src": "30909:20:0"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "30760:68:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "30843:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "30854:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "30847:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1505,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30847:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "30864:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "30857:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1507,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30857:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30846:20:0"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "30890:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1510,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30890:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30889:8:0"
									},
									"scope": 1605,
									"src": "30834:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "31084:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1531,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "31102:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1532,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "31106:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "31102:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1535,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "31114:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "31102:13:0",
													"trueExpression": {
														"id": 1534,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "31110:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1530,
												"id": 1537,
												"nodeType": "Return",
												"src": "31095:20:0"
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "30945:69:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "31029:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "31040:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "31033:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1523,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31033:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "31050:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "31043:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1525,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31043:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31032:20:0"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "31076:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1528,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31075:8:0"
									},
									"scope": 1605,
									"src": "31020:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "31334:166:0",
										"statements": [
											{
												"assignments": [
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "31405:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1582,
														"src": "31398:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1549,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "31398:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1563,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1551,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1542,
																	"src": "31410:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1552,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "31414:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "31410:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1554,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1555,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "31421:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1556,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "31425:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "31421:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1558,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31420:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31431:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "31420:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1561,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31419:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31409:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31398:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1564,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "31451:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1569,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1550,
																						"src": "31471:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "31463:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1567,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "31463:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31463:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31477:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "31463:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "31456:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1565,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "31456:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31456:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1574,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "31485:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1575,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "31489:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "31485:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1577,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31484:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "31456:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1579,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31455:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31451:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1548,
												"id": 1581,
												"nodeType": "Return",
												"src": "31444:48:0"
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "31131:129:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "31275:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "31290:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "31283:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1541,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31283:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "31300:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "31293:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1543,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31293:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31282:20:0"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "31326:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1546,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31326:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31325:8:0"
									},
									"scope": 1605,
									"src": "31266:234:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "31649:163:0",
										"statements": [
											{
												"id": 1602,
												"nodeType": "UncheckedBlock",
												"src": "31660:145:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1593,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "31777:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31782:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "31777:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "31790:2:0",
																		"subExpression": {
																			"id": 1597,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "31791:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "31777:15:0",
																	"trueExpression": {
																		"id": 1596,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1586,
																		"src": "31786:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1591,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31769:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31769:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1590,
														"id": 1601,
														"nodeType": "Return",
														"src": "31762:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "31508:80:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "31603:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "31614:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "31607:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1585,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31607:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31606:10:0"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "31640:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31639:9:0"
									},
									"scope": 1605,
									"src": "31594:218:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3264,
							"src": "30734:1081:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1606,
								"nodeType": "StructuredDocumentation",
								"src": "32051:201:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1915,
							"linearizedBaseContracts": [
								1915
							],
							"name": "SafeMath",
							"nameLocation": "32262:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "32495:146:0",
										"statements": [
											{
												"id": 1636,
												"nodeType": "UncheckedBlock",
												"src": "32506:128:0",
												"statements": [
													{
														"assignments": [
															1619
														],
														"declarations": [
															{
																"constant": false,
																"id": 1619,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "32539:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1636,
																"src": "32531:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1618,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "32531:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1623,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1620,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "32543:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1621,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "32547:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32543:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "32531:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1624,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "32567:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1625,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "32571:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32567:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1631,
														"nodeType": "IfStatement",
														"src": "32563:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32582:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32589:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1629,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "32581:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1617,
															"id": 1630,
															"nodeType": "Return",
															"src": "32574:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32614:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1633,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "32620:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1634,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "32613:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1617,
														"id": 1635,
														"nodeType": "Return",
														"src": "32606:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "32278:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "32428:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "32443:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "32454:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32446:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32434:22:0"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32486:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32479:15:0"
									},
									"scope": 1915,
									"src": "32419:222:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "32869:118:0",
										"statements": [
											{
												"id": 1664,
												"nodeType": "UncheckedBlock",
												"src": "32880:100:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1650,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "32909:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1651,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "32913:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32909:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1657,
														"nodeType": "IfStatement",
														"src": "32905:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32924:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32931:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1655,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "32923:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1649,
															"id": 1656,
															"nodeType": "Return",
															"src": "32916:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32956:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1659,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "32962:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1660,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "32966:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "32962:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1662,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "32955:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1649,
														"id": 1663,
														"nodeType": "Return",
														"src": "32948:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "32649:138:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "32802:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "32817:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32809:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "32828:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32820:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32808:22:0"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32854:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32854:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32860:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32853:15:0"
									},
									"scope": 1915,
									"src": "32793:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "33218:427:0",
										"statements": [
											{
												"id": 1706,
												"nodeType": "UncheckedBlock",
												"src": "33229:409:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1678,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "33491:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33496:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1685,
														"nodeType": "IfStatement",
														"src": "33487:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33507:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33513:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1683,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33506:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1677,
															"id": 1684,
															"nodeType": "Return",
															"src": "33499:16:0"
														}
													},
													{
														"assignments": [
															1687
														],
														"declarations": [
															{
																"constant": false,
																"id": 1687,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "33538:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1706,
																"src": "33530:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1686,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "33530:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1691,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1688,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "33542:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1689,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "33546:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33542:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "33530:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1692,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "33566:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1693,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "33570:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33566:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1695,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "33575:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33566:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1701,
														"nodeType": "IfStatement",
														"src": "33562:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33586:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33593:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1699,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33585:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1677,
															"id": 1700,
															"nodeType": "Return",
															"src": "33578:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33618:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1703,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "33624:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1704,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "33617:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1677,
														"id": 1705,
														"nodeType": "Return",
														"src": "33610:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "32995:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "33151:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "33166:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33158:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "33177:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33169:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33157:22:0"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33203:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33203:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33209:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33202:15:0"
									},
									"scope": 1915,
									"src": "33142:503:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "33877:119:0",
										"statements": [
											{
												"id": 1734,
												"nodeType": "UncheckedBlock",
												"src": "33888:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "33917:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33922:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33917:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1727,
														"nodeType": "IfStatement",
														"src": "33913:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33933:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33940:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33932:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1719,
															"id": 1726,
															"nodeType": "Return",
															"src": "33925:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33965:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1729,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "33971:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1730,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "33975:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "33971:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1732,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "33964:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1719,
														"id": 1733,
														"nodeType": "Return",
														"src": "33957:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "33653:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "33810:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "33825:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33817:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "33836:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33828:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33816:22:0"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33862:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33861:15:0"
									},
									"scope": 1915,
									"src": "33801:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "34238:119:0",
										"statements": [
											{
												"id": 1762,
												"nodeType": "UncheckedBlock",
												"src": "34249:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1748,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "34278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34283:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1755,
														"nodeType": "IfStatement",
														"src": "34274:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34294:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34301:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1753,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "34293:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1747,
															"id": 1754,
															"nodeType": "Return",
															"src": "34286:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34326:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1757,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "34332:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1758,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1741,
																		"src": "34336:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "34332:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1760,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "34325:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1747,
														"id": 1761,
														"nodeType": "Return",
														"src": "34318:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "34004:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "34171:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "34186:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34178:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34197:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34189:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34177:22:0"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34223:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34223:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34229:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34222:15:0"
									},
									"scope": 1915,
									"src": "34162:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "34671:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1774,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "34689:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1775,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "34693:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34689:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1773,
												"id": 1777,
												"nodeType": "Return",
												"src": "34682:12:0"
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "34365:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "34613:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "34625:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "34617:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34636:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "34628:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34616:22:0"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "34662:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34661:9:0"
									},
									"scope": 1915,
									"src": "34604:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "35052:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1789,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "35070:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1790,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "35074:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35070:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1788,
												"id": 1792,
												"nodeType": "Return",
												"src": "35063:12:0"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "34710:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "34994:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35006:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "34998:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35017:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "35009:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34997:22:0"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "35043:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35042:9:0"
									},
									"scope": 1915,
									"src": "34985:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "35409:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1804,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1797,
														"src": "35427:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1805,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "35431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35427:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1803,
												"id": 1807,
												"nodeType": "Return",
												"src": "35420:12:0"
											}
										]
									},
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "35091:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "35351:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "35355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "35366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35354:22:0"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "35400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35399:9:0"
									},
									"scope": 1915,
									"src": "35342:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "35808:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1819,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "35826:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1820,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1814,
														"src": "35830:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35826:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1818,
												"id": 1822,
												"nodeType": "Return",
												"src": "35819:12:0"
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "35448:287:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "35750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "35754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "35765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35753:22:0"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "35799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35798:9:0"
									},
									"scope": 1915,
									"src": "35741:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "36373:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1834,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "36391:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1835,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "36395:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36391:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1833,
												"id": 1837,
												"nodeType": "Return",
												"src": "36384:12:0"
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "35847:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "36315:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "36327:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "36319:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "36338:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "36330:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36318:22:0"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "36364:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36363:9:0"
									},
									"scope": 1915,
									"src": "36306:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "36978:111:0",
										"statements": [
											{
												"id": 1862,
												"nodeType": "UncheckedBlock",
												"src": "36989:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1852,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1844,
																		"src": "37022:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1853,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1842,
																		"src": "37027:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "37022:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1855,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "37030:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1851,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "37014:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37014:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1857,
														"nodeType": "ExpressionStatement",
														"src": "37014:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1858,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "37065:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1859,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1844,
																"src": "37069:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37065:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1850,
														"id": 1861,
														"nodeType": "Return",
														"src": "37058:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "36412:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "36892:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "36904:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36896:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "36915:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36907:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "36932:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36918:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36918:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36895:50:0"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36968:9:0"
									},
									"scope": 1915,
									"src": "36883:206:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "37682:110:0",
										"statements": [
											{
												"id": 1887,
												"nodeType": "UncheckedBlock",
												"src": "37693:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1877,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1869,
																		"src": "37726:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37730:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "37726:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1880,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1871,
																	"src": "37733:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1876,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "37718:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37718:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1882,
														"nodeType": "ExpressionStatement",
														"src": "37718:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1883,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "37768:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1884,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1869,
																"src": "37772:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37768:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1875,
														"id": 1886,
														"nodeType": "Return",
														"src": "37761:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "37097:484:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "37596:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "37608:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37600:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "37619:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37611:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "37636:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37622:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1870,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37622:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37599:50:0"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37673:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37672:9:0"
									},
									"scope": 1915,
									"src": "37587:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "38550:110:0",
										"statements": [
											{
												"id": 1912,
												"nodeType": "UncheckedBlock",
												"src": "38561:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1902,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "38594:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38598:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "38594:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1905,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "38601:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1901,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "38586:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38586:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1907,
														"nodeType": "ExpressionStatement",
														"src": "38586:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1908,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1892,
																"src": "38636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1909,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "38640:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38636:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1900,
														"id": 1911,
														"nodeType": "Return",
														"src": "38629:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "37800:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "38464:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "38476:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38468:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "38487:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38479:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "38504:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38490:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38490:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38467:50:0"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38541:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38540:9:0"
									},
									"scope": 1915,
									"src": "38455:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3264,
							"src": "32254:6409:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1916,
								"nodeType": "StructuredDocumentation",
								"src": "38736:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2243,
							"linearizedBaseContracts": [
								2243
							],
							"name": "Address",
							"nameLocation": "38815:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "40122:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1924,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "40351:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "40359:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "40351:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "40364:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "40351:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40373:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "40351:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1923,
												"id": 1929,
												"nodeType": "Return",
												"src": "40344:30:0"
											}
										]
									},
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "38830:1220:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "40065:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "40084:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "40076:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40075:17:0"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "40116:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40116:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40115:6:0"
									},
									"scope": 2243,
									"src": "40056:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "41387:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1942,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "41414:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "41406:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1940,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "41406:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41406:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "41420:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "41406:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1945,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "41431:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "41406:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41439:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1939,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41398:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "41398:73:0"
											},
											{
												"assignments": [
													1951,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1951,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "41490:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1964,
														"src": "41485:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1950,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "41485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1958,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41533:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1952,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "41503:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41513:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "41503:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1954,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "41525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "41503:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41503:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41484:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1960,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "41555:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41564:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41547:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1963,
												"nodeType": "ExpressionStatement",
												"src": "41547:78:0"
											}
										]
									},
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "40390:920:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "41325:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "41351:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "41335:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41335:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "41370:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "41362:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41334:43:0"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41387:0:0"
									},
									"scope": 2243,
									"src": "41316:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "42484:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1976,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "42524:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1977,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "42532:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42538:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42541:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1975,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2067
														],
														"referencedDeclaration": 2067,
														"src": "42502:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42502:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1974,
												"id": 1981,
												"nodeType": "Return",
												"src": "42495:79:0"
											}
										]
									},
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "41641:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "42404:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "42425:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "42417:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42446:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "42433:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1969,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42433:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42416:35:0"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "42470:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42469:14:0"
									},
									"scope": 2243,
									"src": "42395:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "42963:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1996,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1986,
															"src": "43003:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1997,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1988,
															"src": "43011:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43017:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1999,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "43020:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1995,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2067
														],
														"referencedDeclaration": 2067,
														"src": "42981:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42981:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1994,
												"id": 2001,
												"nodeType": "Return",
												"src": "42974:59:0"
											}
										]
									},
									"documentation": {
										"id": 1984,
										"nodeType": "StructuredDocumentation",
										"src": "42590:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "42821:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "42852:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42844:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42882:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42869:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1987,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42869:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "42911:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42897:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42897:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42833:97:0"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42949:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1992,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42949:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42948:14:0"
									},
									"scope": 2243,
									"src": "42812:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "43529:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2016,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2006,
															"src": "43569:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2017,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "43577:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2018,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "43583:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43590:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2015,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2067
														],
														"referencedDeclaration": 2067,
														"src": "43547:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43547:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2014,
												"id": 2021,
												"nodeType": "Return",
												"src": "43540:94:0"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "43049:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "43425:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "43455:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43447:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43476:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43463:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2007,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43463:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "43490:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43482:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43446:50:0"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43515:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43515:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43514:14:0"
									},
									"scope": 2243,
									"src": "43416:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2066,
										"nodeType": "Block",
										"src": "44082:271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2040,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "44109:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "44101:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2038,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "44101:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "44101:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "44115:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "44101:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2043,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "44126:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44101:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44133:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2037,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "44093:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44093:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "44093:81:0"
											},
											{
												"assignments": [
													2049,
													2051
												],
												"declarations": [
													{
														"constant": false,
														"id": 2049,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "44191:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2066,
														"src": "44186:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2048,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "44186:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2051,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "44213:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2066,
														"src": "44200:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2050,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "44200:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2058,
												"initialValue": {
													"arguments": [
														{
															"id": 2056,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "44253:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2052,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2026,
																"src": "44227:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "44234:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "44227:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2054,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "44246:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "44227:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44227:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44185:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2060,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2026,
															"src": "44303:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2061,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "44311:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2062,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "44320:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2063,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "44332:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2059,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "44276:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44276:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2036,
												"id": 2065,
												"nodeType": "Return",
												"src": "44269:76:0"
											}
										]
									},
									"documentation": {
										"id": 2024,
										"nodeType": "StructuredDocumentation",
										"src": "43650:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "43907:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "43947:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "43939:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43977:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "43964:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43964:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "44000:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "43992:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "44030:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "44016:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2031,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "44016:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43928:121:0"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "44068:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44068:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44067:14:0"
									},
									"scope": 2243,
									"src": "43898:455:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "44638:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2078,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "44675:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2079,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2072,
															"src": "44683:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44689:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2077,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2084,
															2113
														],
														"referencedDeclaration": 2113,
														"src": "44656:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44656:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2076,
												"id": 2082,
												"nodeType": "Return",
												"src": "44649:80:0"
											}
										]
									},
									"documentation": {
										"id": 2068,
										"nodeType": "StructuredDocumentation",
										"src": "44361:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "44547:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "44574:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "44566:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "44595:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "44582:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44582:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44565:35:0"
									},
									"returnParameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "44624:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2074,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44624:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44623:14:0"
									},
									"scope": 2243,
									"src": "44538:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "45091:171:0",
										"statements": [
											{
												"assignments": [
													2097,
													2099
												],
												"declarations": [
													{
														"constant": false,
														"id": 2097,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "45108:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2112,
														"src": "45103:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2096,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "45103:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2099,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "45130:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2112,
														"src": "45117:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2098,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "45117:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2104,
												"initialValue": {
													"arguments": [
														{
															"id": 2102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "45162:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "45144:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "45151:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "45144:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45144:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45102:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2106,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "45212:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2107,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "45220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2108,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2099,
															"src": "45229:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2109,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "45241:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2105,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "45185:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45185:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2095,
												"id": 2111,
												"nodeType": "Return",
												"src": "45178:76:0"
											}
										]
									},
									"documentation": {
										"id": 2085,
										"nodeType": "StructuredDocumentation",
										"src": "44745:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "44938:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "44975:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "44967:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45005:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "44992:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44992:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "45034:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "45020:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2090,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "45020:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44956:97:0"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "45077:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2093,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45077:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45076:14:0"
									},
									"scope": 2243,
									"src": "44929:333:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "45546:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2124,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "45585:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "45593:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45599:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2123,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2130,
															2159
														],
														"referencedDeclaration": 2159,
														"src": "45564:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45564:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2122,
												"id": 2128,
												"nodeType": "Return",
												"src": "45557:84:0"
											}
										]
									},
									"documentation": {
										"id": 2114,
										"nodeType": "StructuredDocumentation",
										"src": "45270:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "45458:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "45487:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "45479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "45495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45478:35:0"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "45532:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45532:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45531:14:0"
									},
									"scope": 2243,
									"src": "45449:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "46002:173:0",
										"statements": [
											{
												"assignments": [
													2143,
													2145
												],
												"declarations": [
													{
														"constant": false,
														"id": 2143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "46019:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2158,
														"src": "46014:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "46014:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "46041:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2158,
														"src": "46028:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "46028:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2150,
												"initialValue": {
													"arguments": [
														{
															"id": 2148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "46075:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2146,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "46055:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46062:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "46055:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46055:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46013:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2152,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "46125:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2153,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "46133:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2154,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "46142:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2155,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2137,
															"src": "46154:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2151,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "46098:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46098:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2141,
												"id": 2157,
												"nodeType": "Return",
												"src": "46091:76:0"
											}
										]
									},
									"documentation": {
										"id": 2131,
										"nodeType": "StructuredDocumentation",
										"src": "45657:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "45852:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "45891:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45883:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45921:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45908:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45908:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "45950:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45936:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "45936:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45872:97:0"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45988:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45988:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45987:14:0"
									},
									"scope": 2243,
									"src": "45843:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "46670:445:0",
										"statements": [
											{
												"condition": {
													"id": 2173,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2164,
													"src": "46685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2195,
													"nodeType": "Block",
													"src": "47048:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2191,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2166,
																		"src": "47071:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2192,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "47083:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2190,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "47063:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47063:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2194,
															"nodeType": "ExpressionStatement",
															"src": "47063:33:0"
														}
													]
												},
												"id": 2196,
												"nodeType": "IfStatement",
												"src": "46681:427:0",
												"trueBody": {
													"id": 2189,
													"nodeType": "Block",
													"src": "46694:348:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2174,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2166,
																		"src": "46713:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "46724:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "46713:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46734:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "46713:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2186,
															"nodeType": "IfStatement",
															"src": "46709:290:0",
															"trueBody": {
																"id": 2185,
																"nodeType": "Block",
																"src": "46737:262:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2180,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2162,
																							"src": "46942:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2179,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1931,
																						"src": "46931:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 2181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "46931:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 2182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "46951:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 2178,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "46923:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "46923:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2184,
																		"nodeType": "ExpressionStatement",
																		"src": "46923:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2187,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "47020:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2172,
															"id": 2188,
															"nodeType": "Return",
															"src": "47013:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2160,
										"nodeType": "StructuredDocumentation",
										"src": "46183:282:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "46480:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "46525:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "46547:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46542:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "46542:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "46578:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46565:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "46565:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "46613:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46599:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2167,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "46599:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46506:126:0"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46656:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "46656:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46655:14:0"
									},
									"scope": 2243,
									"src": "46471:644:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2221,
										"nodeType": "Block",
										"src": "47508:141:0",
										"statements": [
											{
												"condition": {
													"id": 2210,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2201,
													"src": "47523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2219,
													"nodeType": "Block",
													"src": "47582:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2215,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2203,
																		"src": "47605:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2216,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "47617:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2214,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "47597:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47597:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2218,
															"nodeType": "ExpressionStatement",
															"src": "47597:33:0"
														}
													]
												},
												"id": 2220,
												"nodeType": "IfStatement",
												"src": "47519:123:0",
												"trueBody": {
													"id": 2213,
													"nodeType": "Block",
													"src": "47532:44:0",
													"statements": [
														{
															"expression": {
																"id": 2211,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2203,
																"src": "47554:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2209,
															"id": 2212,
															"nodeType": "Return",
															"src": "47547:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2199,
										"nodeType": "StructuredDocumentation",
										"src": "47123:215:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 2222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "47353:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "47385:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47380:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "47416:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47403:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47403:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "47451:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47437:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "47437:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47369:101:0"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47494:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47494:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47493:14:0"
									},
									"scope": 2243,
									"src": "47344:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2241,
										"nodeType": "Block",
										"src": "47740:469:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2229,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "47818:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47829:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "47818:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47838:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "47818:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2239,
													"nodeType": "Block",
													"src": "48155:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2236,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2226,
																		"src": "48177:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2235,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "48170:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48170:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2238,
															"nodeType": "ExpressionStatement",
															"src": "48170:20:0"
														}
													]
												},
												"id": 2240,
												"nodeType": "IfStatement",
												"src": "47814:388:0",
												"trueBody": {
													"id": 2234,
													"nodeType": "Block",
													"src": "47841:308:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "48002:136:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "48021:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "48050:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "48044:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "48044:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "48025:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "48090:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "48094:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "48086:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "48086:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "48107:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "48079:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "48079:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "48079:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 2224,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "48050:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2224,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "48094:10:0",
																	"valueSize": 1
																}
															],
															"id": 2233,
															"nodeType": "InlineAssembly",
															"src": "47993:145:0"
														}
													]
												}
											}
										]
									},
									"id": 2242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "47666:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "47687:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "47674:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47674:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "47713:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "47699:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "47699:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47673:53:0"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47740:0:0"
									},
									"scope": 2243,
									"src": "47657:552:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3264,
							"src": "38807:9405:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2244,
										"name": "Ownable",
										"nameLocations": [
											"48244:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "48244:7:0"
									},
									"id": 2245,
									"nodeType": "InheritanceSpecifier",
									"src": "48244:7:0"
								}
							],
							"canonicalName": "Marketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3263,
							"linearizedBaseContracts": [
								3263,
								131,
								21
							],
							"name": "Marketplace",
							"nameLocation": "48229:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2248,
									"libraryName": {
										"id": 2246,
										"name": "SafeMath",
										"nameLocations": [
											"48265:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1915,
										"src": "48265:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "48259:27:0",
									"typeName": {
										"id": 2247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "48278:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2252,
									"libraryName": {
										"id": 2249,
										"name": "SafeERC20",
										"nameLocations": [
											"48298:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 441,
										"src": "48298:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "48292:27:0",
									"typeName": {
										"id": 2251,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2250,
											"name": "IERC20",
											"nameLocations": [
												"48312:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 517,
											"src": "48312:6:0"
										},
										"referencedDeclaration": 517,
										"src": "48312:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$517",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "89f5adc174562e07c9c9b1cae7109bbecb21cf9d1b2847e550042b8653c54a0e",
									"id": 2262,
									"name": "Buy",
									"nameLocation": "48331:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "48343:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "48335:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "48358:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "48350:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2258,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48373:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "48365:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "48391:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "48383:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48334:63:0"
									},
									"src": "48325:73:0"
								},
								{
									"anonymous": false,
									"eventSelector": "d369fdcfeb128f60117661ebd8f220b7265c0a04fee0e9905eb8c6ab2767b9e5",
									"id": 2274,
									"name": "BuyWithERC20",
									"nameLocation": "48410:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "48431:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "48423:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48423:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "48446:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "48438:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48461:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "48453:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"indexed": false,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "48478:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "48470:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "48493:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "48485:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48422:77:0"
									},
									"src": "48404:96:0"
								},
								{
									"anonymous": false,
									"eventSelector": "4524387b4311078b7531910a140a6975002b10aca4cf12255e98da8f1ff1b35b",
									"id": 2282,
									"name": "PutUpForSale",
									"nameLocation": "48512:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "48533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "48525:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48548:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "48540:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48540:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2280,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "48565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "48557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48524:47:0"
									},
									"src": "48506:66:0"
								},
								{
									"anonymous": false,
									"eventSelector": "0a4292e75f7eafde90821610c4cabfc298540c274b50a7ea784a529a2b8a4a6f",
									"id": 2292,
									"name": "PutUpForSaleWithERC20",
									"nameLocation": "48584:21:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "48614:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "48606:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2286,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "48621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2288,
												"indexed": false,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "48646:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "48638:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2290,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "48661:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "48653:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48605:62:0"
									},
									"src": "48578:90:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8bf8e8f2f9d065b620f4e940d87122b03dd779d0ffd6a1590572e1e6d0416bef",
									"id": 2298,
									"name": "WithdrawFromSale",
									"nameLocation": "48680:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "48705:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "48697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48697:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48720:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "48712:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48696:32:0"
									},
									"src": "48674:55:0"
								},
								{
									"anonymous": false,
									"eventSelector": "d59f809f461fb2e2ca77f931dc43a9aaaa4295b0ed3c8e6adc04d0aab43eeb47",
									"id": 2304,
									"name": "WithdrawBank",
									"nameLocation": "48741:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48762:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "48754:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "48774:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "48766:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48753:28:0"
									},
									"src": "48735:47:0"
								},
								{
									"canonicalName": "Marketplace.SelledNFT",
									"id": 2313,
									"members": [
										{
											"constant": false,
											"id": 2306,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "48830:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 2313,
											"src": "48822:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2305,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "48822:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2308,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "48856:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 2313,
											"src": "48848:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2307,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "48848:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2310,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "48881:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2313,
											"src": "48873:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2309,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "48873:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2312,
											"mutability": "mutable",
											"name": "erc20",
											"nameLocation": "48905:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2313,
											"src": "48897:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2311,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "48897:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SelledNFT",
									"nameLocation": "48801:9:0",
									"nodeType": "StructDefinition",
									"scope": 3263,
									"src": "48794:195:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "08cfbc19",
									"id": 2316,
									"mutability": "mutable",
									"name": "marketNft",
									"nameLocation": "49012:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3263,
									"src": "48997:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$638",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 2315,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2314,
											"name": "IERC721",
											"nameLocations": [
												"48997:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 638,
											"src": "48997:7:0"
										},
										"referencedDeclaration": 638,
										"src": "48997:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$638",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "54fd4d50",
									"id": 2319,
									"mutability": "mutable",
									"name": "version",
									"nameLocation": "49042:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3263,
									"src": "49030:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2317,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "49030:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2318,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "49052:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2322,
									"mutability": "mutable",
									"name": "_tradeFee",
									"nameLocation": "49075:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3263,
									"src": "49062:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2320,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "49062:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2321,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "49087:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2326,
									"mutability": "mutable",
									"name": "_isTokensAtSale",
									"nameLocation": "49132:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3263,
									"src": "49099:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 2325,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2323,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "49107:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "49099:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2324,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "49118:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2331,
									"mutability": "mutable",
									"name": "_tokensAtSale",
									"nameLocation": "49192:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3263,
									"src": "49154:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
										"typeString": "mapping(uint256 => struct Marketplace.SelledNFT)"
									},
									"typeName": {
										"id": 2330,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2327,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "49162:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "49154:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
											"typeString": "mapping(uint256 => struct Marketplace.SelledNFT)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2329,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2328,
												"name": "SelledNFT",
												"nameLocations": [
													"49173:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2313,
												"src": "49173:9:0"
											},
											"referencedDeclaration": 2313,
											"src": "49173:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_SelledNFT_$2313_storage_ptr",
												"typeString": "struct Marketplace.SelledNFT"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2335,
									"mutability": "mutable",
									"name": "_blackList",
									"nameLocation": "49247:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 3263,
									"src": "49214:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2334,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "49222:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "49214:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2333,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "49233:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2338,
									"mutability": "mutable",
									"name": "_allowedERC20",
									"nameLocation": "49284:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3263,
									"src": "49266:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 2336,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "49266:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 2337,
										"nodeType": "ArrayTypeName",
										"src": "49266:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2341,
									"mutability": "mutable",
									"name": "_tokensIdsAtSale",
									"nameLocation": "49324:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3263,
									"src": "49306:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2339,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "49306:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2340,
										"nodeType": "ArrayTypeName",
										"src": "49306:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2352,
										"nodeType": "Block",
										"src": "49403:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2349,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "49436:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2346,
															"name": "_tokensIdsAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "49414:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "49431:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "49414:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49414:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2351,
												"nodeType": "ExpressionStatement",
												"src": "49414:31:0"
											}
										]
									},
									"id": 2353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__addTokenToSale",
									"nameLocation": "49358:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "49383:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "49375:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49374:18:0"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49403:0:0"
									},
									"scope": 3263,
									"src": "49349:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2429,
										"nodeType": "Block",
										"src": "49514:601:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2358,
															"name": "_tokensIdsAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "49529:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2363,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2359,
																	"name": "_tokensIdsAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "49546:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "49563:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "49546:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49572:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "49546:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "49529:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2364,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "49578:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "49529:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2373,
												"nodeType": "IfStatement",
												"src": "49525:133:0",
												"trueBody": {
													"id": 2372,
													"nodeType": "Block",
													"src": "49588:70:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2366,
																		"name": "_tokensIdsAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "49603:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "49620:3:0",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "49603:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer)"
																	}
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49603:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2370,
															"nodeType": "ExpressionStatement",
															"src": "49603:22:0"
														},
														{
															"functionReturnParameters": 2357,
															"id": 2371,
															"nodeType": "Return",
															"src": "49640:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													2375
												],
												"declarations": [
													{
														"constant": false,
														"id": 2375,
														"mutability": "mutable",
														"name": "hasItem",
														"nameLocation": "49673:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2429,
														"src": "49668:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2374,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "49668:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2377,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 2376,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "49683:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49668:20:0"
											},
											{
												"assignments": [
													2379
												],
												"declarations": [
													{
														"constant": false,
														"id": 2379,
														"mutability": "mutable",
														"name": "needIndex",
														"nameLocation": "49707:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2429,
														"src": "49699:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "49699:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2380,
												"nodeType": "VariableDeclarationStatement",
												"src": "49699:17:0"
											},
											{
												"body": {
													"id": 2408,
													"nodeType": "Block",
													"src": "49780:168:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2392,
																		"name": "_tokensIdsAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "49799:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2394,
																	"indexExpression": {
																		"id": 2393,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2382,
																		"src": "49816:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "49799:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2395,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2355,
																	"src": "49822:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "49799:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2407,
															"nodeType": "IfStatement",
															"src": "49795:142:0",
															"trueBody": {
																"id": 2406,
																"nodeType": "Block",
																"src": "49832:105:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2397,
																				"name": "hasItem",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2375,
																				"src": "49851:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 2398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49861:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "49851:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2400,
																		"nodeType": "ExpressionStatement",
																		"src": "49851:14:0"
																	},
																	{
																		"expression": {
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2401,
																				"name": "needIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2379,
																				"src": "49884:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2402,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "49896:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "49884:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2404,
																		"nodeType": "ExpressionStatement",
																		"src": "49884:13:0"
																	},
																	{
																		"id": 2405,
																		"nodeType": "Break",
																		"src": "49916:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2385,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2382,
														"src": "49746:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2386,
															"name": "_tokensIdsAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "49750:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "49767:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "49750:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "49746:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2409,
												"initializationExpression": {
													"assignments": [
														2382
													],
													"declarations": [
														{
															"constant": false,
															"id": 2382,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "49739:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2409,
															"src": "49731:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2381,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "49731:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2384,
													"initialValue": {
														"hexValue": "30",
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49743:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "49731:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "49775:3:0",
														"subExpression": {
															"id": 2389,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2382,
															"src": "49775:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2391,
													"nodeType": "ExpressionStatement",
													"src": "49775:3:0"
												},
												"nodeType": "ForStatement",
												"src": "49727:221:0"
											},
											{
												"condition": {
													"id": 2410,
													"name": "hasItem",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2375,
													"src": "49962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2428,
												"nodeType": "IfStatement",
												"src": "49958:150:0",
												"trueBody": {
													"id": 2427,
													"nodeType": "Block",
													"src": "49971:137:0",
													"statements": [
														{
															"expression": {
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2411,
																		"name": "_tokensIdsAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "49986:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2413,
																	"indexExpression": {
																		"id": 2412,
																		"name": "needIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2379,
																		"src": "50003:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "49986:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2414,
																		"name": "_tokensIdsAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "50016:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2419,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2415,
																				"name": "_tokensIdsAtSale",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2341,
																				"src": "50033:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "50050:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "50033:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50057:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "50033:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "50016:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "49986:73:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2421,
															"nodeType": "ExpressionStatement",
															"src": "49986:73:0"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2422,
																		"name": "_tokensIdsAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "50074:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "50091:3:0",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "50074:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer)"
																	}
																},
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50074:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2426,
															"nodeType": "ExpressionStatement",
															"src": "50074:22:0"
														}
													]
												}
											}
										]
									},
									"id": 2430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__delTokenForSale",
									"nameLocation": "49468:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "49494:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "49486:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49485:18:0"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49514:0:0"
									},
									"scope": 3263,
									"src": "49459:656:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2454,
										"nodeType": "Block",
										"src": "50233:118:0",
										"statements": [
											{
												"expression": {
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2440,
														"name": "marketNft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2316,
														"src": "50244:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$638",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2442,
																"name": "_nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2432,
																"src": "50264:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2441,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "50256:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50256:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$638",
															"typeString": "contract IERC721"
														}
													},
													"src": "50244:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$638",
														"typeString": "contract IERC721"
													}
												},
												"id": 2445,
												"nodeType": "ExpressionStatement",
												"src": "50244:25:0"
											},
											{
												"expression": {
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2446,
														"name": "_tradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "50280:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2447,
														"name": "__tradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2434,
														"src": "50292:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50280:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2449,
												"nodeType": "ExpressionStatement",
												"src": "50280:22:0"
											},
											{
												"expression": {
													"id": 2452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2450,
														"name": "_allowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "50313:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2451,
														"name": "__allowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "50329:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "50313:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 2453,
												"nodeType": "ExpressionStatement",
												"src": "50313:30:0"
											}
										]
									},
									"id": 2455,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "_nft",
												"nameLocation": "50153:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "50145:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "__tradeFee",
												"nameLocation": "50173:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "50168:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2433,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "50168:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "__allowedERC20",
												"nameLocation": "50211:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "50194:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2435,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "50194:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2436,
													"nodeType": "ArrayTypeName",
													"src": "50194:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50134:98:0"
									},
									"returnParameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50233:0:0"
									},
									"scope": 3263,
									"src": "50123:228:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2468,
										"nodeType": "Block",
										"src": "50412:42:0",
										"statements": [
											{
												"expression": {
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2462,
															"name": "_blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2335,
															"src": "50423:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2464,
														"indexExpression": {
															"id": 2463,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2457,
															"src": "50434:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "50423:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50442:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "50423:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2467,
												"nodeType": "ExpressionStatement",
												"src": "50423:23:0"
											}
										]
									},
									"functionSelector": "0ecb93c0",
									"id": 2469,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2460,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2459,
												"name": "onlyOwner",
												"nameLocations": [
													"50402:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "50402:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50402:9:0"
										}
									],
									"name": "addBlackList",
									"nameLocation": "50368:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "50389:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "50381:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50380:14:0"
									},
									"returnParameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50412:0:0"
									},
									"scope": 3263,
									"src": "50359:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2482,
										"nodeType": "Block",
										"src": "50516:43:0",
										"statements": [
											{
												"expression": {
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2476,
															"name": "_blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2335,
															"src": "50527:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2478,
														"indexExpression": {
															"id": 2477,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2471,
															"src": "50538:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "50527:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50546:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "50527:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2481,
												"nodeType": "ExpressionStatement",
												"src": "50527:24:0"
											}
										]
									},
									"functionSelector": "e4997dc5",
									"id": 2483,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2474,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2473,
												"name": "onlyOwner",
												"nameLocations": [
													"50506:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "50506:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50506:9:0"
										}
									],
									"name": "removeBlackList",
									"nameLocation": "50469:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "50493:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "50485:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50484:14:0"
									},
									"returnParameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50516:0:0"
									},
									"scope": 3263,
									"src": "50460:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2494,
										"nodeType": "Block",
										"src": "50628:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2490,
														"name": "_blackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2335,
														"src": "50646:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2492,
													"indexExpression": {
														"id": 2491,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2485,
														"src": "50657:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "50646:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2489,
												"id": 2493,
												"nodeType": "Return",
												"src": "50639:23:0"
											}
										]
									},
									"functionSelector": "fe575a87",
									"id": 2495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nameLocation": "50574:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "50596:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "50588:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50587:14:0"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "50622:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "50622:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50621:6:0"
									},
									"scope": 3263,
									"src": "50565:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2507,
										"nodeType": "Block",
										"src": "50754:50:0",
										"statements": [
											{
												"expression": {
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2503,
														"name": "_allowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "50765:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2504,
														"name": "newAllowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2498,
														"src": "50781:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "50765:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 2506,
												"nodeType": "ExpressionStatement",
												"src": "50765:31:0"
											}
										]
									},
									"functionSelector": "e9e4e160",
									"id": 2508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2501,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2500,
												"name": "onlyOwner",
												"nameLocations": [
													"50744:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "50744:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50744:9:0"
										}
									],
									"name": "setAllowedERC20",
									"nameLocation": "50687:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "newAllowedERC20",
												"nameLocation": "50720:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "50703:32:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2496,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "50703:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2497,
													"nodeType": "ArrayTypeName",
													"src": "50703:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50702:34:0"
									},
									"returnParameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50754:0:0"
									},
									"scope": 3263,
									"src": "50678:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2516,
										"nodeType": "Block",
										"src": "50875:39:0",
										"statements": [
											{
												"expression": {
													"id": 2514,
													"name": "_allowedERC20",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2338,
													"src": "50893:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 2513,
												"id": 2515,
												"nodeType": "Return",
												"src": "50886:20:0"
											}
										]
									},
									"functionSelector": "69c57352",
									"id": 2517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllowedERC20",
									"nameLocation": "50819:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50834:2:0"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "50857:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2510,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "50857:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2511,
													"nodeType": "ArrayTypeName",
													"src": "50857:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50856:18:0"
									},
									"scope": 3263,
									"src": "50810:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2547,
										"nodeType": "Block",
										"src": "50986:152:0",
										"statements": [
											{
												"body": {
													"id": 2543,
													"nodeType": "Block",
													"src": "51039:69:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2535,
																	"name": "erc20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "51058:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2536,
																		"name": "_allowedERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2338,
																		"src": "51067:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2538,
																	"indexExpression": {
																		"id": 2537,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2525,
																		"src": "51081:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "51067:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "51058:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2542,
															"nodeType": "IfStatement",
															"src": "51054:42:0",
															"trueBody": {
																"expression": {
																	"hexValue": "74727565",
																	"id": 2540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51092:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"functionReturnParameters": 2523,
																"id": 2541,
																"nodeType": "Return",
																"src": "51085:11:0"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2528,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2525,
														"src": "51011:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2529,
															"name": "_allowedERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "51013:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "51027:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "51013:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "51011:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2544,
												"initializationExpression": {
													"assignments": [
														2525
													],
													"declarations": [
														{
															"constant": false,
															"id": 2525,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "51006:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2544,
															"src": "51001:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2524,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "51001:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2527,
													"initialValue": {
														"hexValue": "30",
														"id": 2526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51008:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "51001:8:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "51034:3:0",
														"subExpression": {
															"id": 2532,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2525,
															"src": "51034:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2534,
													"nodeType": "ExpressionStatement",
													"src": "51034:3:0"
												},
												"nodeType": "ForStatement",
												"src": "50997:111:0"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 2545,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "51125:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 2523,
												"id": 2546,
												"nodeType": "Return",
												"src": "51118:12:0"
											}
										]
									},
									"functionSelector": "785fa7ce",
									"id": 2548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAllowedERC20",
									"nameLocation": "50929:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "50952:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "50944:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50943:15:0"
									},
									"returnParameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "50980:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "50980:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50979:6:0"
									},
									"scope": 3263,
									"src": "50920:218:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2559,
										"nodeType": "Block",
										"src": "51197:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2555,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "51223:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Marketplace_$3263",
																	"typeString": "contract Marketplace"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Marketplace_$3263",
																	"typeString": "contract Marketplace"
																}
															],
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51215:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2553,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51215:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51215:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "51229:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "51215:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2552,
												"id": 2558,
												"nodeType": "Return",
												"src": "51208:28:0"
											}
										]
									},
									"functionSelector": "b42a275e",
									"id": 2560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bankAmount",
									"nameLocation": "51155:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51165:2:0"
									},
									"returnParameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "51188:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51187:9:0"
									},
									"scope": 3263,
									"src": "51146:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2588,
										"nodeType": "Block",
										"src": "51293:152:0",
										"statements": [
											{
												"assignments": [
													2566
												],
												"declarations": [
													{
														"constant": false,
														"id": 2566,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "51312:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2588,
														"src": "51304:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2565,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "51304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2572,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2569,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "51329:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Marketplace_$3263",
																	"typeString": "contract Marketplace"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Marketplace_$3263",
																	"typeString": "contract Marketplace"
																}
															],
															"id": 2568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2567,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51321:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51321:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "51335:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "51321:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51304:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2579,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2566,
															"src": "51382:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2575,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "51361:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "51365:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "51361:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "51353:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2573,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "51353:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51353:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "51373:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "51353:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51353:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2581,
												"nodeType": "ExpressionStatement",
												"src": "51353:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2583,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "51418:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "51422:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "51418:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2585,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2566,
															"src": "51430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2582,
														"name": "WithdrawBank",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "51405:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51405:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2587,
												"nodeType": "EmitStatement",
												"src": "51400:37:0"
											}
										]
									},
									"functionSelector": "ff7f0cf9",
									"id": 2589,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2563,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2562,
												"name": "onlyOwner",
												"nameLocations": [
													"51283:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "51283:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "51283:9:0"
										}
									],
									"name": "withdrawBank",
									"nameLocation": "51261:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51273:2:0"
									},
									"returnParameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51293:0:0"
									},
									"scope": 3263,
									"src": "51252:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2611,
										"nodeType": "Block",
										"src": "51522:95:0",
										"statements": [
											{
												"assignments": [
													2598
												],
												"declarations": [
													{
														"constant": false,
														"id": 2598,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "51540:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2611,
														"src": "51533:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$517",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 2597,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2596,
																"name": "IERC20",
																"nameLocations": [
																	"51533:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 517,
																"src": "51533:6:0"
															},
															"referencedDeclaration": 517,
															"src": "51533:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2602,
												"initialValue": {
													"arguments": [
														{
															"id": 2600,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "51555:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2599,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "51548:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$517_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51548:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51533:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2607,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "51603:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 2606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "51595:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2605,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "51595:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51595:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2603,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2598,
															"src": "51579:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 2604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "51585:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "51579:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51579:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2595,
												"id": 2610,
												"nodeType": "Return",
												"src": "51572:37:0"
											}
										]
									},
									"functionSelector": "476caa70",
									"id": 2612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bankAmountERC20",
									"nameLocation": "51462:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "51486:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "51478:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51477:15:0"
									},
									"returnParameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "51513:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51512:9:0"
									},
									"scope": 3263,
									"src": "51453:164:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2644,
										"nodeType": "Block",
										"src": "51682:149:0",
										"statements": [
											{
												"assignments": [
													2621
												],
												"declarations": [
													{
														"constant": false,
														"id": 2621,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "51700:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2644,
														"src": "51693:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$517",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 2620,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2619,
																"name": "IERC20",
																"nameLocations": [
																	"51693:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 517,
																"src": "51693:6:0"
															},
															"referencedDeclaration": 517,
															"src": "51693:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2625,
												"initialValue": {
													"arguments": [
														{
															"id": 2623,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2614,
															"src": "51715:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2622,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "51708:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$517_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 2624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51708:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51693:28:0"
											},
											{
												"assignments": [
													2627
												],
												"declarations": [
													{
														"constant": false,
														"id": 2627,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "51740:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2644,
														"src": "51732:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "51732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2635,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2632,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "51774:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 2631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "51766:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "51766:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51766:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2628,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2621,
															"src": "51750:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 2629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "51756:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "51750:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51750:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51732:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2639,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "51806:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51806:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2641,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2627,
															"src": "51815:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2636,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2621,
															"src": "51791:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 2638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "51797:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 484,
														"src": "51791:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51791:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2643,
												"nodeType": "ExpressionStatement",
												"src": "51791:32:0"
											}
										]
									},
									"functionSelector": "fcf984a9",
									"id": 2645,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2617,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2616,
												"name": "onlyOwner",
												"nameLocations": [
													"51672:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "51672:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "51672:9:0"
										}
									],
									"name": "withdrawBankERC20",
									"nameLocation": "51632:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "51658:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "51650:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51649:15:0"
									},
									"returnParameters": {
										"id": 2618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51682:0:0"
									},
									"scope": 3263,
									"src": "51623:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2652,
										"nodeType": "Block",
										"src": "51889:35:0",
										"statements": [
											{
												"expression": {
													"id": 2650,
													"name": "_tradeFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2322,
													"src": "51907:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2649,
												"id": 2651,
												"nodeType": "Return",
												"src": "51900:16:0"
											}
										]
									},
									"functionSelector": "952977f5",
									"id": 2653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTradeFee",
									"nameLocation": "51848:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51859:2:0"
									},
									"returnParameters": {
										"id": 2649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2653,
												"src": "51883:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2647,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "51883:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51882:6:0"
									},
									"scope": 3263,
									"src": "51839:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2664,
										"nodeType": "Block",
										"src": "51987:43:0",
										"statements": [
											{
												"expression": {
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2660,
														"name": "_tradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "51998:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2661,
														"name": "_newTradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2655,
														"src": "52010:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "51998:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2663,
												"nodeType": "ExpressionStatement",
												"src": "51998:24:0"
											}
										]
									},
									"functionSelector": "10603023",
									"id": 2665,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2658,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2657,
												"name": "onlyOwner",
												"nameLocations": [
													"51977:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "51977:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "51977:9:0"
										}
									],
									"name": "setTradeFee",
									"nameLocation": "51939:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "_newTradeFee",
												"nameLocation": "51956:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "51951:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2654,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "51951:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51950:19:0"
									},
									"returnParameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51987:0:0"
									},
									"scope": 3263,
									"src": "51930:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2687,
										"nodeType": "Block",
										"src": "52091:84:0",
										"statements": [
											{
												"expression": {
													"id": 2685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2670,
															"name": "_tokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "52102:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
															}
														},
														"id": 2672,
														"indexExpression": {
															"id": 2671,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2667,
															"src": "52116:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "52102:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
															"typeString": "struct Marketplace.SelledNFT storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52138:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "52149:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "52141:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2675,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "52141:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52141:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 2679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52153:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "52164:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "52156:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2680,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "52156:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52156:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2673,
															"name": "SelledNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "52128:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_SelledNFT_$2313_storage_ptr_$",
																"typeString": "type(struct Marketplace.SelledNFT storage pointer)"
															}
														},
														"id": 2684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "52128:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2313_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT memory"
														}
													},
													"src": "52102:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
														"typeString": "struct Marketplace.SelledNFT storage ref"
													}
												},
												"id": 2686,
												"nodeType": "ExpressionStatement",
												"src": "52102:65:0"
											}
										]
									},
									"id": 2688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_clearSellToken",
									"nameLocation": "52049:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "52073:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "52065:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52064:18:0"
									},
									"returnParameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52091:0:0"
									},
									"scope": 3263,
									"src": "52040:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2700,
										"nodeType": "Block",
										"src": "52259:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2696,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "52297:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "52301:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "52297:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2695,
														"name": "getUserTokensAtSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2711,
														"src": "52277:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (address) view returns (struct Marketplace.SelledNFT memory[] memory)"
														}
													},
													"id": 2698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52277:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"functionReturnParameters": 2694,
												"id": 2699,
												"nodeType": "Return",
												"src": "52270:38:0"
											}
										]
									},
									"functionSelector": "a096c5a2",
									"id": 2701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyTokensAtSale",
									"nameLocation": "52192:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52209:2:0"
									},
									"returnParameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "52254:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "52235:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 2691,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2690,
															"name": "SelledNFT",
															"nameLocations": [
																"52235:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2313,
															"src": "52235:9:0"
														},
														"referencedDeclaration": 2313,
														"src": "52235:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2313_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 2692,
													"nodeType": "ArrayTypeName",
													"src": "52235:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2313_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52234:24:0"
									},
									"scope": 3263,
									"src": "52183:133:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2710,
										"nodeType": "Block",
										"src": "52437:979:0",
										"statements": []
									},
									"functionSelector": "19c8c1c5",
									"id": 2711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserTokensAtSale",
									"nameLocation": "52333:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "52361:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "52353:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52352:16:0"
									},
									"returnParameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "52427:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "52408:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 2706,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2705,
															"name": "SelledNFT",
															"nameLocations": [
																"52408:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2313,
															"src": "52408:9:0"
														},
														"referencedDeclaration": 2313,
														"src": "52408:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2313_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 2707,
													"nodeType": "ArrayTypeName",
													"src": "52408:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2313_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52407:24:0"
									},
									"scope": 3263,
									"src": "52324:1092:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2777,
										"nodeType": "Block",
										"src": "53521:1397:0",
										"statements": [
											{
												"assignments": [
													2722
												],
												"declarations": [
													{
														"constant": false,
														"id": 2722,
														"mutability": "mutable",
														"name": "_ret",
														"nameLocation": "53551:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2777,
														"src": "53532:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT[]"
														},
														"typeName": {
															"baseType": {
																"id": 2720,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2719,
																	"name": "SelledNFT",
																	"nameLocations": [
																		"53532:9:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2313,
																	"src": "53532:9:0"
																},
																"referencedDeclaration": 2313,
																"src": "53532:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2313_storage_ptr",
																	"typeString": "struct Marketplace.SelledNFT"
																}
															},
															"id": 2721,
															"nodeType": "ArrayTypeName",
															"src": "53532:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2313_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2730,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2727,
																"name": "_tokensIdsAtSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "53574:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															},
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "53591:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "53574:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "53558:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Marketplace.SelledNFT memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2724,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2723,
																	"name": "SelledNFT",
																	"nameLocations": [
																		"53562:9:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2313,
																	"src": "53562:9:0"
																},
																"referencedDeclaration": 2313,
																"src": "53562:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2313_storage_ptr",
																	"typeString": "struct Marketplace.SelledNFT"
																}
															},
															"id": 2725,
															"nodeType": "ArrayTypeName",
															"src": "53562:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2313_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT[]"
															}
														}
													},
													"id": 2729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53558:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53532:66:0"
											},
											{
												"body": {
													"id": 2773,
													"nodeType": "Block",
													"src": "53663:339:0",
													"statements": [
														{
															"assignments": [
																2743
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2743,
																	"mutability": "mutable",
																	"name": "_tokenId",
																	"nameLocation": "53686:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2773,
																	"src": "53678:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2742,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "53678:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2747,
															"initialValue": {
																"baseExpression": {
																	"id": 2744,
																	"name": "_tokensIdsAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "53697:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 2746,
																"indexExpression": {
																	"id": 2745,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "53714:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "53697:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "53678:38:0"
														},
														{
															"assignments": [
																2750
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2750,
																	"mutability": "mutable",
																	"name": "_pushItem",
																	"nameLocation": "53748:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2773,
																	"src": "53731:26:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2313_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT"
																	},
																	"typeName": {
																		"id": 2749,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2748,
																			"name": "SelledNFT",
																			"nameLocations": [
																				"53731:9:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2313,
																			"src": "53731:9:0"
																		},
																		"referencedDeclaration": 2313,
																		"src": "53731:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2313_storage_ptr",
																			"typeString": "struct Marketplace.SelledNFT"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2766,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2752,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2743,
																		"src": "53788:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2753,
																				"name": "_tokensAtSale",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2331,
																				"src": "53815:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																				}
																			},
																			"id": 2755,
																			"indexExpression": {
																				"id": 2754,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2743,
																				"src": "53829:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "53815:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref"
																			}
																		},
																		"id": 2756,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "53839:6:0",
																		"memberName": "seller",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2308,
																		"src": "53815:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2757,
																				"name": "_tokensAtSale",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2331,
																				"src": "53864:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																				}
																			},
																			"id": 2759,
																			"indexExpression": {
																				"id": 2758,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2743,
																				"src": "53878:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "53864:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref"
																			}
																		},
																		"id": 2760,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "53888:5:0",
																		"memberName": "price",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2310,
																		"src": "53864:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2761,
																				"name": "_tokensAtSale",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2331,
																				"src": "53912:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																				}
																			},
																			"id": 2763,
																			"indexExpression": {
																				"id": 2762,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2743,
																				"src": "53926:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "53912:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref"
																			}
																		},
																		"id": 2764,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "53936:5:0",
																		"memberName": "erc20",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2312,
																		"src": "53912:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2751,
																	"name": "SelledNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2313,
																	"src": "53760:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_SelledNFT_$2313_storage_ptr_$",
																		"typeString": "type(struct Marketplace.SelledNFT storage pointer)"
																	}
																},
																"id": 2765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53760:196:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2313_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "53731:225:0"
														},
														{
															"expression": {
																"id": 2771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2767,
																		"name": "_ret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2722,
																		"src": "53971:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct Marketplace.SelledNFT memory[] memory"
																		}
																	},
																	"id": 2769,
																	"indexExpression": {
																		"id": 2768,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2732,
																		"src": "53976:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "53971:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2313_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2770,
																	"name": "_pushItem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2750,
																	"src": "53981:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2313_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"src": "53971:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2313_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 2772,
															"nodeType": "ExpressionStatement",
															"src": "53971:19:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2735,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2732,
														"src": "53629:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2736,
															"name": "_tokensIdsAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "53633:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "53650:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "53633:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53629:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2774,
												"initializationExpression": {
													"assignments": [
														2732
													],
													"declarations": [
														{
															"constant": false,
															"id": 2732,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "53622:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2774,
															"src": "53614:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2731,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "53614:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2734,
													"initialValue": {
														"hexValue": "30",
														"id": 2733,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53626:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "53614:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "53658:3:0",
														"subExpression": {
															"id": 2739,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2732,
															"src": "53658:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2741,
													"nodeType": "ExpressionStatement",
													"src": "53658:3:0"
												},
												"nodeType": "ForStatement",
												"src": "53609:393:0"
											},
											{
												"expression": {
													"id": 2775,
													"name": "_ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2722,
													"src": "54019:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"functionReturnParameters": 2717,
												"id": 2776,
												"nodeType": "Return",
												"src": "54012:11:0"
											}
										]
									},
									"functionSelector": "d55a34e4",
									"id": 2778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokensAtSale",
									"nameLocation": "53433:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53448:2:0"
									},
									"returnParameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2716,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "53511:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "53492:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2313_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 2714,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2713,
															"name": "SelledNFT",
															"nameLocations": [
																"53492:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2313,
															"src": "53492:9:0"
														},
														"referencedDeclaration": 2313,
														"src": "53492:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2313_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 2715,
													"nodeType": "ArrayTypeName",
													"src": "53492:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2313_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53491:24:0"
									},
									"scope": 3263,
									"src": "53424:1494:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2973,
										"nodeType": "Block",
										"src": "54985:1596:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2784,
																	"name": "_isTokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "55004:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 2786,
																"indexExpression": {
																	"id": 2785,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2780,
																	"src": "55020:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "55004:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 2787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55033:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "55004:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204e4654206973206e6f7420666f722073616c65",
															"id": 2789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55039:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															},
															"value": "This NFT is not for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															}
														],
														"id": 2783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "54996:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54996:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2791,
												"nodeType": "ExpressionStatement",
												"src": "54996:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2793,
																		"name": "_tokensAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "55085:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																		}
																	},
																	"id": 2795,
																	"indexExpression": {
																		"id": 2794,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2780,
																		"src": "55099:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "55085:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																		"typeString": "struct Marketplace.SelledNFT storage ref"
																	}
																},
																"id": 2796,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "55109:5:0",
																"memberName": "erc20",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2312,
																"src": "55085:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "55126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "55118:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2797,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "55118:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55118:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "55085:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e",
															"id": 2802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55130:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d",
																"typeString": "literal_string \"This token selled by Native coin\""
															},
															"value": "This token selled by Native coin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d",
																"typeString": "literal_string \"This token selled by Native coin\""
															}
														],
														"id": 2792,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "55077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55077:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2804,
												"nodeType": "ExpressionStatement",
												"src": "55077:88:0"
											},
											{
												"assignments": [
													2807
												],
												"declarations": [
													{
														"constant": false,
														"id": 2807,
														"mutability": "mutable",
														"name": "payToken",
														"nameLocation": "55185:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2973,
														"src": "55178:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$517",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 2806,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2805,
																"name": "IERC20",
																"nameLocations": [
																	"55178:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 517,
																"src": "55178:6:0"
															},
															"referencedDeclaration": 517,
															"src": "55178:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2814,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2809,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "55203:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 2811,
																"indexExpression": {
																	"id": 2810,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2780,
																	"src": "55217:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "55203:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 2812,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "55227:5:0",
															"memberName": "erc20",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2312,
															"src": "55203:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2808,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "55196:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$517_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 2813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55196:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55178:55:0"
											},
											{
												"assignments": [
													2816
												],
												"declarations": [
													{
														"constant": false,
														"id": 2816,
														"mutability": "mutable",
														"name": "buyerBalance",
														"nameLocation": "55252:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 2973,
														"src": "55244:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2815,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55244:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2822,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2819,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "55286:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "55290:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "55286:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2817,
															"name": "payToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2807,
															"src": "55267:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 2818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55276:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "55267:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55267:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55244:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2824,
																"name": "buyerBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2816,
																"src": "55316:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2825,
																		"name": "_tokensAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "55332:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																		}
																	},
																	"id": 2827,
																	"indexExpression": {
																		"id": 2826,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2780,
																		"src": "55346:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "55332:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																		"typeString": "struct Marketplace.SelledNFT storage ref"
																	}
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "55356:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2310,
																"src": "55332:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "55316:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e20796f75722062616c616e636520746f20706179",
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55363:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca",
																"typeString": "literal_string \"You do not have enough tokens on your balance to pay\""
															},
															"value": "You do not have enough tokens on your balance to pay"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca",
																"typeString": "literal_string \"You do not have enough tokens on your balance to pay\""
															}
														],
														"id": 2823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "55308:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55308:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2832,
												"nodeType": "ExpressionStatement",
												"src": "55308:110:0"
											},
											{
												"assignments": [
													2834
												],
												"declarations": [
													{
														"constant": false,
														"id": 2834,
														"mutability": "mutable",
														"name": "buyerAllowance",
														"nameLocation": "55437:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 2973,
														"src": "55429:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2833,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55429:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2844,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2837,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "55473:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "55477:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "55473:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2841,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "55493:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 2840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "55485:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2839,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "55485:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55485:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2835,
															"name": "payToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2807,
															"src": "55454:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 2836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55463:9:0",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "55454:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 2843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55454:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55429:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2846,
																"name": "buyerAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2834,
																"src": "55518:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2847,
																		"name": "_tokensAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "55536:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																		}
																	},
																	"id": 2849,
																	"indexExpression": {
																		"id": 2848,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2780,
																		"src": "55550:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "55536:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																		"typeString": "struct Marketplace.SelledNFT storage ref"
																	}
																},
																"id": 2850,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "55560:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2310,
																"src": "55536:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "55518:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646964206e6f7420616c6c6f772074686520636f6e747261637420746f2073656e642074686520707572636861736520616d6f756e74",
															"id": 2852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55567:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1",
																"typeString": "literal_string \"You did not allow the contract to send the purchase amount\""
															},
															"value": "You did not allow the contract to send the purchase amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1",
																"typeString": "literal_string \"You did not allow the contract to send the purchase amount\""
															}
														],
														"id": 2845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "55510:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55510:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2854,
												"nodeType": "ExpressionStatement",
												"src": "55510:118:0"
											},
											{
												"assignments": [
													2856
												],
												"declarations": [
													{
														"constant": false,
														"id": 2856,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "55659:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2973,
														"src": "55651:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55651:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2861,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 2857,
															"name": "_tokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "55668:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
															}
														},
														"id": 2859,
														"indexExpression": {
															"id": 2858,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2780,
															"src": "55682:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "55668:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
															"typeString": "struct Marketplace.SelledNFT storage ref"
														}
													},
													"id": 2860,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "55692:5:0",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2310,
													"src": "55668:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55651:46:0"
											},
											{
												"assignments": [
													2863
												],
												"declarations": [
													{
														"constant": false,
														"id": 2863,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "55716:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2973,
														"src": "55708:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2862,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55708:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2873,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2868,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2856,
																	"src": "55754:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 2869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55762:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"expression": {
																	"id": 2866,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "55741:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 2867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "55750:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1824,
																"src": "55741:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55741:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2871,
															"name": "_tradeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2322,
															"src": "55768:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2864,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "55728:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 2865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55737:3:0",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1809,
														"src": "55728:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55728:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55708:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 2874,
																"name": "_tokensAtSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "55793:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																	"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																}
															},
															"id": 2876,
															"indexExpression": {
																"id": 2875,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2780,
																"src": "55807:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "55793:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																"typeString": "struct Marketplace.SelledNFT storage ref"
															}
														},
														"id": 2877,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55817:6:0",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2308,
														"src": "55793:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2878,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "55827:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55827:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "55793:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2885,
												"nodeType": "IfStatement",
												"src": "55789:60:0",
												"trueBody": {
													"expression": {
														"id": 2883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2881,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2863,
															"src": "55836:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55848:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "55836:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2884,
													"nodeType": "ExpressionStatement",
													"src": "55836:13:0"
												}
											},
											{
												"assignments": [
													2887
												],
												"declarations": [
													{
														"constant": false,
														"id": 2887,
														"mutability": "mutable",
														"name": "amountWithFee",
														"nameLocation": "55868:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2973,
														"src": "55860:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2886,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55860:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2893,
												"initialValue": {
													"arguments": [
														{
															"id": 2890,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2856,
															"src": "55897:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2891,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2863,
															"src": "55905:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2888,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "55884:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 2889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55893:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1794,
														"src": "55884:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55884:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55860:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2899,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "55976:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "55980:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "55976:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "55968:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2897,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "55968:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55968:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 2904,
																			"name": "_tokensAtSale",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2331,
																			"src": "56010:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																			}
																		},
																		"id": 2906,
																		"indexExpression": {
																			"id": 2905,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2780,
																			"src": "56024:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "56010:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref"
																		}
																	},
																	"id": 2907,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "56034:6:0",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2308,
																	"src": "56010:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "56002:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2902,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "56002:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56002:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2909,
															"name": "amountWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2887,
															"src": "56056:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2894,
															"name": "payToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2807,
															"src": "55928:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 2896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55937:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 218,
														"src": "55928:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$517_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55928:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2911,
												"nodeType": "ExpressionStatement",
												"src": "55928:152:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2912,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2863,
														"src": "56095:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56107:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56095:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2932,
												"nodeType": "IfStatement",
												"src": "56091:187:0",
												"trueBody": {
													"id": 2931,
													"nodeType": "Block",
													"src": "56110:168:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2920,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "56177:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2921,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "56181:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "56177:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "56169:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2918,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "56169:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "56169:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2925,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 59,
																					"src": "56215:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "56215:7:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "56207:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "56207:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "56207:16:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2928,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2863,
																		"src": "56242:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2915,
																		"name": "payToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2807,
																		"src": "56125:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$517",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "56134:16:0",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 218,
																	"src": "56125:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$517_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 2929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56125:141:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2930,
															"nodeType": "ExpressionStatement",
															"src": "56125:141:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2938,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "56319:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 2937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "56311:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2936,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "56311:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56311:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2940,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "56326:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56330:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "56326:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2942,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2780,
															"src": "56338:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2933,
															"name": "marketNft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2316,
															"src": "56288:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 2935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "56298:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "56288:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56288:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2944,
												"nodeType": "ExpressionStatement",
												"src": "56288:59:0"
											},
											{
												"expression": {
													"id": 2949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2945,
															"name": "_isTokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "56358:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 2947,
														"indexExpression": {
															"id": 2946,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2780,
															"src": "56374:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "56358:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56386:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "56358:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2950,
												"nodeType": "ExpressionStatement",
												"src": "56358:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2952,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2780,
															"src": "56418:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2951,
														"name": "_clearSellToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "56402:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56402:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2954,
												"nodeType": "ExpressionStatement",
												"src": "56402:25:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2956,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "56458:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 2958,
																"indexExpression": {
																	"id": 2957,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2780,
																	"src": "56472:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "56458:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 2959,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56482:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2308,
															"src": "56458:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2960,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "56490:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56494:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "56490:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2962,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2780,
															"src": "56502:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2963,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "56512:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 2965,
																"indexExpression": {
																	"id": 2964,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2780,
																	"src": "56526:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "56512:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 2966,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56536:5:0",
															"memberName": "erc20",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2312,
															"src": "56512:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2967,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "56543:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 2969,
																"indexExpression": {
																	"id": 2968,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2780,
																	"src": "56557:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "56543:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 2970,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56567:5:0",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2310,
															"src": "56543:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2955,
														"name": "BuyWithERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2274,
														"src": "56445:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,address,uint256)"
														}
													},
													"id": 2971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56445:128:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2972,
												"nodeType": "EmitStatement",
												"src": "56440:133:0"
											}
										]
									},
									"functionSelector": "047a5d43",
									"id": 2974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyNFTbyERC20",
									"nameLocation": "54935:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2780,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "54954:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "54949:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2779,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "54949:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54948:15:0"
									},
									"returnParameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54985:0:0"
									},
									"scope": 3263,
									"src": "54926:1655:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3110,
										"nodeType": "Block",
										"src": "56663:1094:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2980,
																	"name": "_isTokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "56719:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 2982,
																"indexExpression": {
																	"id": 2981,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2976,
																	"src": "56735:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "56719:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 2983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56748:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "56719:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204e4654206973206e6f7420666f722073616c65",
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56754:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															},
															"value": "This NFT is not for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															}
														],
														"id": 2979,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "56711:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56711:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2987,
												"nodeType": "ExpressionStatement",
												"src": "56711:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2989,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "56826:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "56830:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "56826:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2991,
																		"name": "_tokensAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "56839:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																		}
																	},
																	"id": 2993,
																	"indexExpression": {
																		"id": 2992,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2976,
																		"src": "56853:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "56839:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																		"typeString": "struct Marketplace.SelledNFT storage ref"
																	}
																},
																"id": 2994,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "56863:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2310,
																"src": "56839:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "56826:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f74207061696420656e6f75676820666f722074686973206974656d",
															"id": 2996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56870:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a",
																"typeString": "literal_string \"You have not paid enough for this item\""
															},
															"value": "You have not paid enough for this item"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a",
																"typeString": "literal_string \"You have not paid enough for this item\""
															}
														],
														"id": 2988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "56818:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56818:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2998,
												"nodeType": "ExpressionStatement",
												"src": "56818:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3000,
																		"name": "_tokensAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "56974:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																		}
																	},
																	"id": 3002,
																	"indexExpression": {
																		"id": 3001,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2976,
																		"src": "56988:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "56974:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																		"typeString": "struct Marketplace.SelledNFT storage ref"
																	}
																},
																"id": 3003,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "56998:5:0",
																"memberName": "erc20",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2312,
																"src": "56974:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "57015:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "57007:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3004,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "57007:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57007:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "56974:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e2073656c6c6564206279204552433230",
															"id": 3009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57019:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c",
																"typeString": "literal_string \"This token selled by ERC20\""
															},
															"value": "This token selled by ERC20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c",
																"typeString": "literal_string \"This token selled by ERC20\""
															}
														],
														"id": 2999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "56966:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56966:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3011,
												"nodeType": "ExpressionStatement",
												"src": "56966:82:0"
											},
											{
												"assignments": [
													3013
												],
												"declarations": [
													{
														"constant": false,
														"id": 3013,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "57077:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3110,
														"src": "57069:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3012,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57069:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3016,
												"initialValue": {
													"expression": {
														"id": 3014,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "57086:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "57090:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "57086:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57069:26:0"
											},
											{
												"assignments": [
													3018
												],
												"declarations": [
													{
														"constant": false,
														"id": 3018,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "57114:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3110,
														"src": "57106:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3017,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57106:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3028,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3023,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3013,
																	"src": "57152:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 3024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "57160:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"expression": {
																	"id": 3021,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "57139:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 3022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "57148:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1824,
																"src": "57139:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57139:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3026,
															"name": "_tradeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2322,
															"src": "57166:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3019,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "57126:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57135:3:0",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1809,
														"src": "57126:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57126:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57106:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 3029,
																"name": "_tokensAtSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "57191:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																	"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																}
															},
															"id": 3031,
															"indexExpression": {
																"id": 3030,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2976,
																"src": "57205:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "57191:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																"typeString": "struct Marketplace.SelledNFT storage ref"
															}
														},
														"id": 3032,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57215:6:0",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2308,
														"src": "57191:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3033,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "57225:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 3034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "57225:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "57191:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3040,
												"nodeType": "IfStatement",
												"src": "57187:60:0",
												"trueBody": {
													"expression": {
														"id": 3038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3036,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3018,
															"src": "57234:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 3037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57246:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "57234:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3039,
													"nodeType": "ExpressionStatement",
													"src": "57234:13:0"
												}
											},
											{
												"assignments": [
													3042
												],
												"declarations": [
													{
														"constant": false,
														"id": 3042,
														"mutability": "mutable",
														"name": "amountWithFee",
														"nameLocation": "57266:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 3110,
														"src": "57258:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3041,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57258:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3048,
												"initialValue": {
													"arguments": [
														{
															"id": 3045,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3013,
															"src": "57295:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3046,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3018,
															"src": "57303:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3043,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "57282:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57291:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1794,
														"src": "57282:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57282:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57258:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3057,
															"name": "amountWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3042,
															"src": "57375:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 3051,
																			"name": "_tokensAtSale",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2331,
																			"src": "57334:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																			}
																		},
																		"id": 3053,
																		"indexExpression": {
																			"id": 3052,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2976,
																			"src": "57348:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "57334:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref"
																		}
																	},
																	"id": 3054,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57358:6:0",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2308,
																	"src": "57334:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "57326:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3049,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "57326:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57326:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57366:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "57326:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57326:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3059,
												"nodeType": "ExpressionStatement",
												"src": "57326:63:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3060,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3018,
														"src": "57404:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57416:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57404:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3073,
												"nodeType": "IfStatement",
												"src": "57400:82:0",
												"trueBody": {
													"id": 3072,
													"nodeType": "Block",
													"src": "57419:63:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3069,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3018,
																		"src": "57460:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 3065,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 59,
																					"src": "57442:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 3066,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "57442:7:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "57434:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 3063,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "57434:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "57434:16:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 3068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57451:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "57434:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 3070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57434:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3071,
															"nodeType": "ExpressionStatement",
															"src": "57434:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3079,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "57533:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "57525:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3077,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "57525:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57525:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3081,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "57540:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57544:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "57540:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3083,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2976,
															"src": "57552:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3074,
															"name": "marketNft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2316,
															"src": "57502:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57512:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "57502:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57502:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3085,
												"nodeType": "ExpressionStatement",
												"src": "57502:59:0"
											},
											{
												"expression": {
													"id": 3090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3086,
															"name": "_isTokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "57572:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3088,
														"indexExpression": {
															"id": 3087,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2976,
															"src": "57588:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "57572:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57600:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "57572:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3091,
												"nodeType": "ExpressionStatement",
												"src": "57572:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 3093,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "57627:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 3095,
																"indexExpression": {
																	"id": 3094,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2976,
																	"src": "57641:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "57627:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 3096,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57651:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2308,
															"src": "57627:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3097,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "57659:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57663:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "57659:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3099,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2976,
															"src": "57671:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 3100,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "57681:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 3102,
																"indexExpression": {
																	"id": 3101,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2976,
																	"src": "57695:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "57681:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 3103,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57705:5:0",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2310,
															"src": "57681:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3092,
														"name": "Buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2262,
														"src": "57623:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 3104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57623:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3105,
												"nodeType": "EmitStatement",
												"src": "57618:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3107,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2976,
															"src": "57740:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3106,
														"name": "_clearSellToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "57724:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57724:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3109,
												"nodeType": "ExpressionStatement",
												"src": "57724:25:0"
											}
										]
									},
									"functionSelector": "51ed8288",
									"id": 3111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyNFT",
									"nameLocation": "56600:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "56615:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "56607:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56606:18:0"
									},
									"returnParameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56663:0:0"
									},
									"scope": 3263,
									"src": "56591:1166:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3209,
										"nodeType": "Block",
										"src": "57886:847:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3123,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3113,
																		"src": "57937:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3121,
																		"name": "marketNft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2316,
																		"src": "57919:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$638",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 3122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57929:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 571,
																	"src": "57919:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 3124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57919:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3125,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "57950:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "57954:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "57950:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "57919:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 3128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57975:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 3120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "57897:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57897:116:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3130,
												"nodeType": "ExpressionStatement",
												"src": "57897:116:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3132,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3115,
																"src": "58032:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "58040:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "58032:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
															"id": 3135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58043:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															},
															"value": "Price must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															}
														],
														"id": 3131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58024:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58024:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3137,
												"nodeType": "ExpressionStatement",
												"src": "58024:53:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3138,
														"name": "_erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3117,
														"src": "58092:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "58110:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "58102:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3139,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "58102:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58102:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "58092:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3154,
												"nodeType": "IfStatement",
												"src": "58088:172:0",
												"trueBody": {
													"id": 3153,
													"nodeType": "Block",
													"src": "58114:146:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3146,
																					"name": "_erc20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3117,
																					"src": "58184:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3145,
																				"name": "isAllowedERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2548,
																				"src": "58169:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																					"typeString": "function (address) view returns (bool)"
																				}
																			},
																			"id": 3147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "58169:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 3148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "58195:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "58169:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54686973204552433230206e6f7420616c6c6f77656420617320612074726164696e672063757272656e6379",
																		"id": 3150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "58201:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1",
																			"typeString": "literal_string \"This ERC20 not allowed as a trading currency\""
																		},
																		"value": "This ERC20 not allowed as a trading currency"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1",
																			"typeString": "literal_string \"This ERC20 not allowed as a trading currency\""
																		}
																	],
																	"id": 3144,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "58161:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58161:87:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3152,
															"nodeType": "ExpressionStatement",
															"src": "58161:87:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3155,
															"name": "_isTokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "58272:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3157,
														"indexExpression": {
															"id": 3156,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3113,
															"src": "58288:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "58272:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58300:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "58272:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3160,
												"nodeType": "ExpressionStatement",
												"src": "58272:32:0"
											},
											{
												"expression": {
													"id": 3171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3161,
															"name": "_tokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "58315:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
															}
														},
														"id": 3163,
														"indexExpression": {
															"id": 3162,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3113,
															"src": "58329:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "58315:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
															"typeString": "struct Marketplace.SelledNFT storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3165,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3113,
																"src": "58365:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 3166,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "58388:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "58392:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "58388:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3168,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3115,
																"src": "58413:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3169,
																"name": "_erc20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3117,
																"src": "58433:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3164,
															"name": "SelledNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "58341:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_SelledNFT_$2313_storage_ptr_$",
																"typeString": "type(struct Marketplace.SelledNFT storage pointer)"
															}
														},
														"id": 3170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58341:109:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2313_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT memory"
														}
													},
													"src": "58315:135:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
														"typeString": "struct Marketplace.SelledNFT storage ref"
													}
												},
												"id": 3172,
												"nodeType": "ExpressionStatement",
												"src": "58315:135:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3176,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58484:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58488:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58484:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3180,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "58504:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "58496:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3178,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "58496:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58496:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3182,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3113,
															"src": "58511:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3173,
															"name": "marketNft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2316,
															"src": "58461:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58471:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "58461:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58461:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3184,
												"nodeType": "ExpressionStatement",
												"src": "58461:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3185,
														"name": "_erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3117,
														"src": "58535:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "58553:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "58545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3186,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "58545:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58545:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "58535:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3207,
													"nodeType": "Block",
													"src": "58653:73:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3201,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "58686:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "58690:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "58686:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3203,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3113,
																		"src": "58698:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3204,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3115,
																		"src": "58708:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3200,
																	"name": "PutUpForSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2282,
																	"src": "58673:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 3205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58673:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3206,
															"nodeType": "EmitStatement",
															"src": "58668:46:0"
														}
													]
												},
												"id": 3208,
												"nodeType": "IfStatement",
												"src": "58531:195:0",
												"trueBody": {
													"id": 3199,
													"nodeType": "Block",
													"src": "58557:90:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3192,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "58599:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "58603:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "58599:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3194,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3113,
																		"src": "58611:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3195,
																		"name": "_erc20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3117,
																		"src": "58621:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3196,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3115,
																		"src": "58629:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3191,
																	"name": "PutUpForSaleWithERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2292,
																	"src": "58577:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,address,uint256)"
																	}
																},
																"id": 3197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58577:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3198,
															"nodeType": "EmitStatement",
															"src": "58572:63:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "7c237eea",
									"id": 3210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellNFT",
									"nameLocation": "57774:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "57800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3210,
												"src": "57792:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3115,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "57827:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3210,
												"src": "57819:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "_erc20",
												"nameLocation": "57851:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3210,
												"src": "57843:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57843:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57781:83:0"
									},
									"returnParameters": {
										"id": 3119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57886:0:0"
									},
									"scope": 3263,
									"src": "57765:968:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3261,
										"nodeType": "Block",
										"src": "58785:374:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3215,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "58799:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58803:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "58799:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3217,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "58813:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 3218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58813:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "58799:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3232,
												"nodeType": "IfStatement",
												"src": "58796:130:0",
												"trueBody": {
													"id": 3231,
													"nodeType": "Block",
													"src": "58822:104:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 3227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 3221,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "58845:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "58849:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "58845:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 3223,
																					"name": "_tokensAtSale",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2331,
																					"src": "58859:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2313_storage_$",
																						"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																					}
																				},
																				"id": 3225,
																				"indexExpression": {
																					"id": 3224,
																					"name": "_tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3212,
																					"src": "58873:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "58859:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2313_storage",
																					"typeString": "struct Marketplace.SelledNFT storage ref"
																				}
																			},
																			"id": 3226,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "58883:6:0",
																			"memberName": "seller",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2308,
																			"src": "58859:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "58845:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54686973206973206e6f7420796f7572204e4654",
																		"id": 3228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "58891:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3",
																			"typeString": "literal_string \"This is not your NFT\""
																		},
																		"value": "This is not your NFT"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3",
																			"typeString": "literal_string \"This is not your NFT\""
																		}
																	],
																	"id": 3220,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "58837:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58837:77:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3230,
															"nodeType": "ExpressionStatement",
															"src": "58837:77:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3238,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "58969:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3263",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "58961:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3236,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "58961:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58961:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3240,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58976:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58980:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58976:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3242,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3212,
															"src": "58988:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3233,
															"name": "marketNft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2316,
															"src": "58938:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58948:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "58938:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58938:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3244,
												"nodeType": "ExpressionStatement",
												"src": "58938:59:0"
											},
											{
												"expression": {
													"id": 3249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3245,
															"name": "_isTokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "59010:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3247,
														"indexExpression": {
															"id": 3246,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3212,
															"src": "59026:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "59010:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59038:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "59010:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3250,
												"nodeType": "ExpressionStatement",
												"src": "59010:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3252,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3212,
															"src": "59078:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3251,
														"name": "_clearSellToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "59062:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59062:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3254,
												"nodeType": "ExpressionStatement",
												"src": "59062:25:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3256,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "59130:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59134:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "59130:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3258,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3212,
															"src": "59142:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3255,
														"name": "WithdrawFromSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2298,
														"src": "59113:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59113:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3260,
												"nodeType": "EmitStatement",
												"src": "59108:43:0"
											}
										]
									},
									"functionSelector": "512ddcf9",
									"id": 3262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deSellNFT",
									"nameLocation": "58750:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3212,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "58768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "58760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58759:18:0"
									},
									"returnParameters": {
										"id": 3214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58785:0:0"
									},
									"scope": 3263,
									"src": "58741:418:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3264,
							"src": "48220:10942:0",
							"usedErrors": []
						}
					],
					"src": "33:59131:0"
				},
				"id": 0
			}
		}
	}
}