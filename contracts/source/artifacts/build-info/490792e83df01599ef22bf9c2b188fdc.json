{
	"id": "490792e83df01599ef22bf9c2b188fdc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"source/Marketplace.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.1;\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Permit.sol)\r\n\r\n/**\r\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    function safePermit(\r\n        IERC20Permit token,\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal {\r\n        uint256 nonceBefore = token.nonces(owner);\r\n        token.permit(owner, spender, value, deadline, v, r, s);\r\n        uint256 nonceAfter = token.nonces(owner);\r\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n\r\n\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Down, // Toward negative infinity\r\n        Up, // Toward infinity\r\n        Zero // Toward zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds up instead\r\n     * of rounding down.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\r\n     * with further edits by Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            require(denominator > prod1, \"Math: mulDiv overflow\");\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\r\n            // See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\r\n            uint256 twos = denominator & (~denominator + 1);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\r\n            // in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Contract module which allows children to implement an emergency stop\r\n * mechanism that can be triggered by an authorized account.\r\n *\r\n * This module is used through inheritance. It will make available the\r\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\r\n * the functions of your contract. Note that they will not be pausable by\r\n * simply including this module, only once the modifiers are put in place.\r\n */\r\nabstract contract Pausable is Context {\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    constructor () {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        require(!paused(), \"Pausable: paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        require(paused(), \"Pausable: not paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}\r\n\r\ncontract Marketplace is Ownable, Pausable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    event Buy(address owner, address buyer, uint256 tokenId,  uint256 price);\r\n    event BuyWithERC20(address owner, address buyer, uint256 tokenId, address erc20, uint256 price);\r\n    event PutUpForSale(address owner, uint256 tokenId, uint256 price);\r\n    event PutUpForSaleWithERC20(address owner, uint256 tokenId, address erc20, uint256 price);\r\n    event WithdrawFromSale(address owner, uint256 tokenId);\r\n    event WithdrawWei(address to, uint256 amount);\r\n    event WithdrawERC20(address to, address erc20, uint256 amount);\r\n    \r\n    struct SelledNFT {\r\n        uint256 tokenId;\r\n        address seller;\r\n        uint256 price;\r\n        address erc20;      // Если указано - продается за токены\r\n        uint256 utx;\r\n    }\r\n\r\n    IERC721 public marketNft;\r\n\r\n    uint public version = 1;\r\n\r\n    uint private _tradeFee = 0;\r\n\r\n    function isMarketPlaceContract() public pure returns (bool) {\r\n        return true;\r\n    }\r\n\r\n    mapping(uint256 => bool) private _isTokensAtSale;\r\n    mapping(uint256 => SelledNFT) private _tokensAtSale;\r\n\r\n    address[] private _allowedERC20;\r\n\r\n    uint256[] private _tokensIdsAtSale;\r\n\r\n    address private _feeReceiver;\r\n\r\n    function __addTokenToSale(uint256 _tokenId) internal  {\r\n        _tokensIdsAtSale.push(_tokenId);\r\n    }\r\n    function __delTokenForSale(uint256 _tokenId) internal  {\r\n        if (_tokensIdsAtSale[_tokensIdsAtSale.length - 1] == _tokenId) {\r\n            _tokensIdsAtSale.pop();\r\n            return;\r\n        }\r\n        bool hasItem = false;\r\n        uint256 needIndex;\r\n        for(uint256 i = 0; i < _tokensIdsAtSale.length; i++) {\r\n            if (_tokensIdsAtSale[i] == _tokenId) {\r\n                hasItem = true;\r\n                needIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        if (hasItem) {\r\n            _tokensIdsAtSale[needIndex] = _tokensIdsAtSale[_tokensIdsAtSale.length-1];\r\n            _tokensIdsAtSale.pop();\r\n        }\r\n    }\r\n\r\n    constructor(\r\n        address _nft,\r\n        address __feeReceiver,\r\n        uint __tradeFee,\r\n        address[] memory __allowedERC20\r\n    ) {\r\n        marketNft = IERC721(_nft);\r\n        _tradeFee = __tradeFee;\r\n        _allowedERC20 = __allowedERC20;\r\n        _feeReceiver = (__feeReceiver == address(0)) ? msg.sender : __feeReceiver;\r\n    }\r\n\r\n    function getFeeReceiver() public view returns(address) {\r\n        return _feeReceiver;\r\n    }\r\n    function setFeeReceiver(address _newFeeReceiver) public onlyOwner {\r\n        _feeReceiver = _newFeeReceiver;\r\n    }\r\n    function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {\r\n        _allowedERC20 = newAllowedERC20;\r\n    }\r\n    \r\n    function getAllowedERC20() public view returns(address[] memory) {\r\n        return _allowedERC20;\r\n    }\r\n\r\n    function isAllowedERC20(address erc20) public view returns (bool) {\r\n        for(uint i=0; i<_allowedERC20.length;i++) {\r\n            if (erc20 == _allowedERC20[i]) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function withdrawWei() public onlyOwner {\r\n        uint256 amount = address(this).balance;\r\n        payable(msg.sender).transfer(amount);\r\n        emit WithdrawWei(msg.sender, amount);\r\n    }\r\n\r\n    function withdrawERC20(address erc20) public onlyOwner {\r\n        IERC20 token = IERC20(erc20);\r\n        uint256 balance = token.balanceOf(address(this));\r\n        token.transfer(owner(), balance);\r\n        emit WithdrawERC20(msg.sender, erc20, balance);\r\n    }\r\n\r\n    function getTradeFee() public view returns (uint) {\r\n        return _tradeFee;\r\n    }\r\n    function setTradeFee(uint _newTradeFee) public onlyOwner {\r\n        _tradeFee = _newTradeFee;\r\n    }\r\n\r\n\r\n    function _clearSellToken(uint256 _tokenId) internal  {\r\n        _tokensAtSale[_tokenId] = SelledNFT(0, address(0), 0, address(0), 0);\r\n    }\r\n\r\n    function getMyTokensAtSale() external view returns (SelledNFT[] memory ret) {\r\n        return getUserTokensAtSale(msg.sender);\r\n    }\r\n\r\n    function getUserTokensAtSale(address seller)\r\n        public view\r\n        returns (SelledNFT[] memory ret)\r\n    {\r\n        uint256 _counter = 0;\r\n        for (uint256 i = 0; i < _tokensIdsAtSale.length; i++) {\r\n            if (_tokensAtSale[_tokensIdsAtSale[i]].seller == seller) _counter++;\r\n        }\r\n        SelledNFT[] memory _ret = new SelledNFT[](_counter);\r\n        _counter = 0;\r\n\r\n        for (uint256 i = 0; i < _tokensIdsAtSale.length; i++) {\r\n            if (_tokensAtSale[_tokensIdsAtSale[i]].seller == seller) {\r\n                SelledNFT memory _pushItem = SelledNFT(\r\n                    _tokensIdsAtSale[i],\r\n                    _tokensAtSale[_tokensIdsAtSale[i]].seller,\r\n                    _tokensAtSale[_tokensIdsAtSale[i]].price,\r\n                    _tokensAtSale[_tokensIdsAtSale[i]].erc20,\r\n                    _tokensAtSale[_tokensIdsAtSale[i]].utx\r\n                );\r\n                _ret[_counter] = _pushItem;\r\n                _counter++;\r\n            }\r\n        }\r\n\r\n        return _ret;\r\n    }\r\n\r\n    function getTokensAtSaleCount() public view returns (uint256) {\r\n        return _tokensIdsAtSale.length;\r\n    }\r\n\r\n    function getTokensAtSale(uint256 offset, uint256 limit)\r\n        external view\r\n        returns (SelledNFT[] memory ret)\r\n    {\r\n        uint256 iStart = offset;\r\n        uint256 iEnd = iStart + limit;\r\n        if (iStart >= _tokensIdsAtSale.length) return new SelledNFT[](0);\r\n        if (offset == 0 && limit == 0) iEnd = _tokensIdsAtSale.length;\r\n        if (iEnd > _tokensIdsAtSale.length) iEnd = _tokensIdsAtSale.length;\r\n        \r\n        uint256 count = iEnd - iStart;\r\n        uint256 ii = 0;\r\n        SelledNFT[] memory _ret = new SelledNFT[](count);\r\n        for (uint256 i = iStart; i < iEnd; i++) {\r\n            uint256 _tokenId = _tokensIdsAtSale[i];\r\n            SelledNFT memory _pushItem = SelledNFT(\r\n                _tokenId,\r\n                _tokensAtSale[_tokenId].seller,\r\n                _tokensAtSale[_tokenId].price,\r\n                _tokensAtSale[_tokenId].erc20,\r\n                _tokensAtSale[_tokenId].utx\r\n            );\r\n            _ret[ii] = _pushItem;\r\n            ii++;\r\n        }\r\n        return _ret;\r\n    }\r\n\r\n    function buyNFTbyERC20(uint _tokenId)\r\n        public\r\n        whenNotPaused\r\n    {\r\n        require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\");\r\n        require(_tokensAtSale[_tokenId].erc20 != address(0), \"This token selled by Native coin\");\r\n\r\n        IERC20 payToken = IERC20(_tokensAtSale[_tokenId].erc20);\r\n        uint256 buyerBalance = payToken.balanceOf(msg.sender);\r\n        require(buyerBalance >= _tokensAtSale[_tokenId].price, \"You do not have enough tokens on your balance to pay\");\r\n        uint256 buyerAllowance = payToken.allowance(msg.sender, address(this));\r\n        require(buyerAllowance >= _tokensAtSale[_tokenId].price, \"You did not allow the contract to send the purchase amount\");\r\n        \r\n\r\n        uint256 amount = _tokensAtSale[_tokenId].price;\r\n        uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee);\r\n        if (_tokensAtSale[_tokenId].seller == owner()) feeAmount = 0;\r\n        uint256 amountWithFee = SafeMath.sub(amount, feeAmount);\r\n\r\n        payToken.safeTransferFrom(\r\n            address(msg.sender),\r\n            address(_tokensAtSale[_tokenId].seller),\r\n            amountWithFee\r\n        );\r\n        if (feeAmount > 0) {\r\n            payToken.safeTransferFrom(\r\n                address(msg.sender),\r\n                address(_feeReceiver),\r\n                feeAmount\r\n            );\r\n        }\r\n        marketNft.transferFrom(address(this), msg.sender, _tokenId);\r\n        _isTokensAtSale[_tokenId] = false;\r\n        _clearSellToken(_tokenId);\r\n        __delTokenForSale(_tokenId);\r\n\r\n        emit BuyWithERC20(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].erc20, _tokensAtSale[_tokenId].price);\r\n    }\r\n\r\n\r\n    function buyNFT(uint256 _tokenId)\r\n        public\r\n        payable\r\n        whenNotPaused\r\n    {\r\n        // check - token is on sale\r\n        require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\");\r\n        // check - price\r\n        require(msg.value >= _tokensAtSale[_tokenId].price, \"You have not paid enough for this item\");\r\n        // check this is not sell by ERC20\r\n        require(_tokensAtSale[_tokenId].erc20 == address(0), \"This token selled by ERC20\");\r\n        \r\n        uint256 amount = msg.value;\r\n        uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee);\r\n        if (_tokensAtSale[_tokenId].seller == owner()) feeAmount = 0;\r\n        uint256 amountWithFee = SafeMath.sub(amount, feeAmount);\r\n\r\n        payable(_tokensAtSale[_tokenId].seller).transfer(amountWithFee);\r\n        if (feeAmount > 0) {\r\n            payable(_feeReceiver).transfer(feeAmount);\r\n        }\r\n        \r\n        marketNft.transferFrom(address(this), msg.sender, _tokenId);\r\n        _isTokensAtSale[_tokenId] = false;\r\n\r\n        emit Buy(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].price);\r\n\r\n        _clearSellToken(_tokenId);\r\n        __delTokenForSale(_tokenId);\r\n    }\r\n\r\n    function sellNFT(\r\n        uint256 _tokenId,\r\n        uint256 price,\r\n        address _erc20\r\n    )\r\n        public\r\n        whenNotPaused\r\n    {\r\n        require(\r\n            marketNft.ownerOf(_tokenId) == msg.sender,\r\n            \"You don't own this token!\"\r\n        );\r\n        require(price > 0, \"Price must be greater than zero\");\r\n        if (_erc20 != address(0)) {\r\n            // Sell with ERC20\r\n            require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\");\r\n        }\r\n\r\n        _isTokensAtSale[_tokenId] = true;\r\n        _tokensAtSale[_tokenId] = SelledNFT(\r\n            _tokenId,\r\n            msg.sender,\r\n            price,\r\n            _erc20,\r\n            block.timestamp\r\n        );\r\n        marketNft.transferFrom(msg.sender, address(this), _tokenId);\r\n        __addTokenToSale(_tokenId);\r\n\r\n        if (_erc20 == address(0)) {\r\n            emit PutUpForSaleWithERC20(msg.sender, _tokenId, _erc20, price);\r\n        } else {\r\n            emit PutUpForSale(msg.sender, _tokenId, price);\r\n        }\r\n    }\r\n\r\n    function deSellNFT(uint256 _tokenId) public {\r\n        if(msg.sender != owner()) {\r\n            require(msg.sender == _tokensAtSale[_tokenId].seller, \"This is not your NFT\");\r\n        }\r\n\r\n        marketNft.transferFrom(address(this), _tokensAtSale[_tokenId].seller, _tokenId);\r\n\r\n        _isTokensAtSale[_tokenId] = false;        \r\n        _clearSellToken(_tokenId);\r\n        __delTokenForSale(_tokenId);\r\n        \r\n        emit WithdrawFromSale(_tokensAtSale[_tokenId].seller, _tokenId);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"source/Marketplace.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":38807:48212  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":38807:48212  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209010b7a652b14d1d7aadf2409d7394c3a715843221bf0214f7f5af5c339d7d3164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209010b7a652b14d1d7aadf2409d7394c3a715843221bf0214f7f5af5c339d7d3164736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 LT 0xB7 0xA6 MSTORE 0xB1 0x4D SAR PUSH27 0xADF2409D7394C3A715843221BF0214F7F5AF5C339D7D3164736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "38807:9405:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;38807:9405:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209010b7a652b14d1d7aadf2409d7394c3a715843221bf0214f7f5af5c339d7d3164736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 LT 0xB7 0xA6 MSTORE 0xB1 0x4D SAR PUSH27 0xADF2409D7394C3A715843221BF0214F7F5AF5C339D7D3164736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "38807:9405:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38807,
									"end": 48212,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209010b7a652b14d1d7aadf2409d7394c3a715843221bf0214f7f5af5c339d7d3164736f6c63430008120033",
									".code": [
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 48212,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x803c9d36144cb3ddaefdd1c9b71ef2f4e517804cec7119183be39e7845923fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4eff55500329671498d36c368729bce57e322c84be19ab025ee137480b2c3d\",\"dweb:/ipfs/QmejZVHTvvjSyV32FbFNYnki4dtBoLJnM23c9ESdrjoiZD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x803c9d36144cb3ddaefdd1c9b71ef2f4e517804cec7119183be39e7845923fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4eff55500329671498d36c368729bce57e322c84be19ab025ee137480b2c3d\",\"dweb:/ipfs/QmejZVHTvvjSyV32FbFNYnki4dtBoLJnM23c9ESdrjoiZD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x803c9d36144cb3ddaefdd1c9b71ef2f4e517804cec7119183be39e7845923fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4eff55500329671498d36c368729bce57e322c84be19ab025ee137480b2c3d\",\"dweb:/ipfs/QmejZVHTvvjSyV32FbFNYnki4dtBoLJnM23c9ESdrjoiZD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x803c9d36144cb3ddaefdd1c9b71ef2f4e517804cec7119183be39e7845923fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4eff55500329671498d36c368729bce57e322c84be19ab025ee137480b2c3d\",\"dweb:/ipfs/QmejZVHTvvjSyV32FbFNYnki4dtBoLJnM23c9ESdrjoiZD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x803c9d36144cb3ddaefdd1c9b71ef2f4e517804cec7119183be39e7845923fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4eff55500329671498d36c368729bce57e322c84be19ab025ee137480b2c3d\",\"dweb:/ipfs/QmejZVHTvvjSyV32FbFNYnki4dtBoLJnM23c9ESdrjoiZD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x803c9d36144cb3ddaefdd1c9b71ef2f4e517804cec7119183be39e7845923fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4eff55500329671498d36c368729bce57e322c84be19ab025ee137480b2c3d\",\"dweb:/ipfs/QmejZVHTvvjSyV32FbFNYnki4dtBoLJnM23c9ESdrjoiZD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Marketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nft",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "__feeReceiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "__tradeFee",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "__allowedERC20",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Buy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "BuyWithERC20",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "PutUpForSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "PutUpForSaleWithERC20",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawERC20",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "WithdrawFromSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawWei",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNFT",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNFTbyERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "deSellNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllowedERC20",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFeeReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMyTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "utx",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "ret",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "offset",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "getTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "utx",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "ret",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokensAtSaleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTradeFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								}
							],
							"name": "getUserTokensAtSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "utx",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.SelledNFT[]",
									"name": "ret",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								}
							],
							"name": "isAllowedERC20",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isMarketPlaceContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketNft",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_erc20",
									"type": "address"
								}
							],
							"name": "sellNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "newAllowedERC20",
									"type": "address[]"
								}
							],
							"name": "setAllowedERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newFeeReceiver",
									"type": "address"
								}
							],
							"name": "setFeeReceiver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newTradeFee",
									"type": "uint256"
								}
							],
							"name": "setTradeFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc20",
									"type": "address"
								}
							],
							"name": "withdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawWei",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":50386:61219  contract Marketplace is Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"source/Marketplace.sol\":51318:51319  1 */\n  0x01\n    /* \"source/Marketplace.sol\":51296:51319  uint public version = 1 */\n  0x02\n  sstore\n    /* \"source/Marketplace.sol\":51353:51354  0 */\n  0x00\n    /* \"source/Marketplace.sol\":51328:51354  uint private _tradeFee = 0 */\n  0x03\n  sstore\n    /* \"source/Marketplace.sol\":52470:52814  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"source/Marketplace.sol\":1740:1772  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"source/Marketplace.sol\":736:746  msg.sender */\n  caller\n    /* \"source/Marketplace.sol\":1740:1758  _transferOwnership */\n  tag_11\n    /* \"source/Marketplace.sol\":1740:1772  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"source/Marketplace.sol\":49087:49092  false */\n  0x00\n    /* \"source/Marketplace.sol\":49077:49092  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n  0x01\n    /* \"source/Marketplace.sol\":52623:52648  marketNft = IERC721(_nft) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup7\n  and\n  or\n  swap1\n  sstore\n    /* \"source/Marketplace.sol\":52659:52668  _tradeFee */\n  0x03\n    /* \"source/Marketplace.sol\":52659:52681  _tradeFee = __tradeFee */\n  dup3\n  swap1\n  sstore\n    /* \"source/Marketplace.sol\":52692:52722  _allowedERC20 = __allowedERC20 */\n  dup1\n  mload\n  tag_14\n  swap1\n    /* \"source/Marketplace.sol\":52692:52705  _allowedERC20 */\n  0x06\n  swap1\n    /* \"source/Marketplace.sol\":52692:52722  _allowedERC20 = __allowedERC20 */\n  0x20\n  dup5\n  add\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/Marketplace.sol\":52749:52776  __feeReceiver == address(0) */\n  dup4\n  and\n  iszero\n    /* \"source/Marketplace.sol\":52748:52806  (__feeReceiver == address(0)) ? msg.sender : __feeReceiver */\n  tag_16\n  jumpi\n    /* \"source/Marketplace.sol\":52793:52806  __feeReceiver */\n  dup3\n    /* \"source/Marketplace.sol\":52748:52806  (__feeReceiver == address(0)) ? msg.sender : __feeReceiver */\n  jump(tag_17)\ntag_16:\n    /* \"source/Marketplace.sol\":52780:52790  msg.sender */\n  caller\n    /* \"source/Marketplace.sol\":52748:52806  (__feeReceiver == address(0)) ? msg.sender : __feeReceiver */\ntag_17:\n    /* \"source/Marketplace.sol\":52733:52745  _feeReceiver */\n  0x08\n    /* \"source/Marketplace.sol\":52733:52806  _feeReceiver = (__feeReceiver == address(0)) ? msg.sender : __feeReceiver */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"source/Marketplace.sol\":50386:61219  contract Marketplace is Ownable, Pausable {... */\n  tag_30\n  swap3\n  pop\n  pop\n  pop\n  jump\n    /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n  0x00\n    /* \"source/Marketplace.sol\":3379:3385  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/Marketplace.sol\":3396:3413  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"source/Marketplace.sol\":3379:3385  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n  swap1\n    /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"source/Marketplace.sol\":3349:3477  {... */\n  pop\n    /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"source/Marketplace.sol\":50386:61219  contract Marketplace is Ownable, Pausable {... */\ntag_15:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_22:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  dup3\n  mload\n  dup3\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  or\n  dup3\n  sstore\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  0x01\n  swap1\n  swap2\n  add\n  swap1\n  jump(tag_22)\ntag_23:\n  pop\n  tag_24\n  swap3\n  swap2\n  pop\n  tag_25\n  jump\t// in\ntag_24:\n  pop\n  swap1\n  jump\t// out\ntag_25:\ntag_26:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_24\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_26)\n    /* \"#utility.yul\":14:191   */\ntag_28:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_32:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_29:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:1689   */\ntag_3:\n    /* \"#utility.yul\":450:456   */\n  0x00\n    /* \"#utility.yul\":458:464   */\n  dup1\n    /* \"#utility.yul\":466:472   */\n  0x00\n    /* \"#utility.yul\":474:480   */\n  dup1\n    /* \"#utility.yul\":527:530   */\n  0x80\n    /* \"#utility.yul\":515:524   */\n  dup6\n    /* \"#utility.yul\":506:513   */\n  dup8\n    /* \"#utility.yul\":502:525   */\n  sub\n    /* \"#utility.yul\":498:531   */\n  slt\n    /* \"#utility.yul\":495:548   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":544:545   */\n  0x00\n    /* \"#utility.yul\":541:542   */\n  dup1\n    /* \"#utility.yul\":534:546   */\n  revert\n    /* \"#utility.yul\":495:548   */\ntag_35:\n    /* \"#utility.yul\":567:607   */\n  tag_36\n    /* \"#utility.yul\":597:606   */\n  dup6\n    /* \"#utility.yul\":567:607   */\n  tag_28\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":557:607   */\n  swap4\n  pop\n    /* \"#utility.yul\":626:628   */\n  0x20\n    /* \"#utility.yul\":647:696   */\n  tag_37\n    /* \"#utility.yul\":692:694   */\n  dup2\n    /* \"#utility.yul\":681:690   */\n  dup8\n    /* \"#utility.yul\":677:695   */\n  add\n    /* \"#utility.yul\":647:696   */\n  tag_28\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":736:738   */\n  0x40\n    /* \"#utility.yul\":721:739   */\n  dup8\n  add\n    /* \"#utility.yul\":715:740   */\n  mload\n    /* \"#utility.yul\":784:786   */\n  0x60\n    /* \"#utility.yul\":769:787   */\n  dup9\n  add\n    /* \"#utility.yul\":763:788   */\n  mload\n    /* \"#utility.yul\":637:696   */\n  swap2\n  swap6\n  pop\n    /* \"#utility.yul\":715:740   */\n  swap4\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":837:851   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":834:868   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":864:865   */\n  0x00\n    /* \"#utility.yul\":861:862   */\n  dup1\n    /* \"#utility.yul\":854:866   */\n  revert\n    /* \"#utility.yul\":834:868   */\ntag_38:\n    /* \"#utility.yul\":902:908   */\n  dup2\n    /* \"#utility.yul\":891:900   */\n  dup9\n    /* \"#utility.yul\":887:909   */\n  add\n    /* \"#utility.yul\":877:909   */\n  swap2\n  pop\n    /* \"#utility.yul\":947:954   */\n  dup9\n    /* \"#utility.yul\":940:944   */\n  0x1f\n    /* \"#utility.yul\":936:938   */\n  dup4\n    /* \"#utility.yul\":932:945   */\n  add\n    /* \"#utility.yul\":928:955   */\n  slt\n    /* \"#utility.yul\":918:973   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":969:970   */\n  0x00\n    /* \"#utility.yul\":966:967   */\n  dup1\n    /* \"#utility.yul\":959:971   */\n  revert\n    /* \"#utility.yul\":918:973   */\ntag_39:\n    /* \"#utility.yul\":998:1000   */\n  dup2\n    /* \"#utility.yul\":992:1001   */\n  mload\n    /* \"#utility.yul\":1020:1022   */\n  dup2\n    /* \"#utility.yul\":1016:1018   */\n  dup2\n    /* \"#utility.yul\":1013:1023   */\n  gt\n    /* \"#utility.yul\":1010:1046   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1026:1044   */\n  tag_41\n  tag_29\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1072:1074   */\n  dup1\n    /* \"#utility.yul\":1069:1070   */\n  0x05\n    /* \"#utility.yul\":1065:1075   */\n  shl\n    /* \"#utility.yul\":1104:1106   */\n  0x40\n    /* \"#utility.yul\":1098:1107   */\n  mload\n    /* \"#utility.yul\":1167:1169   */\n  0x1f\n    /* \"#utility.yul\":1163:1170   */\n  not\n    /* \"#utility.yul\":1158:1160   */\n  0x3f\n    /* \"#utility.yul\":1154:1156   */\n  dup4\n    /* \"#utility.yul\":1150:1161   */\n  add\n    /* \"#utility.yul\":1146:1171   */\n  and\n    /* \"#utility.yul\":1138:1144   */\n  dup2\n    /* \"#utility.yul\":1134:1172   */\n  add\n    /* \"#utility.yul\":1222:1228   */\n  dup2\n    /* \"#utility.yul\":1210:1220   */\n  dup2\n    /* \"#utility.yul\":1207:1229   */\n  lt\n    /* \"#utility.yul\":1202:1204   */\n  dup6\n    /* \"#utility.yul\":1190:1200   */\n  dup3\n    /* \"#utility.yul\":1187:1205   */\n  gt\n    /* \"#utility.yul\":1184:1230   */\n  or\n    /* \"#utility.yul\":1181:1253   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1233:1251   */\n  tag_43\n  tag_29\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1269:1271   */\n  0x40\n    /* \"#utility.yul\":1262:1284   */\n  mstore\n    /* \"#utility.yul\":1319:1337   */\n  swap2\n  dup3\n  mstore\n    /* \"#utility.yul\":1353:1368   */\n  dup5\n  dup3\n  add\n  swap3\n  pop\n    /* \"#utility.yul\":1395:1406   */\n  dup4\n  dup2\n  add\n    /* \"#utility.yul\":1391:1411   */\n  dup6\n  add\n  swap2\n    /* \"#utility.yul\":1423:1442   */\n  dup12\n  dup4\n  gt\n    /* \"#utility.yul\":1420:1459   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1455:1456   */\n  0x00\n    /* \"#utility.yul\":1452:1453   */\n  dup1\n    /* \"#utility.yul\":1445:1457   */\n  revert\n    /* \"#utility.yul\":1420:1459   */\ntag_44:\n    /* \"#utility.yul\":1479:1490   */\n  swap4\n  dup6\n  add\n  swap4\n    /* \"#utility.yul\":1499:1658   */\ntag_45:\n    /* \"#utility.yul\":1515:1521   */\n  dup3\n    /* \"#utility.yul\":1510:1513   */\n  dup6\n    /* \"#utility.yul\":1507:1522   */\n  lt\n    /* \"#utility.yul\":1499:1658   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1581:1615   */\n  tag_48\n    /* \"#utility.yul\":1611:1614   */\n  dup6\n    /* \"#utility.yul\":1581:1615   */\n  tag_28\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1569:1616   */\n  dup5\n  mstore\n    /* \"#utility.yul\":1532:1544   */\n  swap4\n  dup6\n  add\n  swap4\n    /* \"#utility.yul\":1636:1648   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":1499:1658   */\n  jump(tag_45)\ntag_47:\n    /* \"#utility.yul\":328:1689   */\n  swap9\n  swap12\n  swap8\n  swap11\n  pop\n  swap6\n  swap9\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\ntag_30:\n    /* \"source/Marketplace.sol\":50386:61219  contract Marketplace is Ownable, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":50386:61219  contract Marketplace is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xc8f77899\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xc8f77899\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe8a35392\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe9e4e160\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xefdcd974\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf4f3b200\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x785fa7ce\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7c237eea\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x952977f5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa096c5a2\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x5211ac2e\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x5211ac2e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x527f2902\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5b87f0f2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x69c57352\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x047a5d43\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x08cfbc19\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x10603023\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19c8c1c5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x512ddcf9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x51ed8288\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"source/Marketplace.sol\":56681:58402  function buyNFTbyERC20(uint _tokenId)... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"source/Marketplace.sol\":51263:51287  IERC721 public marketNft */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      sload(0x01)\n      tag_35\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_35:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":378:410   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":360:411   */\n      dup2\n      mstore\n        /* \"#utility.yul\":348:350   */\n      0x20\n        /* \"#utility.yul\":333:351   */\n      add\n        /* \"source/Marketplace.sol\":51263:51287  IERC721 public marketNft */\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"source/Marketplace.sol\":54077:54177  function setTradeFee(uint _newTradeFee) public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"source/Marketplace.sol\":54476:55503  function getUserTokensAtSale(address seller)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"source/Marketplace.sol\":60720:61216  function deSellNFT(uint256 _tokenId) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_30\n      tag_52\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"source/Marketplace.sol\":58412:59644  function buyNFT(uint256 _tokenId)... */\n    tag_7:\n      tag_30\n      tag_55\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"source/Marketplace.sol\":53518:53709  function withdrawWei() public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_30\n      tag_59\n      jump\t// in\n        /* \"source/Marketplace.sol\":51363:51453  function isMarketPlaceContract() public pure returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n        /* \"source/Marketplace.sol\":51441:51445  true */\n      0x01\n        /* \"source/Marketplace.sol\":51363:51453  function isMarketPlaceContract() public pure returns (bool) {... */\n    tag_61:\n      mload(0x40)\n        /* \"#utility.yul\":2231:2245   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2224:2246   */\n      iszero\n        /* \"#utility.yul\":2206:2247   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2194:2196   */\n      0x20\n        /* \"#utility.yul\":2179:2197   */\n      add\n        /* \"source/Marketplace.sol\":51363:51453  function isMarketPlaceContract() public pure returns (bool) {... */\n      tag_37\n        /* \"#utility.yul\":2066:2253   */\n      jump\n        /* \"source/Marketplace.sol\":51296:51319  uint public version = 1 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      sload(0x02)\n      dup2\n      jump\n    tag_66:\n      mload(0x40)\n        /* \"#utility.yul\":2404:2429   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2392:2394   */\n      0x20\n        /* \"#utility.yul\":2377:2395   */\n      add\n        /* \"source/Marketplace.sol\":51296:51319  uint public version = 1 */\n      tag_37\n        /* \"#utility.yul\":2258:2435   */\n      jump\n        /* \"source/Marketplace.sol\":55630:56673  function getTokensAtSale(uint256 offset, uint256 limit)... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_44\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"source/Marketplace.sol\":49200:49286  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n        /* \"source/Marketplace.sol\":49247:49251  bool */\n      0x00\n        /* \"source/Marketplace.sol\":49271:49278  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"source/Marketplace.sol\":49200:49286  function paused() public view virtual returns (bool) {... */\n      jump(tag_61)\n        /* \"source/Marketplace.sol\":53180:53284  function getAllowedERC20() public view returns(address[] memory) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n        /* \"source/Marketplace.sol\":2667:2770  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_30\n      tag_87\n      jump\t// in\n        /* \"source/Marketplace.sol\":53292:53510  function isAllowedERC20(address erc20) public view returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_61\n      tag_90\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"source/Marketplace.sol\":59652:60712  function sellNFT(... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_30\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump(tag_35)\n        /* \"source/Marketplace.sol\":53986:54071  function getTradeFee() public view returns (uint) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n        /* \"source/Marketplace.sol\":54054:54063  _tradeFee */\n      sload(0x03)\n        /* \"source/Marketplace.sol\":53986:54071  function getTradeFee() public view returns (uint) {... */\n      jump(tag_66)\n        /* \"source/Marketplace.sol\":54335:54468  function getMyTokensAtSale() external view returns (SelledNFT[] memory ret) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_44\n      tag_109\n      jump\t// in\n        /* \"source/Marketplace.sol\":55511:55622  function getTokensAtSaleCount() public view returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n        /* \"source/Marketplace.sol\":55591:55607  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":55591:55614  _tokensIdsAtSale.length */\n      sload\n        /* \"source/Marketplace.sol\":55511:55622  function getTokensAtSaleCount() public view returns (uint256) {... */\n      jump(tag_66)\n        /* \"source/Marketplace.sol\":52822:52915  function getFeeReceiver() public view returns(address) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n        /* \"source/Marketplace.sol\":52895:52907  _feeReceiver */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"source/Marketplace.sol\":52822:52915  function getFeeReceiver() public view returns(address) {... */\n      jump(tag_35)\n        /* \"source/Marketplace.sol\":53042:53168  function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_30\n      tag_121\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n        /* \"source/Marketplace.sol\":52921:53036  function setFeeReceiver(address _newFeeReceiver) public onlyOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_30\n      tag_126\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"source/Marketplace.sol\":2925:3126  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_30\n      tag_130\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n        /* \"source/Marketplace.sol\":53717:53978  function withdrawERC20(address erc20) public onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_30\n      tag_134\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n        /* \"source/Marketplace.sol\":56681:58402  function buyNFTbyERC20(uint _tokenId)... */\n    tag_33:\n        /* \"source/Marketplace.sol\":49247:49251  bool */\n      0x00\n        /* \"source/Marketplace.sol\":49271:49278  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"source/Marketplace.sol\":49525:49534  !paused() */\n      iszero\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"source/Marketplace.sol\":56782:56807  _isTokensAtSale[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":56782:56797  _isTokensAtSale */\n      0x04\n        /* \"source/Marketplace.sol\":56782:56807  _isTokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/Marketplace.sol\":56782:56815  _isTokensAtSale[_tokenId] == true */\n      iszero\n      iszero\n        /* \"source/Marketplace.sol\":56782:56807  _isTokensAtSale[_tokenId] */\n      0x01\n        /* \"source/Marketplace.sol\":56782:56815  _isTokensAtSale[_tokenId] == true */\n      eq\n        /* \"source/Marketplace.sol\":56774:56844  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5757:5759   */\n      0x20\n        /* \"source/Marketplace.sol\":56774:56844  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5739:5760   */\n      mstore\n        /* \"#utility.yul\":5796:5798   */\n      0x18\n        /* \"#utility.yul\":5776:5794   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5769:5799   */\n      mstore\n      shl(0x40, 0x54686973204e4654206973206e6f7420666f722073616c65)\n        /* \"#utility.yul\":5815:5833   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5808:5862   */\n      mstore\n        /* \"#utility.yul\":5879:5897   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":56774:56844  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n      tag_139\n        /* \"#utility.yul\":5555:5903   */\n      jump\n        /* \"source/Marketplace.sol\":56774:56844  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n    tag_142:\n        /* \"source/Marketplace.sol\":56904:56905  0 */\n      0x00\n        /* \"source/Marketplace.sol\":56863:56886  _tokensAtSale[_tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":56863:56876  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":56863:56886  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":56863:56892  _tokensAtSale[_tokenId].erc20 */\n      0x03\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":56855:56943  require(_tokensAtSale[_tokenId].erc20 != address(0), \"This token selled by Native coin\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6110:6112   */\n      0x20\n        /* \"source/Marketplace.sol\":56855:56943  require(_tokensAtSale[_tokenId].erc20 != address(0), \"This token selled by Native coin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6092:6113   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6129:6147   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6122:6152   */\n      mstore\n        /* \"#utility.yul\":6188:6222   */\n      0x5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e\n        /* \"#utility.yul\":6168:6186   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6161:6223   */\n      mstore\n        /* \"#utility.yul\":6240:6258   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":56855:56943  require(_tokensAtSale[_tokenId].erc20 != address(0), \"This token selled by Native coin\") */\n      tag_139\n        /* \"#utility.yul\":5908:6264   */\n      jump\n        /* \"source/Marketplace.sol\":56855:56943  require(_tokensAtSale[_tokenId].erc20 != address(0), \"This token selled by Native coin\") */\n    tag_145:\n        /* \"source/Marketplace.sol\":56956:56971  IERC20 payToken */\n      0x00\n        /* \"source/Marketplace.sol\":56981:57004  _tokensAtSale[_tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":56981:56994  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":56981:57004  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"source/Marketplace.sol\":56981:57010  _tokensAtSale[_tokenId].erc20 */\n      0x03\n      add\n      sload\n        /* \"source/Marketplace.sol\":57045:57075  payToken.balanceOf(msg.sender) */\n      swap1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":57064:57074  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":57045:57075  payToken.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":360:411   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":56981:57010  _tokensAtSale[_tokenId].erc20 */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"source/Marketplace.sol\":56956:56971  IERC20 payToken */\n      swap1\n        /* \"source/Marketplace.sol\":56981:57010  _tokensAtSale[_tokenId].erc20 */\n      dup3\n      swap1\n        /* \"source/Marketplace.sol\":57045:57063  payToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":333:351   */\n      0x24\n      add\n        /* \"source/Marketplace.sol\":57045:57075  payToken.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"source/Marketplace.sol\":57110:57133  _tokensAtSale[_tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":57110:57123  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":57110:57133  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":57110:57139  _tokensAtSale[_tokenId].price */\n      0x02\n      add\n      sload\n        /* \"source/Marketplace.sol\":57022:57075  uint256 buyerBalance = payToken.balanceOf(msg.sender) */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":57094:57139  buyerBalance >= _tokensAtSale[_tokenId].price */\n      dup2\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":57086:57196  require(buyerBalance >= _tokensAtSale[_tokenId].price, \"You do not have enough tokens on your balance to pay\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6660:6662   */\n      0x20\n        /* \"source/Marketplace.sol\":57086:57196  require(buyerBalance >= _tokensAtSale[_tokenId].price, \"You do not have enough tokens on your balance to pay\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6642:6663   */\n      mstore\n        /* \"#utility.yul\":6699:6701   */\n      0x34\n        /* \"#utility.yul\":6679:6697   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6672:6702   */\n      mstore\n        /* \"#utility.yul\":6738:6772   */\n      0x596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e\n        /* \"#utility.yul\":6718:6736   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6711:6773   */\n      mstore\n      shl(0x60, 0x20796f75722062616c616e636520746f20706179)\n        /* \"#utility.yul\":6789:6807   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6782:6832   */\n      mstore\n        /* \"#utility.yul\":6849:6868   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":57086:57196  require(buyerBalance >= _tokensAtSale[_tokenId].price, \"You do not have enough tokens on your balance to pay\") */\n      tag_139\n        /* \"#utility.yul\":6458:6874   */\n      jump\n        /* \"source/Marketplace.sol\":57086:57196  require(buyerBalance >= _tokensAtSale[_tokenId].price, \"You do not have enough tokens on your balance to pay\") */\n    tag_153:\n        /* \"source/Marketplace.sol\":57232:57277  payToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":57251:57261  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":57232:57277  payToken.allowance(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7091:7125   */\n      mstore\n        /* \"source/Marketplace.sol\":57271:57275  this */\n      address\n        /* \"#utility.yul\":7141:7159   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7134:7177   */\n      mstore\n        /* \"source/Marketplace.sol\":57207:57229  uint256 buyerAllowance */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57232:57250  payToken.allowance */\n      dup5\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":7026:7044   */\n      0x44\n      add\n        /* \"source/Marketplace.sol\":57232:57277  payToken.allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_160:\n        /* \"source/Marketplace.sol\":57314:57337  _tokensAtSale[_tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":57314:57327  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":57314:57337  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":57314:57343  _tokensAtSale[_tokenId].price */\n      0x02\n      add\n      sload\n        /* \"source/Marketplace.sol\":57207:57277  uint256 buyerAllowance = payToken.allowance(msg.sender, address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":57296:57343  buyerAllowance >= _tokensAtSale[_tokenId].price */\n      dup2\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":57288:57406  require(buyerAllowance >= _tokensAtSale[_tokenId].price, \"You did not allow the contract to send the purchase amount\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7390:7392   */\n      0x20\n        /* \"source/Marketplace.sol\":57288:57406  require(buyerAllowance >= _tokensAtSale[_tokenId].price, \"You did not allow the contract to send the purchase amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7372:7393   */\n      mstore\n        /* \"#utility.yul\":7429:7431   */\n      0x3a\n        /* \"#utility.yul\":7409:7427   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7402:7432   */\n      mstore\n        /* \"#utility.yul\":7468:7502   */\n      0x596f7520646964206e6f7420616c6c6f772074686520636f6e74726163742074\n        /* \"#utility.yul\":7448:7466   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7441:7503   */\n      mstore\n        /* \"#utility.yul\":7539:7567   */\n      0x6f2073656e642074686520707572636861736520616d6f756e74000000000000\n        /* \"#utility.yul\":7519:7537   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7512:7568   */\n      mstore\n        /* \"#utility.yul\":7585:7604   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":57288:57406  require(buyerAllowance >= _tokensAtSale[_tokenId].price, \"You did not allow the contract to send the purchase amount\") */\n      tag_139\n        /* \"#utility.yul\":7188:7610   */\n      jump\n        /* \"source/Marketplace.sol\":57288:57406  require(buyerAllowance >= _tokensAtSale[_tokenId].price, \"You did not allow the contract to send the purchase amount\") */\n    tag_161:\n        /* \"source/Marketplace.sol\":57429:57443  uint256 amount */\n      0x00\n        /* \"source/Marketplace.sol\":57446:57469  _tokensAtSale[_tokenId] */\n      dup5\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":57446:57459  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":57446:57469  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Marketplace.sol\":57446:57475  _tokensAtSale[_tokenId].price */\n      0x02\n      add\n      sload\n      swap1\n        /* \"source/Marketplace.sol\":57506:57556  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      tag_164\n        /* \"source/Marketplace.sol\":57519:57544  SafeMath.div(amount, 100) */\n      tag_165\n        /* \"source/Marketplace.sol\":57446:57475  _tokensAtSale[_tokenId].price */\n      dup4\n        /* \"source/Marketplace.sol\":57540:57543  100 */\n      0x64\n        /* \"source/Marketplace.sol\":57519:57531  SafeMath.div */\n      tag_166\n        /* \"source/Marketplace.sol\":57519:57544  SafeMath.div(amount, 100) */\n      jump\t// in\n    tag_165:\n        /* \"source/Marketplace.sol\":57546:57555  _tradeFee */\n      sload(0x03)\n        /* \"source/Marketplace.sol\":57506:57518  SafeMath.mul */\n      tag_167\n        /* \"source/Marketplace.sol\":57506:57556  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      jump\t// in\n    tag_164:\n        /* \"source/Marketplace.sol\":57486:57556  uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":57605:57612  owner() */\n      tag_168\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"source/Marketplace.sol\":57605:57612  owner() */\n    tag_168:\n        /* \"source/Marketplace.sol\":57571:57594  _tokensAtSale[_tokenId] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":57571:57584  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":57571:57594  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":57571:57601  _tokensAtSale[_tokenId].seller */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57571:57612  _tokensAtSale[_tokenId].seller == owner() */\n      swap2\n      dup3\n      and\n        /* \"source/Marketplace.sol\":57571:57601  _tokensAtSale[_tokenId].seller */\n      swap2\n      and\n        /* \"source/Marketplace.sol\":57571:57612  _tokensAtSale[_tokenId].seller == owner() */\n      sub\n        /* \"source/Marketplace.sol\":57567:57627  if (_tokensAtSale[_tokenId].seller == owner()) feeAmount = 0 */\n      tag_169\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":57626:57627  0 */\n      0x00\n        /* \"source/Marketplace.sol\":57567:57627  if (_tokensAtSale[_tokenId].seller == owner()) feeAmount = 0 */\n    tag_169:\n        /* \"source/Marketplace.sol\":57638:57659  uint256 amountWithFee */\n      0x00\n        /* \"source/Marketplace.sol\":57662:57693  SafeMath.sub(amount, feeAmount) */\n      tag_170\n        /* \"source/Marketplace.sol\":57675:57681  amount */\n      dup4\n        /* \"source/Marketplace.sol\":57683:57692  feeAmount */\n      dup4\n        /* \"source/Marketplace.sol\":57662:57674  SafeMath.sub */\n      tag_171\n        /* \"source/Marketplace.sol\":57662:57693  SafeMath.sub(amount, feeAmount) */\n      jump\t// in\n    tag_170:\n        /* \"source/Marketplace.sol\":57788:57811  _tokensAtSale[_tokenId] */\n      0x00\n      dup9\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":57788:57801  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":57788:57811  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":57788:57818  _tokensAtSale[_tokenId].seller */\n      0x01\n      add\n      sload\n        /* \"source/Marketplace.sol\":57638:57693  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":57706:57858  payToken.safeTransferFrom(... */\n      tag_172\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57706:57731  payToken.safeTransferFrom */\n      dup9\n      dup2\n      and\n      swap2\n        /* \"source/Marketplace.sol\":57754:57764  msg.sender */\n      caller\n      swap2\n        /* \"source/Marketplace.sol\":57788:57818  _tokensAtSale[_tokenId].seller */\n      and\n        /* \"source/Marketplace.sol\":57638:57693  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      dup5\n        /* \"source/Marketplace.sol\":57706:57731  payToken.safeTransferFrom */\n      tag_173\n        /* \"source/Marketplace.sol\":57706:57858  payToken.safeTransferFrom(... */\n      jump\t// in\n    tag_172:\n        /* \"source/Marketplace.sol\":57873:57886  feeAmount > 0 */\n      dup2\n      iszero\n        /* \"source/Marketplace.sol\":57869:58061  if (feeAmount > 0) {... */\n      tag_175\n      jumpi\n        /* \"source/Marketplace.sol\":57993:58005  _feeReceiver */\n      sload(0x08)\n        /* \"source/Marketplace.sol\":57903:58049  payToken.safeTransferFrom(... */\n      tag_175\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":57903:57928  payToken.safeTransferFrom */\n      dup9\n      dup2\n      and\n      swap2\n        /* \"source/Marketplace.sol\":57955:57965  msg.sender */\n      caller\n      swap2\n        /* \"source/Marketplace.sol\":57993:58005  _feeReceiver */\n      and\n        /* \"source/Marketplace.sol\":58025:58034  feeAmount */\n      dup6\n        /* \"source/Marketplace.sol\":57903:57928  payToken.safeTransferFrom */\n      tag_173\n        /* \"source/Marketplace.sol\":57903:58049  payToken.safeTransferFrom(... */\n      jump\t// in\n    tag_175:\n        /* \"source/Marketplace.sol\":58071:58080  marketNft */\n      sload(0x01)\n        /* \"source/Marketplace.sol\":58071:58130  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":58071:58080  marketNft */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Marketplace.sol\":58071:58093  marketNft.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"source/Marketplace.sol\":58071:58130  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      tag_176\n      swap1\n        /* \"source/Marketplace.sol\":58102:58106  this */\n      address\n      swap1\n        /* \"source/Marketplace.sol\":58109:58119  msg.sender */\n      caller\n      swap1\n        /* \"source/Marketplace.sol\":58121:58129  _tokenId */\n      dup13\n      swap1\n        /* \"source/Marketplace.sol\":58071:58130  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      0x04\n      add\n      tag_177\n      jump\t// in\n    tag_176:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":58169:58174  false */\n      0x00\n        /* \"source/Marketplace.sol\":58141:58166  _isTokensAtSale[_tokenId] */\n      dup9\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58141:58156  _isTokensAtSale */\n      0x04\n        /* \"source/Marketplace.sol\":58141:58166  _isTokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":58141:58174  _isTokensAtSale[_tokenId] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      pop\n        /* \"source/Marketplace.sol\":58185:58210  _clearSellToken(_tokenId) */\n      tag_181\n        /* \"source/Marketplace.sol\":58157:58165  _tokenId */\n      dup8\n        /* \"source/Marketplace.sol\":58185:58200  _clearSellToken */\n      tag_182\n        /* \"source/Marketplace.sol\":58185:58210  _clearSellToken(_tokenId) */\n      jump\t// in\n    tag_181:\n        /* \"source/Marketplace.sol\":58221:58248  __delTokenForSale(_tokenId) */\n      tag_183\n        /* \"source/Marketplace.sol\":58239:58247  _tokenId */\n      dup8\n        /* \"source/Marketplace.sol\":58221:58238  __delTokenForSale */\n      tag_184\n        /* \"source/Marketplace.sol\":58221:58248  __delTokenForSale(_tokenId) */\n      jump\t// in\n    tag_183:\n        /* \"source/Marketplace.sol\":58279:58302  _tokensAtSale[_tokenId] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58279:58292  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":58279:58302  _tokensAtSale[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":58279:58309  _tokensAtSale[_tokenId].seller */\n      0x01\n      dup2\n      add\n      sload\n        /* \"source/Marketplace.sol\":58333:58362  _tokensAtSale[_tokenId].erc20 */\n      0x03\n      dup3\n      add\n      sload\n        /* \"source/Marketplace.sol\":58364:58393  _tokensAtSale[_tokenId].price */\n      0x02\n      swap1\n      swap3\n      add\n      sload\n        /* \"source/Marketplace.sol\":58266:58394  BuyWithERC20(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].erc20, _tokensAtSale[_tokenId].price) */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":58279:58309  _tokensAtSale[_tokenId].seller */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":8292:8326   */\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58311:58321  msg.sender */\n      caller\n        /* \"#utility.yul\":8342:8360   */\n      swap5\n      dup2\n      add\n        /* \"#utility.yul\":8335:8378   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":8394:8412   */\n      dup4\n      dup6\n      add\n        /* \"#utility.yul\":8387:8421   */\n      dup13\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":58333:58362  _tokensAtSale[_tokenId].erc20 */\n      swap2\n      and\n        /* \"#utility.yul\":8452:8454   */\n      0x60\n        /* \"#utility.yul\":8437:8455   */\n      dup4\n      add\n        /* \"#utility.yul\":8430:8473   */\n      mstore\n        /* \"#utility.yul\":8504:8507   */\n      0x80\n        /* \"#utility.yul\":8489:8508   */\n      dup3\n      add\n        /* \"#utility.yul\":8482:8517   */\n      mstore\n        /* \"source/Marketplace.sol\":58266:58394  BuyWithERC20(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].erc20, _tokensAtSale[_tokenId].price) */\n      swap1\n      mload\n      0xd369fdcfeb128f60117661ebd8f220b7265c0a04fee0e9905eb8c6ab2767b9e5\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":8241:8244   */\n      0xa0\n        /* \"source/Marketplace.sol\":58266:58394  BuyWithERC20(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].erc20, _tokensAtSale[_tokenId].price) */\n      add\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":56763:58402  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":56681:58402  function buyNFTbyERC20(uint _tokenId)... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":54077:54177  function setTradeFee(uint _newTradeFee) public onlyOwner {... */\n    tag_42:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_188\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_189\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_188:\n        /* \"source/Marketplace.sol\":54145:54154  _tradeFee */\n      0x03\n        /* \"source/Marketplace.sol\":54145:54169  _tradeFee = _newTradeFee */\n      sstore\n        /* \"source/Marketplace.sol\":54077:54177  function setTradeFee(uint _newTradeFee) public onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":54476:55503  function getUserTokensAtSale(address seller)... */\n    tag_47:\n        /* \"source/Marketplace.sol\":54560:54582  SelledNFT[] memory ret */\n      0x60\n        /* \"source/Marketplace.sol\":54600:54616  uint256 _counter */\n      0x00\n        /* \"source/Marketplace.sol\":54636:54645  uint256 i */\n      dup1\n        /* \"source/Marketplace.sol\":54631:54779  for (uint256 i = 0; i < _tokensIdsAtSale.length; i++) {... */\n    tag_192:\n        /* \"source/Marketplace.sol\":54655:54671  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":54655:54678  _tokensIdsAtSale.length */\n      sload\n        /* \"source/Marketplace.sol\":54651:54678  i < _tokensIdsAtSale.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":54631:54779  for (uint256 i = 0; i < _tokensIdsAtSale.length; i++) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"source/Marketplace.sol\":54749:54755  seller */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":54704:54755  _tokensAtSale[_tokensIdsAtSale[i]].seller == seller */\n      and\n        /* \"source/Marketplace.sol\":54704:54717  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":54704:54738  _tokensAtSale[_tokensIdsAtSale[i]] */\n      0x00\n        /* \"source/Marketplace.sol\":54718:54734  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":54735:54736  i */\n      dup5\n        /* \"source/Marketplace.sol\":54718:54737  _tokensIdsAtSale[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_196\n      tag_197\n      jump\t// in\n    tag_196:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"source/Marketplace.sol\":54704:54738  _tokensAtSale[_tokensIdsAtSale[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":54704:54745  _tokensAtSale[_tokensIdsAtSale[i]].seller */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":54704:54755  _tokensAtSale[_tokensIdsAtSale[i]].seller == seller */\n      sub\n        /* \"source/Marketplace.sol\":54700:54767  if (_tokensAtSale[_tokensIdsAtSale[i]].seller == seller) _counter++ */\n      tag_199\n      jumpi\n        /* \"source/Marketplace.sol\":54757:54767  _counter++ */\n      dup2\n      tag_200\n      dup2\n      tag_201\n      jump\t// in\n    tag_200:\n      swap3\n      pop\n      pop\n        /* \"source/Marketplace.sol\":54700:54767  if (_tokensAtSale[_tokensIdsAtSale[i]].seller == seller) _counter++ */\n    tag_199:\n        /* \"source/Marketplace.sol\":54680:54683  i++ */\n      dup1\n      tag_202\n      dup2\n      tag_201\n      jump\t// in\n    tag_202:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":54631:54779  for (uint256 i = 0; i < _tokensIdsAtSale.length; i++) {... */\n      jump(tag_192)\n    tag_193:\n      pop\n        /* \"source/Marketplace.sol\":54789:54812  SelledNFT[] memory _ret */\n      0x00\n        /* \"source/Marketplace.sol\":54831:54839  _counter */\n      dup2\n        /* \"source/Marketplace.sol\":54815:54840  new SelledNFT[](_counter) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_204\n      jumpi\n      tag_204\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_206\n      jumpi\n      dup2\n      0x20\n      add\n    tag_207:\n      tag_208\n      tag_209\n      jump\t// in\n    tag_208:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_207\n      jumpi\n      swap1\n      pop\n    tag_206:\n      pop\n        /* \"source/Marketplace.sol\":54789:54840  SelledNFT[] memory _ret = new SelledNFT[](_counter) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":54862:54863  0 */\n      0x00\n        /* \"source/Marketplace.sol\":54851:54863  _counter = 0 */\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":54881:54890  uint256 i */\n      0x00\n        /* \"source/Marketplace.sol\":54876:55472  for (uint256 i = 0; i < _tokensIdsAtSale.length; i++) {... */\n    tag_210:\n        /* \"source/Marketplace.sol\":54900:54916  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":54900:54923  _tokensIdsAtSale.length */\n      sload\n        /* \"source/Marketplace.sol\":54896:54923  i < _tokensIdsAtSale.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":54876:55472  for (uint256 i = 0; i < _tokensIdsAtSale.length; i++) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"source/Marketplace.sol\":54994:55000  seller */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":54949:55000  _tokensAtSale[_tokensIdsAtSale[i]].seller == seller */\n      and\n        /* \"source/Marketplace.sol\":54949:54962  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":54949:54983  _tokensAtSale[_tokensIdsAtSale[i]] */\n      0x00\n        /* \"source/Marketplace.sol\":54963:54979  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":54980:54981  i */\n      dup5\n        /* \"source/Marketplace.sol\":54963:54982  _tokensIdsAtSale[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_214\n      jumpi\n      tag_214\n      tag_197\n      jump\t// in\n    tag_214:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"source/Marketplace.sol\":54949:54983  _tokensAtSale[_tokensIdsAtSale[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":54949:54990  _tokensAtSale[_tokensIdsAtSale[i]].seller */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":54949:55000  _tokensAtSale[_tokensIdsAtSale[i]].seller == seller */\n      sub\n        /* \"source/Marketplace.sol\":54945:55461  if (_tokensAtSale[_tokensIdsAtSale[i]].seller == seller) {... */\n      tag_216\n      jumpi\n        /* \"source/Marketplace.sol\":55021:55047  SelledNFT memory _pushItem */\n      0x00\n        /* \"source/Marketplace.sol\":55050:55371  SelledNFT(... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"source/Marketplace.sol\":55082:55098  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":55099:55100  i */\n      dup5\n        /* \"source/Marketplace.sol\":55082:55101  _tokensIdsAtSale[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_218\n      jumpi\n      tag_218\n      tag_197\n      jump\t// in\n    tag_218:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"source/Marketplace.sol\":55050:55371  SelledNFT(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"source/Marketplace.sol\":55124:55137  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":55124:55158  _tokensAtSale[_tokensIdsAtSale[i]] */\n      0x00\n        /* \"source/Marketplace.sol\":55138:55154  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":55155:55156  i */\n      dup7\n        /* \"source/Marketplace.sol\":55138:55157  _tokensIdsAtSale[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_221\n      jumpi\n      tag_221\n      tag_197\n      jump\t// in\n    tag_221:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"source/Marketplace.sol\":55124:55158  _tokensAtSale[_tokensIdsAtSale[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"source/Marketplace.sol\":55124:55165  _tokensAtSale[_tokensIdsAtSale[i]].seller */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":55050:55371  SelledNFT(... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"source/Marketplace.sol\":55188:55201  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":55188:55222  _tokensAtSale[_tokensIdsAtSale[i]] */\n      0x00\n        /* \"source/Marketplace.sol\":55202:55218  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":55219:55220  i */\n      dup7\n        /* \"source/Marketplace.sol\":55202:55221  _tokensIdsAtSale[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_224\n      jumpi\n      tag_224\n      tag_197\n      jump\t// in\n    tag_224:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"source/Marketplace.sol\":55188:55222  _tokensAtSale[_tokensIdsAtSale[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"source/Marketplace.sol\":55188:55228  _tokensAtSale[_tokensIdsAtSale[i]].price */\n      0x02\n      add\n      sload\n        /* \"source/Marketplace.sol\":55050:55371  SelledNFT(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"source/Marketplace.sol\":55251:55264  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":55251:55285  _tokensAtSale[_tokensIdsAtSale[i]] */\n      0x00\n        /* \"source/Marketplace.sol\":55265:55281  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":55282:55283  i */\n      dup7\n        /* \"source/Marketplace.sol\":55265:55284  _tokensIdsAtSale[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_227\n      jumpi\n      tag_227\n      tag_197\n      jump\t// in\n    tag_227:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"source/Marketplace.sol\":55251:55285  _tokensAtSale[_tokensIdsAtSale[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"source/Marketplace.sol\":55251:55291  _tokensAtSale[_tokensIdsAtSale[i]].erc20 */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":55050:55371  SelledNFT(... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"source/Marketplace.sol\":55314:55327  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":55314:55348  _tokensAtSale[_tokensIdsAtSale[i]] */\n      0x00\n        /* \"source/Marketplace.sol\":55328:55344  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":55345:55346  i */\n      dup7\n        /* \"source/Marketplace.sol\":55328:55347  _tokensIdsAtSale[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_230\n      jumpi\n      tag_230\n      tag_197\n      jump\t// in\n    tag_230:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"source/Marketplace.sol\":55314:55348  _tokensAtSale[_tokensIdsAtSale[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"source/Marketplace.sol\":55314:55352  _tokensAtSale[_tokensIdsAtSale[i]].utx */\n      0x04\n      add\n      sload\n        /* \"source/Marketplace.sol\":55050:55371  SelledNFT(... */\n      dup2\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":55021:55371  SelledNFT memory _pushItem = SelledNFT(... */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":55407:55416  _pushItem */\n      dup1\n        /* \"source/Marketplace.sol\":55390:55394  _ret */\n      dup4\n        /* \"source/Marketplace.sol\":55395:55403  _counter */\n      dup6\n        /* \"source/Marketplace.sol\":55390:55404  _ret[_counter] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_233\n      jumpi\n      tag_233\n      tag_197\n      jump\t// in\n    tag_233:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"source/Marketplace.sol\":55390:55416  _ret[_counter] = _pushItem */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":55435:55445  _counter++ */\n      dup4\n      dup1\n      tag_234\n      swap1\n      tag_201\n      jump\t// in\n    tag_234:\n      swap5\n      pop\n      pop\n        /* \"source/Marketplace.sol\":55002:55461  {... */\n      pop\n        /* \"source/Marketplace.sol\":54945:55461  if (_tokensAtSale[_tokensIdsAtSale[i]].seller == seller) {... */\n    tag_216:\n        /* \"source/Marketplace.sol\":54925:54928  i++ */\n      dup1\n      tag_235\n      dup2\n      tag_201\n      jump\t// in\n    tag_235:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":54876:55472  for (uint256 i = 0; i < _tokensIdsAtSale.length; i++) {... */\n      jump(tag_210)\n    tag_211:\n      pop\n        /* \"source/Marketplace.sol\":55491:55495  _ret */\n      swap4\n        /* \"source/Marketplace.sol\":54476:55503  function getUserTokensAtSale(address seller)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":60720:61216  function deSellNFT(uint256 _tokenId) public {... */\n    tag_53:\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":60778:60788  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":60778:60799  msg.sender != owner() */\n      eq\n        /* \"source/Marketplace.sol\":60775:60905  if(msg.sender != owner()) {... */\n      tag_239\n      jumpi\n        /* \"source/Marketplace.sol\":60838:60861  _tokensAtSale[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":60838:60851  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":60838:60861  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":60838:60868  _tokensAtSale[_tokenId].seller */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":60824:60834  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":60824:60868  msg.sender == _tokensAtSale[_tokenId].seller */\n      eq\n        /* \"source/Marketplace.sol\":60816:60893  require(msg.sender == _tokensAtSale[_tokenId].seller, \"This is not your NFT\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9134:9136   */\n      0x20\n        /* \"source/Marketplace.sol\":60816:60893  require(msg.sender == _tokensAtSale[_tokenId].seller, \"This is not your NFT\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9116:9137   */\n      mstore\n        /* \"#utility.yul\":9173:9175   */\n      0x14\n        /* \"#utility.yul\":9153:9171   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9146:9176   */\n      mstore\n      shl(0x62, 0x151a1a5cc81a5cc81b9bdd081e5bdd5c88139195)\n        /* \"#utility.yul\":9192:9210   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9185:9235   */\n      mstore\n        /* \"#utility.yul\":9252:9270   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":60816:60893  require(msg.sender == _tokensAtSale[_tokenId].seller, \"This is not your NFT\") */\n      tag_139\n        /* \"#utility.yul\":8932:9276   */\n      jump\n        /* \"source/Marketplace.sol\":60816:60893  require(msg.sender == _tokensAtSale[_tokenId].seller, \"This is not your NFT\") */\n    tag_239:\n        /* \"source/Marketplace.sol\":60917:60926  marketNft */\n      0x01\n      dup1\n      sload\n      0x00\n        /* \"source/Marketplace.sol\":60955:60978  _tokensAtSale[_tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":60955:60968  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":60955:60978  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":60955:60985  _tokensAtSale[_tokenId].seller */\n      swap1\n      swap3\n      add\n      sload\n        /* \"source/Marketplace.sol\":60917:60996  marketNft.transferFrom(address(this), _tokensAtSale[_tokenId].seller, _tokenId) */\n      swap2\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":60917:60926  marketNft */\n      swap2\n      dup3\n      and\n      swap3\n        /* \"source/Marketplace.sol\":60917:60939  marketNft.transferFrom */\n      0x23b872dd\n      swap3\n        /* \"source/Marketplace.sol\":60917:60996  marketNft.transferFrom(address(this), _tokensAtSale[_tokenId].seller, _tokenId) */\n      tag_242\n      swap3\n        /* \"source/Marketplace.sol\":60948:60952  this */\n      address\n      swap3\n        /* \"source/Marketplace.sol\":60955:60985  _tokensAtSale[_tokenId].seller */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Marketplace.sol\":60969:60977  _tokenId */\n      dup7\n      swap1\n        /* \"source/Marketplace.sol\":60917:60996  marketNft.transferFrom(address(this), _tokensAtSale[_tokenId].seller, _tokenId) */\n      0x04\n      add\n      tag_177\n      jump\t// in\n    tag_242:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_243:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_245\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_245:\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":61037:61042  false */\n      0x00\n        /* \"source/Marketplace.sol\":61009:61034  _isTokensAtSale[_tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":61009:61024  _isTokensAtSale */\n      0x04\n        /* \"source/Marketplace.sol\":61009:61034  _isTokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":61009:61042  _isTokensAtSale[_tokenId] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      pop\n        /* \"source/Marketplace.sol\":61061:61086  _clearSellToken(_tokenId) */\n      tag_246\n        /* \"source/Marketplace.sol\":61025:61033  _tokenId */\n      dup2\n        /* \"source/Marketplace.sol\":61061:61076  _clearSellToken */\n      tag_182\n        /* \"source/Marketplace.sol\":61061:61086  _clearSellToken(_tokenId) */\n      jump\t// in\n    tag_246:\n        /* \"source/Marketplace.sol\":61097:61124  __delTokenForSale(_tokenId) */\n      tag_247\n        /* \"source/Marketplace.sol\":61115:61123  _tokenId */\n      dup2\n        /* \"source/Marketplace.sol\":61097:61114  __delTokenForSale */\n      tag_184\n        /* \"source/Marketplace.sol\":61097:61124  __delTokenForSale(_tokenId) */\n      jump\t// in\n    tag_247:\n        /* \"source/Marketplace.sol\":61167:61190  _tokensAtSale[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":61167:61180  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":61167:61190  _tokensAtSale[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":61167:61197  _tokensAtSale[_tokenId].seller */\n      0x01\n      add\n      sload\n        /* \"source/Marketplace.sol\":61150:61208  WithdrawFromSale(_tokensAtSale[_tokenId].seller, _tokenId) */\n      dup3\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":61167:61197  _tokensAtSale[_tokenId].seller */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9455:9506   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9522:9540   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":9515:9549   */\n      dup4\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":61150:61208  WithdrawFromSale(_tokensAtSale[_tokenId].seller, _tokenId) */\n      0x8bf8e8f2f9d065b620f4e940d87122b03dd779d0ffd6a1590572e1e6d0416bef\n      swap2\n        /* \"#utility.yul\":9428:9446   */\n      add\n        /* \"source/Marketplace.sol\":61150:61208  WithdrawFromSale(_tokensAtSale[_tokenId].seller, _tokenId) */\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":60720:61216  function deSellNFT(uint256 _tokenId) public {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":58412:59644  function buyNFT(uint256 _tokenId)... */\n    tag_56:\n        /* \"source/Marketplace.sol\":49247:49251  bool */\n      0x00\n        /* \"source/Marketplace.sol\":49271:49278  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"source/Marketplace.sol\":49525:49534  !paused() */\n      iszero\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_252:\n        /* \"source/Marketplace.sol\":58563:58588  _isTokensAtSale[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58563:58578  _isTokensAtSale */\n      0x04\n        /* \"source/Marketplace.sol\":58563:58588  _isTokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/Marketplace.sol\":58563:58596  _isTokensAtSale[_tokenId] == true */\n      iszero\n      iszero\n        /* \"source/Marketplace.sol\":58563:58588  _isTokensAtSale[_tokenId] */\n      0x01\n        /* \"source/Marketplace.sol\":58563:58596  _isTokensAtSale[_tokenId] == true */\n      eq\n        /* \"source/Marketplace.sol\":58555:58625  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5757:5759   */\n      0x20\n        /* \"source/Marketplace.sol\":58555:58625  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5739:5760   */\n      mstore\n        /* \"#utility.yul\":5796:5798   */\n      0x18\n        /* \"#utility.yul\":5776:5794   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5769:5799   */\n      mstore\n      shl(0x40, 0x54686973204e4654206973206e6f7420666f722073616c65)\n        /* \"#utility.yul\":5815:5833   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5808:5862   */\n      mstore\n        /* \"#utility.yul\":5879:5897   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":58555:58625  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n      tag_139\n        /* \"#utility.yul\":5555:5903   */\n      jump\n        /* \"source/Marketplace.sol\":58555:58625  require(_isTokensAtSale[_tokenId] == true, \"This NFT is not for sale\") */\n    tag_255:\n        /* \"source/Marketplace.sol\":58683:58706  _tokensAtSale[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58683:58696  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":58683:58706  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":58683:58712  _tokensAtSale[_tokenId].price */\n      0x02\n      add\n      sload\n        /* \"source/Marketplace.sol\":58670:58679  msg.value */\n      callvalue\n        /* \"source/Marketplace.sol\":58670:58712  msg.value >= _tokensAtSale[_tokenId].price */\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":58662:58755  require(msg.value >= _tokensAtSale[_tokenId].price, \"You have not paid enough for this item\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9762:9764   */\n      0x20\n        /* \"source/Marketplace.sol\":58662:58755  require(msg.value >= _tokensAtSale[_tokenId].price, \"You have not paid enough for this item\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9744:9765   */\n      mstore\n        /* \"#utility.yul\":9801:9803   */\n      0x26\n        /* \"#utility.yul\":9781:9799   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9774:9804   */\n      mstore\n        /* \"#utility.yul\":9840:9874   */\n      0x596f752068617665206e6f74207061696420656e6f75676820666f7220746869\n        /* \"#utility.yul\":9820:9838   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9813:9875   */\n      mstore\n      shl(0xd0, 0x73206974656d)\n        /* \"#utility.yul\":9891:9909   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9884:9920   */\n      mstore\n        /* \"#utility.yul\":9937:9956   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":58662:58755  require(msg.value >= _tokensAtSale[_tokenId].price, \"You have not paid enough for this item\") */\n      tag_139\n        /* \"#utility.yul\":9560:9962   */\n      jump\n        /* \"source/Marketplace.sol\":58662:58755  require(msg.value >= _tokensAtSale[_tokenId].price, \"You have not paid enough for this item\") */\n    tag_257:\n        /* \"source/Marketplace.sol\":58859:58860  0 */\n      0x00\n        /* \"source/Marketplace.sol\":58818:58841  _tokensAtSale[_tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":58818:58831  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":58818:58841  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":58818:58847  _tokensAtSale[_tokenId].erc20 */\n      0x03\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":58818:58861  _tokensAtSale[_tokenId].erc20 == address(0) */\n      iszero\n        /* \"source/Marketplace.sol\":58810:58892  require(_tokensAtSale[_tokenId].erc20 == address(0), \"This token selled by ERC20\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10169:10171   */\n      0x20\n        /* \"source/Marketplace.sol\":58810:58892  require(_tokensAtSale[_tokenId].erc20 == address(0), \"This token selled by ERC20\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10151:10172   */\n      mstore\n        /* \"#utility.yul\":10208:10210   */\n      0x1a\n        /* \"#utility.yul\":10188:10206   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10181:10211   */\n      mstore\n        /* \"#utility.yul\":10247:10275   */\n      0x5468697320746f6b656e2073656c6c6564206279204552433230000000000000\n        /* \"#utility.yul\":10227:10245   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10220:10276   */\n      mstore\n        /* \"#utility.yul\":10293:10311   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":58810:58892  require(_tokensAtSale[_tokenId].erc20 == address(0), \"This token selled by ERC20\") */\n      tag_139\n        /* \"#utility.yul\":9967:10317   */\n      jump\n        /* \"source/Marketplace.sol\":58810:58892  require(_tokensAtSale[_tokenId].erc20 == address(0), \"This token selled by ERC20\") */\n    tag_260:\n        /* \"source/Marketplace.sol\":58930:58939  msg.value */\n      callvalue\n        /* \"source/Marketplace.sol\":58913:58927  uint256 amount */\n      0x00\n        /* \"source/Marketplace.sol\":58970:59020  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      tag_263\n        /* \"source/Marketplace.sol\":58983:59008  SafeMath.div(amount, 100) */\n      tag_165\n        /* \"source/Marketplace.sol\":58930:58939  msg.value */\n      dup4\n        /* \"source/Marketplace.sol\":59004:59007  100 */\n      0x64\n        /* \"source/Marketplace.sol\":58983:58995  SafeMath.div */\n      tag_166\n        /* \"source/Marketplace.sol\":58983:59008  SafeMath.div(amount, 100) */\n      jump\t// in\n        /* \"source/Marketplace.sol\":58970:59020  SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n    tag_263:\n        /* \"source/Marketplace.sol\":58950:59020  uint256 feeAmount = SafeMath.mul(SafeMath.div(amount, 100), _tradeFee) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":59069:59076  owner() */\n      tag_265\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"source/Marketplace.sol\":59069:59076  owner() */\n    tag_265:\n        /* \"source/Marketplace.sol\":59035:59058  _tokensAtSale[_tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":59035:59048  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":59035:59058  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":59035:59065  _tokensAtSale[_tokenId].seller */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":59035:59076  _tokensAtSale[_tokenId].seller == owner() */\n      swap2\n      dup3\n      and\n        /* \"source/Marketplace.sol\":59035:59065  _tokensAtSale[_tokenId].seller */\n      swap2\n      and\n        /* \"source/Marketplace.sol\":59035:59076  _tokensAtSale[_tokenId].seller == owner() */\n      sub\n        /* \"source/Marketplace.sol\":59031:59091  if (_tokensAtSale[_tokenId].seller == owner()) feeAmount = 0 */\n      tag_266\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":59090:59091  0 */\n      0x00\n        /* \"source/Marketplace.sol\":59031:59091  if (_tokensAtSale[_tokenId].seller == owner()) feeAmount = 0 */\n    tag_266:\n        /* \"source/Marketplace.sol\":59102:59123  uint256 amountWithFee */\n      0x00\n        /* \"source/Marketplace.sol\":59126:59157  SafeMath.sub(amount, feeAmount) */\n      tag_267\n        /* \"source/Marketplace.sol\":59139:59145  amount */\n      dup4\n        /* \"source/Marketplace.sol\":59147:59156  feeAmount */\n      dup4\n        /* \"source/Marketplace.sol\":59126:59138  SafeMath.sub */\n      tag_171\n        /* \"source/Marketplace.sol\":59126:59157  SafeMath.sub(amount, feeAmount) */\n      jump\t// in\n    tag_267:\n        /* \"source/Marketplace.sol\":59178:59201  _tokensAtSale[_tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":59178:59191  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":59178:59201  _tokensAtSale[_tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"source/Marketplace.sol\":59178:59208  _tokensAtSale[_tokenId].seller */\n      0x01\n      add\n      sload\n        /* \"source/Marketplace.sol\":59170:59233  payable(_tokensAtSale[_tokenId].seller).transfer(amountWithFee) */\n      swap1\n      mload\n        /* \"source/Marketplace.sol\":59102:59157  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      swap3\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":59178:59208  _tokensAtSale[_tokenId].seller */\n      and\n      swap2\n        /* \"source/Marketplace.sol\":59170:59233  payable(_tokensAtSale[_tokenId].seller).transfer(amountWithFee) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"source/Marketplace.sol\":59102:59157  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      dup5\n      swap2\n        /* \"source/Marketplace.sol\":59170:59233  payable(_tokensAtSale[_tokenId].seller).transfer(amountWithFee) */\n      swap1\n      dup2\n        /* \"source/Marketplace.sol\":59178:59201  _tokensAtSale[_tokenId] */\n      dup2\n        /* \"source/Marketplace.sol\":59170:59233  payable(_tokensAtSale[_tokenId].seller).transfer(amountWithFee) */\n      dup2\n        /* \"source/Marketplace.sol\":59102:59157  uint256 amountWithFee = SafeMath.sub(amount, feeAmount) */\n      dup6\n        /* \"source/Marketplace.sol\":59178:59208  _tokensAtSale[_tokenId].seller */\n      dup9\n        /* \"source/Marketplace.sol\":59170:59233  payable(_tokensAtSale[_tokenId].seller).transfer(amountWithFee) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_269:\n      pop\n        /* \"source/Marketplace.sol\":59248:59261  feeAmount > 0 */\n      dup2\n      iszero\n        /* \"source/Marketplace.sol\":59244:59331  if (feeAmount > 0) {... */\n      tag_270\n      jumpi\n        /* \"source/Marketplace.sol\":59286:59298  _feeReceiver */\n      sload(0x08)\n        /* \"source/Marketplace.sol\":59278:59319  payable(_feeReceiver).transfer(feeAmount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":59286:59298  _feeReceiver */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Marketplace.sol\":59278:59319  payable(_feeReceiver).transfer(feeAmount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"source/Marketplace.sol\":59309:59318  feeAmount */\n      dup5\n      swap1\n        /* \"source/Marketplace.sol\":59286:59298  _feeReceiver */\n      0x00\n        /* \"source/Marketplace.sol\":59278:59319  payable(_feeReceiver).transfer(feeAmount) */\n      dup2\n        /* \"source/Marketplace.sol\":59286:59298  _feeReceiver */\n      dup2\n        /* \"source/Marketplace.sol\":59278:59319  payable(_feeReceiver).transfer(feeAmount) */\n      dup2\n        /* \"source/Marketplace.sol\":59309:59318  feeAmount */\n      dup6\n        /* \"source/Marketplace.sol\":59286:59298  _feeReceiver */\n      dup9\n        /* \"source/Marketplace.sol\":59278:59319  payable(_feeReceiver).transfer(feeAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_272\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_272:\n      pop\n        /* \"source/Marketplace.sol\":59244:59331  if (feeAmount > 0) {... */\n    tag_270:\n        /* \"source/Marketplace.sol\":59351:59360  marketNft */\n      sload(0x01)\n        /* \"source/Marketplace.sol\":59351:59410  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":59351:59360  marketNft */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Marketplace.sol\":59351:59373  marketNft.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"source/Marketplace.sol\":59351:59410  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      tag_273\n      swap1\n        /* \"source/Marketplace.sol\":59382:59386  this */\n      address\n      swap1\n        /* \"source/Marketplace.sol\":59389:59399  msg.sender */\n      caller\n      swap1\n        /* \"source/Marketplace.sol\":59401:59409  _tokenId */\n      dup10\n      swap1\n        /* \"source/Marketplace.sol\":59351:59410  marketNft.transferFrom(address(this), msg.sender, _tokenId) */\n      0x04\n      add\n      tag_177\n      jump\t// in\n    tag_273:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_274\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_274:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_276\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_276:\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":59449:59454  false */\n      0x00\n        /* \"source/Marketplace.sol\":59421:59446  _isTokensAtSale[_tokenId] */\n      dup6\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":59421:59436  _isTokensAtSale */\n      0x04\n        /* \"source/Marketplace.sol\":59421:59446  _isTokensAtSale[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/Marketplace.sol\":59421:59454  _isTokensAtSale[_tokenId] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":59476:59489  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":59476:59499  _tokensAtSale[_tokenId] */\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n      0x01\n        /* \"source/Marketplace.sol\":59476:59506  _tokensAtSale[_tokenId].seller */\n      dup2\n      add\n      sload\n        /* \"source/Marketplace.sol\":59530:59559  _tokensAtSale[_tokenId].price */\n      0x02\n      swap1\n      swap2\n      add\n      sload\n        /* \"source/Marketplace.sol\":59472:59560  Buy(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].price) */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":59476:59506  _tokensAtSale[_tokenId].seller */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":10591:10625   */\n      dup3\n      mstore\n        /* \"source/Marketplace.sol\":59508:59518  msg.sender */\n      caller\n        /* \"#utility.yul\":10641:10659   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":10634:10677   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":10693:10711   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":10686:10720   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":10751:10753   */\n      0x60\n        /* \"#utility.yul\":10736:10754   */\n      dup3\n      add\n        /* \"#utility.yul\":10729:10763   */\n      mstore\n        /* \"source/Marketplace.sol\":59472:59560  Buy(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].price) */\n      0x89f5adc174562e07c9c9b1cae7109bbecb21cf9d1b2847e550042b8653c54a0e\n      swap2\n      pop\n        /* \"#utility.yul\":10540:10543   */\n      0x80\n        /* \"#utility.yul\":10525:10544   */\n      add\n        /* \"source/Marketplace.sol\":59472:59560  Buy(_tokensAtSale[_tokenId].seller, msg.sender, _tokenId, _tokensAtSale[_tokenId].price) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":59573:59598  _clearSellToken(_tokenId) */\n      tag_279\n        /* \"source/Marketplace.sol\":59589:59597  _tokenId */\n      dup5\n        /* \"source/Marketplace.sol\":59573:59588  _clearSellToken */\n      tag_182\n        /* \"source/Marketplace.sol\":59573:59598  _clearSellToken(_tokenId) */\n      jump\t// in\n    tag_279:\n        /* \"source/Marketplace.sol\":59609:59636  __delTokenForSale(_tokenId) */\n      tag_280\n        /* \"source/Marketplace.sol\":59627:59635  _tokenId */\n      dup5\n        /* \"source/Marketplace.sol\":59609:59626  __delTokenForSale */\n      tag_184\n        /* \"source/Marketplace.sol\":59609:59636  __delTokenForSale(_tokenId) */\n      jump\t// in\n    tag_280:\n        /* \"source/Marketplace.sol\":58507:59644  {... */\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":58412:59644  function buyNFT(uint256 _tokenId)... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":53518:53709  function withdrawWei() public onlyOwner {... */\n    tag_59:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_282\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_189\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_282:\n        /* \"source/Marketplace.sol\":53618:53654  payable(msg.sender).transfer(amount) */\n      mload(0x40)\n        /* \"source/Marketplace.sol\":53586:53607  address(this).balance */\n      selfbalance\n      swap1\n        /* \"source/Marketplace.sol\":53626:53636  msg.sender */\n      caller\n      swap1\n        /* \"source/Marketplace.sol\":53618:53654  payable(msg.sender).transfer(amount) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"source/Marketplace.sol\":53586:53607  address(this).balance */\n      dup4\n      swap1\n        /* \"source/Marketplace.sol\":53569:53583  uint256 amount */\n      0x00\n        /* \"source/Marketplace.sol\":53618:53654  payable(msg.sender).transfer(amount) */\n      dup2\n        /* \"source/Marketplace.sol\":53569:53583  uint256 amount */\n      dup2\n        /* \"source/Marketplace.sol\":53618:53654  payable(msg.sender).transfer(amount) */\n      dup2\n        /* \"source/Marketplace.sol\":53586:53607  address(this).balance */\n      dup6\n        /* \"source/Marketplace.sol\":53626:53636  msg.sender */\n      dup9\n        /* \"source/Marketplace.sol\":53618:53654  payable(msg.sender).transfer(amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_285\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_285:\n      pop\n        /* \"source/Marketplace.sol\":53670:53701  WithdrawWei(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":53682:53692  msg.sender */\n      caller\n        /* \"#utility.yul\":9455:9506   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9537:9539   */\n      0x20\n        /* \"#utility.yul\":9522:9540   */\n      dup2\n      add\n        /* \"#utility.yul\":9515:9549   */\n      dup4\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":53670:53701  WithdrawWei(msg.sender, amount) */\n      0x2f15b7a52fc8a006876377705647acbd22eed72dec9b154aa290e286c06a3cd4\n      swap2\n        /* \"#utility.yul\":9428:9446   */\n      add\n        /* \"source/Marketplace.sol\":53670:53701  WithdrawWei(msg.sender, amount) */\n      tag_248\n        /* \"#utility.yul\":9281:9555   */\n      jump\n        /* \"source/Marketplace.sol\":55630:56673  function getTokensAtSale(uint256 offset, uint256 limit)... */\n    tag_74:\n        /* \"source/Marketplace.sol\":55727:55749  SelledNFT[] memory ret */\n      0x60\n        /* \"source/Marketplace.sol\":55784:55790  offset */\n      dup3\n        /* \"source/Marketplace.sol\":55767:55781  uint256 iStart */\n      0x00\n        /* \"source/Marketplace.sol\":55816:55830  iStart + limit */\n      tag_289\n        /* \"source/Marketplace.sol\":55825:55830  limit */\n      dup5\n        /* \"source/Marketplace.sol\":55784:55790  offset */\n      dup4\n        /* \"source/Marketplace.sol\":55816:55830  iStart + limit */\n      tag_290\n      jump\t// in\n    tag_289:\n        /* \"source/Marketplace.sol\":55855:55871  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":55855:55878  _tokensIdsAtSale.length */\n      sload\n        /* \"source/Marketplace.sol\":55801:55830  uint256 iEnd = iStart + limit */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":55845:55878  iStart >= _tokensIdsAtSale.length */\n      dup3\n      lt\n        /* \"source/Marketplace.sol\":55841:55905  if (iStart >= _tokensIdsAtSale.length) return new SelledNFT[](0) */\n      tag_291\n      jumpi\n        /* \"source/Marketplace.sol\":55887:55905  new SelledNFT[](0) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":55903:55904  0 */\n      0x00\n        /* \"source/Marketplace.sol\":55887:55905  new SelledNFT[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      swap1\n      jump(tag_294)\n    tag_295:\n      tag_296\n      tag_209\n      jump\t// in\n    tag_296:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_295\n      jumpi\n      swap1\n      pop\n    tag_294:\n      pop\n        /* \"source/Marketplace.sol\":55880:55905  return new SelledNFT[](0) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_288)\n        /* \"source/Marketplace.sol\":55841:55905  if (iStart >= _tokensIdsAtSale.length) return new SelledNFT[](0) */\n    tag_291:\n        /* \"source/Marketplace.sol\":55920:55931  offset == 0 */\n      dup5\n      iszero\n        /* \"source/Marketplace.sol\":55920:55945  offset == 0 && limit == 0 */\n      dup1\n      iszero\n      tag_297\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":55935:55945  limit == 0 */\n      dup4\n      iszero\n        /* \"source/Marketplace.sol\":55920:55945  offset == 0 && limit == 0 */\n    tag_297:\n        /* \"source/Marketplace.sol\":55916:55977  if (offset == 0 && limit == 0) iEnd = _tokensIdsAtSale.length */\n      iszero\n      tag_298\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":55954:55970  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":55954:55977  _tokensIdsAtSale.length */\n      sload\n        /* \"source/Marketplace.sol\":55916:55977  if (offset == 0 && limit == 0) iEnd = _tokensIdsAtSale.length */\n    tag_298:\n        /* \"source/Marketplace.sol\":55999:56015  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":55999:56022  _tokensIdsAtSale.length */\n      sload\n        /* \"source/Marketplace.sol\":55992:56022  iEnd > _tokensIdsAtSale.length */\n      dup2\n      gt\n        /* \"source/Marketplace.sol\":55988:56054  if (iEnd > _tokensIdsAtSale.length) iEnd = _tokensIdsAtSale.length */\n      iszero\n      tag_299\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":56031:56047  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":56031:56054  _tokensIdsAtSale.length */\n      sload\n        /* \"source/Marketplace.sol\":55988:56054  if (iEnd > _tokensIdsAtSale.length) iEnd = _tokensIdsAtSale.length */\n    tag_299:\n        /* \"source/Marketplace.sol\":56075:56088  uint256 count */\n      0x00\n        /* \"source/Marketplace.sol\":56091:56104  iEnd - iStart */\n      tag_300\n        /* \"source/Marketplace.sol\":56098:56104  iStart */\n      dup4\n        /* \"source/Marketplace.sol\":56091:56095  iEnd */\n      dup4\n        /* \"source/Marketplace.sol\":56091:56104  iEnd - iStart */\n      tag_301\n      jump\t// in\n    tag_300:\n        /* \"source/Marketplace.sol\":56075:56104  uint256 count = iEnd - iStart */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":56115:56125  uint256 ii */\n      0x00\n        /* \"source/Marketplace.sol\":56140:56163  SelledNFT[] memory _ret */\n      dup1\n        /* \"source/Marketplace.sol\":56182:56187  count */\n      dup3\n        /* \"source/Marketplace.sol\":56166:56188  new SelledNFT[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_303\n      jumpi\n      tag_303\n      tag_205\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_304\n      jumpi\n      dup2\n      0x20\n      add\n    tag_305:\n      tag_306\n      tag_209\n      jump\t// in\n    tag_306:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_305\n      jumpi\n      swap1\n      pop\n    tag_304:\n      pop\n        /* \"source/Marketplace.sol\":56140:56188  SelledNFT[] memory _ret = new SelledNFT[](count) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":56216:56222  iStart */\n      dup5\n        /* \"source/Marketplace.sol\":56199:56644  for (uint256 i = iStart; i < iEnd; i++) {... */\n    tag_307:\n        /* \"source/Marketplace.sol\":56228:56232  iEnd */\n      dup5\n        /* \"source/Marketplace.sol\":56224:56225  i */\n      dup2\n        /* \"source/Marketplace.sol\":56224:56232  i < iEnd */\n      lt\n        /* \"source/Marketplace.sol\":56199:56644  for (uint256 i = iStart; i < iEnd; i++) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"source/Marketplace.sol\":56254:56270  uint256 _tokenId */\n      0x00\n        /* \"source/Marketplace.sol\":56273:56289  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":56290:56291  i */\n      dup3\n        /* \"source/Marketplace.sol\":56273:56292  _tokensIdsAtSale[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_311\n      jumpi\n      tag_311\n      tag_197\n      jump\t// in\n    tag_311:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"source/Marketplace.sol\":56336:56578  SelledNFT(... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":56391:56414  _tokensAtSale[_tokenId] */\n      dup3\n      dup6\n      mstore\n        /* \"source/Marketplace.sol\":56391:56404  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":56391:56414  _tokensAtSale[_tokenId] */\n      dup1\n      dup6\n      mstore\n      dup3\n      dup7\n      keccak256\n        /* \"source/Marketplace.sol\":56391:56421  _tokensAtSale[_tokenId].seller */\n      0x01\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"source/Marketplace.sol\":56336:56578  SelledNFT(... */\n      dup5\n      dup9\n      add\n      mstore\n        /* \"source/Marketplace.sol\":56440:56469  _tokensAtSale[_tokenId].price */\n      0x02\n      dup3\n      add\n      sload\n        /* \"source/Marketplace.sol\":56336:56578  SelledNFT(... */\n      swap5\n      dup5\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"source/Marketplace.sol\":56488:56517  _tokensAtSale[_tokenId].erc20 */\n      0x03\n      dup2\n      add\n      sload\n      swap1\n      swap4\n      and\n        /* \"source/Marketplace.sol\":56336:56578  SelledNFT(... */\n      0x60\n      dup4\n      add\n      mstore\n        /* \"source/Marketplace.sol\":56536:56559  _tokensAtSale[_tokenId] */\n      swap5\n      dup4\n      swap1\n      mstore\n      swap4\n      swap1\n      swap3\n      mstore\n        /* \"source/Marketplace.sol\":56536:56563  _tokensAtSale[_tokenId].utx */\n      0x04\n      swap1\n      swap2\n      add\n      sload\n        /* \"source/Marketplace.sol\":56336:56578  SelledNFT(... */\n      0x80\n      dup4\n      add\n      mstore\n        /* \"source/Marketplace.sol\":56593:56601  _ret[ii] */\n      dup5\n      mload\n        /* \"source/Marketplace.sol\":56273:56292  _tokensIdsAtSale[i] */\n      swap1\n      swap3\n      pop\n        /* \"source/Marketplace.sol\":56336:56578  SelledNFT(... */\n      dup2\n      swap1\n        /* \"source/Marketplace.sol\":56593:56597  _ret */\n      dup6\n      swap1\n        /* \"source/Marketplace.sol\":56598:56600  ii */\n      dup8\n      swap1\n        /* \"source/Marketplace.sol\":56593:56601  _ret[ii] */\n      dup2\n      lt\n      tag_314\n      jumpi\n      tag_314\n      tag_197\n      jump\t// in\n    tag_314:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"source/Marketplace.sol\":56593:56613  _ret[ii] = _pushItem */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":56628:56632  ii++ */\n      dup5\n      dup1\n      tag_315\n      swap1\n      tag_201\n      jump\t// in\n    tag_315:\n      swap6\n      pop\n      pop\n        /* \"source/Marketplace.sol\":56239:56644  {... */\n      pop\n      pop\n        /* \"source/Marketplace.sol\":56234:56237  i++ */\n      dup1\n      dup1\n      tag_316\n      swap1\n      tag_201\n      jump\t// in\n    tag_316:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":56199:56644  for (uint256 i = iStart; i < iEnd; i++) {... */\n      jump(tag_307)\n    tag_308:\n      pop\n        /* \"source/Marketplace.sol\":56661:56665  _ret */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":55630:56673  function getTokensAtSale(uint256 offset, uint256 limit)... */\n    tag_288:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":53180:53284  function getAllowedERC20() public view returns(address[] memory) {... */\n    tag_82:\n        /* \"source/Marketplace.sol\":53227:53243  address[] memory */\n      0x60\n        /* \"source/Marketplace.sol\":53263:53276  _allowedERC20 */\n      0x06\n        /* \"source/Marketplace.sol\":53256:53276  return _allowedERC20 */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_319\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_320:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_320\n      jumpi\n    tag_319:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":53180:53284  function getAllowedERC20() public view returns(address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"source/Marketplace.sol\":2667:2770  function renounceOwnership() public virtual onlyOwner {... */\n    tag_87:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_322\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_189\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_322:\n        /* \"source/Marketplace.sol\":2732:2762  _transferOwnership(address(0)) */\n      tag_324\n        /* \"source/Marketplace.sol\":2759:2760  0 */\n      0x00\n        /* \"source/Marketplace.sol\":2732:2750  _transferOwnership */\n      tag_325\n        /* \"source/Marketplace.sol\":2732:2762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_324:\n        /* \"source/Marketplace.sol\":2667:2770  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":53292:53510  function isAllowedERC20(address erc20) public view returns (bool) {... */\n    tag_91:\n        /* \"source/Marketplace.sol\":53352:53356  bool */\n      0x00\n      dup1\n        /* \"source/Marketplace.sol\":53369:53480  for(uint i=0; i<_allowedERC20.length;i++) {... */\n    tag_327:\n        /* \"source/Marketplace.sol\":53385:53398  _allowedERC20 */\n      0x06\n        /* \"source/Marketplace.sol\":53385:53405  _allowedERC20.length */\n      sload\n        /* \"source/Marketplace.sol\":53383:53405  i<_allowedERC20.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":53369:53480  for(uint i=0; i<_allowedERC20.length;i++) {... */\n      iszero\n      tag_328\n      jumpi\n        /* \"source/Marketplace.sol\":53439:53452  _allowedERC20 */\n      0x06\n        /* \"source/Marketplace.sol\":53453:53454  i */\n      dup2\n        /* \"source/Marketplace.sol\":53439:53455  _allowedERC20[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_331\n      jumpi\n      tag_331\n      tag_197\n      jump\t// in\n    tag_331:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"source/Marketplace.sol\":53430:53455  erc20 == _allowedERC20[i] */\n      swap1\n      dup5\n      and\n      sub\n        /* \"source/Marketplace.sol\":53426:53468  if (erc20 == _allowedERC20[i]) return true */\n      tag_333\n      jumpi\n      pop\n        /* \"source/Marketplace.sol\":53464:53468  true */\n      0x01\n      swap3\n        /* \"source/Marketplace.sol\":53292:53510  function isAllowedERC20(address erc20) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":53426:53468  if (erc20 == _allowedERC20[i]) return true */\n    tag_333:\n        /* \"source/Marketplace.sol\":53406:53409  i++ */\n      dup1\n      tag_334\n      dup2\n      tag_201\n      jump\t// in\n    tag_334:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":53369:53480  for(uint i=0; i<_allowedERC20.length;i++) {... */\n      jump(tag_327)\n    tag_328:\n      pop\n        /* \"source/Marketplace.sol\":53497:53502  false */\n      0x00\n      swap3\n        /* \"source/Marketplace.sol\":53292:53510  function isAllowedERC20(address erc20) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":59652:60712  function sellNFT(... */\n    tag_97:\n        /* \"source/Marketplace.sol\":49247:49251  bool */\n      0x00\n        /* \"source/Marketplace.sol\":49271:49278  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"source/Marketplace.sol\":49525:49534  !paused() */\n      iszero\n        /* \"source/Marketplace.sol\":49517:49555  require(!paused(), \"Pausable: paused\") */\n      tag_337\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_337:\n        /* \"source/Marketplace.sol\":59829:59838  marketNft */\n      sload(0x01)\n        /* \"source/Marketplace.sol\":59829:59856  marketNft.ownerOf(_tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2404:2429   */\n      dup6\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":59860:59870  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":59829:59838  marketNft */\n      and\n      swap1\n        /* \"source/Marketplace.sol\":59829:59846  marketNft.ownerOf */\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":2377:2395   */\n      0x24\n      add\n        /* \"source/Marketplace.sol\":59829:59856  marketNft.ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_342\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_342:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_343\n      swap2\n      swap1\n      tag_344\n      jump\t// in\n    tag_343:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":59829:59870  marketNft.ownerOf(_tokenId) == msg.sender */\n      and\n      eq\n        /* \"source/Marketplace.sol\":59807:59923  require(... */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11495:11497   */\n      0x20\n        /* \"source/Marketplace.sol\":59807:59923  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11477:11498   */\n      mstore\n        /* \"#utility.yul\":11534:11536   */\n      0x19\n        /* \"#utility.yul\":11514:11532   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11507:11537   */\n      mstore\n        /* \"#utility.yul\":11573:11600   */\n      0x596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000\n        /* \"#utility.yul\":11553:11571   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11546:11601   */\n      mstore\n        /* \"#utility.yul\":11618:11636   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":59807:59923  require(... */\n      tag_139\n        /* \"#utility.yul\":11293:11642   */\n      jump\n        /* \"source/Marketplace.sol\":59807:59923  require(... */\n    tag_345:\n        /* \"source/Marketplace.sol\":59950:59951  0 */\n      0x00\n        /* \"source/Marketplace.sol\":59942:59947  price */\n      dup3\n        /* \"source/Marketplace.sol\":59942:59951  price > 0 */\n      gt\n        /* \"source/Marketplace.sol\":59934:59987  require(price > 0, \"Price must be greater than zero\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11849:11851   */\n      0x20\n        /* \"source/Marketplace.sol\":59934:59987  require(price > 0, \"Price must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11831:11852   */\n      mstore\n        /* \"#utility.yul\":11888:11890   */\n      0x1f\n        /* \"#utility.yul\":11868:11886   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11861:11891   */\n      mstore\n        /* \"#utility.yul\":11927:11960   */\n      0x5072696365206d7573742062652067726561746572207468616e207a65726f00\n        /* \"#utility.yul\":11907:11925   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11900:11961   */\n      mstore\n        /* \"#utility.yul\":11978:11996   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":59934:59987  require(price > 0, \"Price must be greater than zero\") */\n      tag_139\n        /* \"#utility.yul\":11647:12002   */\n      jump\n        /* \"source/Marketplace.sol\":59934:59987  require(price > 0, \"Price must be greater than zero\") */\n    tag_348:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":60002:60022  _erc20 != address(0) */\n      dup2\n      and\n      iszero\n        /* \"source/Marketplace.sol\":59998:60170  if (_erc20 != address(0)) {... */\n      tag_353\n      jumpi\n        /* \"source/Marketplace.sol\":60079:60101  isAllowedERC20(_erc20) */\n      tag_352\n        /* \"source/Marketplace.sol\":60094:60100  _erc20 */\n      dup2\n        /* \"source/Marketplace.sol\":60079:60093  isAllowedERC20 */\n      tag_91\n        /* \"source/Marketplace.sol\":60079:60101  isAllowedERC20(_erc20) */\n      jump\t// in\n    tag_352:\n        /* \"source/Marketplace.sol\":60079:60109  isAllowedERC20(_erc20) == true */\n      iszero\n      iszero\n        /* \"source/Marketplace.sol\":60105:60109  true */\n      0x01\n        /* \"source/Marketplace.sol\":60079:60109  isAllowedERC20(_erc20) == true */\n      eq\n        /* \"source/Marketplace.sol\":60071:60158  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12209:12211   */\n      0x20\n        /* \"source/Marketplace.sol\":60071:60158  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12191:12212   */\n      mstore\n        /* \"#utility.yul\":12248:12250   */\n      0x2c\n        /* \"#utility.yul\":12228:12246   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12221:12251   */\n      mstore\n        /* \"#utility.yul\":12287:12321   */\n      0x54686973204552433230206e6f7420616c6c6f77656420617320612074726164\n        /* \"#utility.yul\":12267:12285   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12260:12322   */\n      mstore\n      shl(0xa0, 0x696e672063757272656e6379)\n        /* \"#utility.yul\":12338:12356   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12331:12373   */\n      mstore\n        /* \"#utility.yul\":12390:12409   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":60071:60158  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n      tag_139\n        /* \"#utility.yul\":12007:12415   */\n      jump\n        /* \"source/Marketplace.sol\":60071:60158  require(isAllowedERC20(_erc20) == true, \"This ERC20 not allowed as a trading currency\") */\n    tag_353:\n        /* \"source/Marketplace.sol\":60182:60207  _isTokensAtSale[_tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":60182:60197  _isTokensAtSale */\n      0x04\n        /* \"source/Marketplace.sol\":60182:60207  _isTokensAtSale[_tokenId] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"source/Marketplace.sol\":60182:60214  _isTokensAtSale[_tokenId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"source/Marketplace.sol\":60210:60214  true */\n      0x01\n        /* \"source/Marketplace.sol\":60182:60214  _isTokensAtSale[_tokenId] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"source/Marketplace.sol\":60251:60390  SelledNFT(... */\n      dup2\n      mload\n      0xa0\n      dup2\n      add\n      dup4\n      mstore\n      dup9\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":60298:60308  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":60251:60390  SelledNFT(... */\n      dup2\n      dup6\n      add\n      dup2\n      dup2\n      mstore\n      dup3\n      dup6\n      add\n      dup11\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      dup2\n      and\n      0x60\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":60364:60379  block.timestamp */\n      timestamp\n        /* \"source/Marketplace.sol\":60251:60390  SelledNFT(... */\n      0x80\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":60225:60248  _tokensAtSale[_tokenId] */\n      dup15\n      dup13\n      mstore\n        /* \"source/Marketplace.sol\":60225:60238  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":60225:60248  _tokensAtSale[_tokenId] */\n      swap1\n      swap10\n      mstore\n      swap10\n      dup8\n      swap1\n      keccak256\n        /* \"source/Marketplace.sol\":60225:60390  _tokensAtSale[_tokenId] = SelledNFT(... */\n      swap5\n      mload\n      dup6\n      sstore\n      swap2\n      mload\n      dup5\n      dup7\n      add\n      dup1\n      sload\n      swap2\n      dup5\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      sstore\n      swap1\n      mload\n      0x02\n      dup6\n      add\n      sstore\n      swap8\n      mload\n      0x03\n      dup5\n      add\n      dup1\n      sload\n      swap2\n      dup4\n      and\n      swap2\n      swap1\n      swap10\n      and\n      or\n      swap1\n      swap8\n      sstore\n      swap4\n      mload\n      swap1\n      dup6\n      add\n      sstore\n        /* \"source/Marketplace.sol\":60401:60410  marketNft */\n      sload\n        /* \"source/Marketplace.sol\":60401:60460  marketNft.transferFrom(msg.sender, address(this), _tokenId) */\n      swap1\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":60401:60410  marketNft */\n      swap4\n      and\n      swap3\n        /* \"source/Marketplace.sol\":60401:60423  marketNft.transferFrom */\n      0x23b872dd\n      swap3\n        /* \"source/Marketplace.sol\":60401:60460  marketNft.transferFrom(msg.sender, address(this), _tokenId) */\n      tag_356\n      swap3\n        /* \"source/Marketplace.sol\":60298:60308  msg.sender */\n      swap2\n        /* \"source/Marketplace.sol\":60444:60448  this */\n      address\n      swap2\n        /* \"source/Marketplace.sol\":60198:60206  _tokenId */\n      dup10\n      swap2\n        /* \"source/Marketplace.sol\":60401:60460  marketNft.transferFrom(msg.sender, address(this), _tokenId) */\n      add\n      tag_177\n      jump\t// in\n    tag_356:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_357\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_357:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_359\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_359:\n      pop\n      pop\n      pop\n      pop\n        /* \"source/Marketplace.sol\":60471:60497  __addTokenToSale(_tokenId) */\n      tag_360\n        /* \"source/Marketplace.sol\":60488:60496  _tokenId */\n      dup4\n        /* \"source/Marketplace.sol\":51761:51777  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":51761:51792  _tokensIdsAtSale.push(_tokenId) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      sstore\n        /* \"source/Marketplace.sol\":51696:51800  function __addTokenToSale(uint256 _tokenId) internal  {... */\n      jump\n        /* \"source/Marketplace.sol\":60471:60497  __addTokenToSale(_tokenId) */\n    tag_360:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":60514:60534  _erc20 == address(0) */\n      dup2\n      and\n        /* \"source/Marketplace.sol\":60510:60705  if (_erc20 == address(0)) {... */\n      tag_362\n      jumpi\n        /* \"source/Marketplace.sol\":60556:60614  PutUpForSaleWithERC20(msg.sender, _tokenId, _erc20, price) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":60578:60588  msg.sender */\n      caller\n        /* \"#utility.yul\":12689:12723   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12754:12756   */\n      0x20\n        /* \"#utility.yul\":12739:12757   */\n      dup2\n      add\n        /* \"#utility.yul\":12732:12766   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12802:12817   */\n      dup4\n      and\n        /* \"#utility.yul\":12782:12800   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":12775:12818   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12849:12851   */\n      0x60\n        /* \"#utility.yul\":12834:12852   */\n      dup2\n      add\n        /* \"#utility.yul\":12827:12861   */\n      dup4\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":60556:60614  PutUpForSaleWithERC20(msg.sender, _tokenId, _erc20, price) */\n      0x0a4292e75f7eafde90821610c4cabfc298540c274b50a7ea784a529a2b8a4a6f\n      swap1\n        /* \"#utility.yul\":12638:12641   */\n      0x80\n        /* \"#utility.yul\":12623:12642   */\n      add\n        /* \"source/Marketplace.sol\":60556:60614  PutUpForSaleWithERC20(msg.sender, _tokenId, _erc20, price) */\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/Marketplace.sol\":59652:60712  function sellNFT(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":60510:60705  if (_erc20 == address(0)) {... */\n    tag_362:\n        /* \"source/Marketplace.sol\":60652:60693  PutUpForSale(msg.sender, _tokenId, price) */\n      0x40\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":60665:60675  msg.sender */\n      caller\n        /* \"#utility.yul\":13074:13125   */\n      dup2\n      mstore\n        /* \"#utility.yul\":13156:13158   */\n      0x20\n        /* \"#utility.yul\":13141:13159   */\n      dup2\n      add\n        /* \"#utility.yul\":13134:13168   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":13184:13202   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":13177:13211   */\n      dup4\n      swap1\n      mstore\n        /* \"source/Marketplace.sol\":60652:60693  PutUpForSale(msg.sender, _tokenId, price) */\n      0x4524387b4311078b7531910a140a6975002b10aca4cf12255e98da8f1ff1b35b\n      swap1\n        /* \"#utility.yul\":13062:13064   */\n      0x60\n        /* \"#utility.yul\":13047:13065   */\n      add\n        /* \"source/Marketplace.sol\":60652:60693  PutUpForSale(msg.sender, _tokenId, price) */\n      tag_363\n        /* \"#utility.yul\":12872:13217   */\n      jump\n        /* \"source/Marketplace.sol\":60510:60705  if (_erc20 == address(0)) {... */\n    tag_365:\n        /* \"source/Marketplace.sol\":59652:60712  function sellNFT(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":54335:54468  function getMyTokensAtSale() external view returns (SelledNFT[] memory ret) {... */\n    tag_109:\n        /* \"source/Marketplace.sol\":54387:54409  SelledNFT[] memory ret */\n      0x60\n        /* \"source/Marketplace.sol\":54429:54460  getUserTokensAtSale(msg.sender) */\n      tag_371\n        /* \"source/Marketplace.sol\":54449:54459  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":54429:54448  getUserTokensAtSale */\n      tag_47\n        /* \"source/Marketplace.sol\":54429:54460  getUserTokensAtSale(msg.sender) */\n      jump\t// in\n    tag_371:\n        /* \"source/Marketplace.sol\":54422:54460  return getUserTokensAtSale(msg.sender) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":54335:54468  function getMyTokensAtSale() external view returns (SelledNFT[] memory ret) {... */\n      swap1\n      jump\t// out\n        /* \"source/Marketplace.sol\":53042:53168  function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {... */\n    tag_123:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_375\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_189\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_375:\n        /* \"source/Marketplace.sol\":53129:53160  _allowedERC20 = newAllowedERC20 */\n      dup1\n      mload\n      tag_377\n      swap1\n        /* \"source/Marketplace.sol\":53129:53142  _allowedERC20 */\n      0x06\n      swap1\n        /* \"source/Marketplace.sol\":53129:53160  _allowedERC20 = newAllowedERC20 */\n      0x20\n      dup5\n      add\n      swap1\n      tag_378\n      jump\t// in\n    tag_377:\n      pop\n        /* \"source/Marketplace.sol\":53042:53168  function setAllowedERC20(address[] memory newAllowedERC20) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":52921:53036  function setFeeReceiver(address _newFeeReceiver) public onlyOwner {... */\n    tag_127:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_380\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_189\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_380:\n        /* \"source/Marketplace.sol\":52998:53010  _feeReceiver */\n      0x08\n        /* \"source/Marketplace.sol\":52998:53028  _feeReceiver = _newFeeReceiver */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":52921:53036  function setFeeReceiver(address _newFeeReceiver) public onlyOwner {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":2925:3126  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_131:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_383\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_189\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_383:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":3014:3036  newOwner != address(0) */\n      dup2\n      and\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13424:13426   */\n      0x20\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13406:13427   */\n      mstore\n        /* \"#utility.yul\":13463:13465   */\n      0x26\n        /* \"#utility.yul\":13443:13461   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13436:13466   */\n      mstore\n        /* \"#utility.yul\":13502:13536   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13482:13500   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13475:13537   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":13553:13571   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13546:13582   */\n      mstore\n        /* \"#utility.yul\":13599:13618   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_139\n        /* \"#utility.yul\":13222:13624   */\n      jump\n        /* \"source/Marketplace.sol\":3006:3079  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_385:\n        /* \"source/Marketplace.sol\":3090:3118  _transferOwnership(newOwner) */\n      tag_388\n        /* \"source/Marketplace.sol\":3109:3117  newOwner */\n      dup2\n        /* \"source/Marketplace.sol\":3090:3108  _transferOwnership */\n      tag_325\n        /* \"source/Marketplace.sol\":3090:3118  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_388:\n        /* \"source/Marketplace.sol\":2925:3126  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":53717:53978  function withdrawERC20(address erc20) public onlyOwner {... */\n    tag_135:\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      tag_390\n        /* \"source/Marketplace.sol\":1905:1916  _checkOwner */\n      tag_189\n        /* \"source/Marketplace.sol\":1905:1918  _checkOwner() */\n      jump\t// in\n    tag_390:\n        /* \"source/Marketplace.sol\":53840:53870  token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":53864:53868  this */\n      address\n        /* \"source/Marketplace.sol\":53840:53870  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":360:411   */\n      mstore\n        /* \"source/Marketplace.sol\":53805:53810  erc20 */\n      dup2\n      swap1\n        /* \"source/Marketplace.sol\":53783:53795  IERC20 token */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":53840:53855  token.balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":333:351   */\n      0x24\n      add\n        /* \"source/Marketplace.sol\":53840:53870  token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_394\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_394:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_395\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_395:\n        /* \"source/Marketplace.sol\":53822:53870  uint256 balance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"source/Marketplace.sol\":53881:53886  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":53881:53895  token.transfer */\n      and\n      0xa9059cbb\n        /* \"source/Marketplace.sol\":53896:53903  owner() */\n      tag_396\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"source/Marketplace.sol\":2019:2106  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"source/Marketplace.sol\":53896:53903  owner() */\n    tag_396:\n        /* \"source/Marketplace.sol\":53881:53913  token.transfer(owner(), balance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9473:9505   */\n      swap1\n      swap2\n      and\n        /* \"source/Marketplace.sol\":53881:53913  token.transfer(owner(), balance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9455:9506   */\n      mstore\n        /* \"#utility.yul\":9522:9540   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9515:9549   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9428:9446   */\n      0x44\n      add\n        /* \"source/Marketplace.sol\":53881:53913  token.transfer(owner(), balance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_399\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_399:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_400\n      swap2\n      swap1\n      tag_401\n      jump\t// in\n    tag_400:\n      pop\n        /* \"source/Marketplace.sol\":53929:53970  WithdrawERC20(msg.sender, erc20, balance) */\n      0x33c35f9541201e342d5e7467016e65a0a06182eb12a5f17103f71cec95b6cb29\n        /* \"source/Marketplace.sol\":53943:53953  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":53955:53960  erc20 */\n      dup5\n        /* \"source/Marketplace.sol\":53962:53969  balance */\n      dup4\n        /* \"source/Marketplace.sol\":53929:53970  WithdrawERC20(msg.sender, erc20, balance) */\n      mload(0x40)\n      tag_363\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n        /* \"source/Marketplace.sol\":35741:35839  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_166:\n        /* \"source/Marketplace.sol\":35799:35806  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":35826:35831  a / b */\n      tag_404\n        /* \"source/Marketplace.sol\":35830:35831  b */\n      dup3\n        /* \"source/Marketplace.sol\":35826:35827  a */\n      dup5\n        /* \"source/Marketplace.sol\":35826:35831  a / b */\n      tag_405\n      jump\t// in\n    tag_404:\n        /* \"source/Marketplace.sol\":35819:35831  return a / b */\n      swap4\n        /* \"source/Marketplace.sol\":35741:35839  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":35342:35440  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_167:\n        /* \"source/Marketplace.sol\":35400:35407  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":35427:35432  a * b */\n      tag_404\n        /* \"source/Marketplace.sol\":35431:35432  b */\n      dup3\n        /* \"source/Marketplace.sol\":35427:35428  a */\n      dup5\n        /* \"source/Marketplace.sol\":35427:35432  a * b */\n      tag_408\n      jump\t// in\n        /* \"source/Marketplace.sol\":34985:35083  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_171:\n        /* \"source/Marketplace.sol\":35043:35050  uint256 */\n      0x00\n        /* \"source/Marketplace.sol\":35070:35075  a - b */\n      tag_404\n        /* \"source/Marketplace.sol\":35074:35075  b */\n      dup3\n        /* \"source/Marketplace.sol\":35070:35071  a */\n      dup5\n        /* \"source/Marketplace.sol\":35070:35075  a - b */\n      tag_301\n      jump\t// in\n        /* \"source/Marketplace.sol\":6528:6733  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_173:\n        /* \"source/Marketplace.sol\":6629:6725  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_280\n        /* \"source/Marketplace.sol\":6649:6654  token */\n      dup5\n        /* \"source/Marketplace.sol\":6679:6706  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"source/Marketplace.sol\":6708:6712  from */\n      dup6\n        /* \"source/Marketplace.sol\":6714:6716  to */\n      dup6\n        /* \"source/Marketplace.sol\":6718:6723  value */\n      dup6\n        /* \"source/Marketplace.sol\":6656:6724  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_413\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_413:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"source/Marketplace.sol\":6629:6648  _callOptionalReturn */\n      tag_414\n        /* \"source/Marketplace.sol\":6629:6725  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n        /* \"source/Marketplace.sol\":54187:54327  function _clearSellToken(uint256 _tokenId) internal  {... */\n    tag_182:\n        /* \"source/Marketplace.sol\":54277:54319  SelledNFT(0, address(0), 0, address(0), 0) */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      dup2\n      mstore\n      dup4\n      dup6\n      add\n      dup4\n      dup2\n      mstore\n      0x60\n      dup6\n      add\n      dup5\n      dup2\n      mstore\n      0x80\n      dup7\n      add\n      dup6\n      dup2\n      mstore\n        /* \"source/Marketplace.sol\":54251:54274  _tokensAtSale[_tokenId] */\n      swap8\n      dup6\n      mstore\n        /* \"source/Marketplace.sol\":54251:54264  _tokensAtSale */\n      0x05\n        /* \"source/Marketplace.sol\":54251:54274  _tokensAtSale[_tokenId] */\n      swap1\n      swap4\n      mstore\n      swap5\n      swap1\n      swap3\n      keccak256\n        /* \"source/Marketplace.sol\":54251:54319  _tokensAtSale[_tokenId] = SelledNFT(0, address(0), 0, address(0), 0) */\n      swap3\n      mload\n      dup4\n      sstore\n      swap1\n      mload\n      0x01\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      or\n      swap1\n      swap2\n      sstore\n      swap4\n      mload\n      0x02\n      dup5\n      add\n      sstore\n      swap1\n      mload\n      0x03\n      dup4\n      add\n      dup1\n      sload\n      swap1\n      swap5\n      and\n      swap2\n      and\n      or\n      swap1\n      swap2\n      sstore\n      swap1\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      sstore\n        /* \"source/Marketplace.sol\":54187:54327  function _clearSellToken(uint256 _tokenId) internal  {... */\n      jump\t// out\n        /* \"source/Marketplace.sol\":51806:52462  function __delTokenForSale(uint256 _tokenId) internal  {... */\n    tag_184:\n        /* \"source/Marketplace.sol\":51876:51892  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":51893:51916  _tokensIdsAtSale.length */\n      dup1\n      sload\n        /* \"source/Marketplace.sol\":51925:51933  _tokenId */\n      dup3\n      swap2\n        /* \"source/Marketplace.sol\":51876:51892  _tokensIdsAtSale */\n      swap1\n        /* \"source/Marketplace.sol\":51893:51920  _tokensIdsAtSale.length - 1 */\n      tag_417\n      swap1\n        /* \"source/Marketplace.sol\":51919:51920  1 */\n      0x01\n      swap1\n        /* \"source/Marketplace.sol\":51893:51920  _tokensIdsAtSale.length - 1 */\n      tag_301\n      jump\t// in\n    tag_417:\n        /* \"source/Marketplace.sol\":51876:51921  _tokensIdsAtSale[_tokensIdsAtSale.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_419\n      jumpi\n      tag_419\n      tag_197\n      jump\t// in\n    tag_419:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"source/Marketplace.sol\":51876:51933  _tokensIdsAtSale[_tokensIdsAtSale.length - 1] == _tokenId */\n      sub\n        /* \"source/Marketplace.sol\":51872:52005  if (_tokensIdsAtSale[_tokensIdsAtSale.length - 1] == _tokenId) {... */\n      tag_421\n      jumpi\n        /* \"source/Marketplace.sol\":51950:51966  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":51950:51972  _tokensIdsAtSale.pop() */\n      dup1\n      sload\n      dup1\n      tag_423\n      jumpi\n      tag_423\n      tag_424\n      jump\t// in\n    tag_423:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":51806:52462  function __delTokenForSale(uint256 _tokenId) internal  {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":51872:52005  if (_tokensIdsAtSale[_tokensIdsAtSale.length - 1] == _tokenId) {... */\n    tag_421:\n        /* \"source/Marketplace.sol\":52015:52027  bool hasItem */\n      0x00\n      dup1\n      dup1\n        /* \"source/Marketplace.sol\":52074:52295  for(uint256 i = 0; i < _tokensIdsAtSale.length; i++) {... */\n    tag_426:\n        /* \"source/Marketplace.sol\":52097:52113  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":52097:52120  _tokensIdsAtSale.length */\n      sload\n        /* \"source/Marketplace.sol\":52093:52120  i < _tokensIdsAtSale.length */\n      dup2\n      lt\n        /* \"source/Marketplace.sol\":52074:52295  for(uint256 i = 0; i < _tokensIdsAtSale.length; i++) {... */\n      iszero\n      tag_427\n      jumpi\n        /* \"source/Marketplace.sol\":52169:52177  _tokenId */\n      dup4\n        /* \"source/Marketplace.sol\":52146:52162  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":52163:52164  i */\n      dup3\n        /* \"source/Marketplace.sol\":52146:52165  _tokensIdsAtSale[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_430\n      jumpi\n      tag_430\n      tag_197\n      jump\t// in\n    tag_430:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"source/Marketplace.sol\":52146:52177  _tokensIdsAtSale[i] == _tokenId */\n      sub\n        /* \"source/Marketplace.sol\":52142:52284  if (_tokensIdsAtSale[i] == _tokenId) {... */\n      tag_432\n      jumpi\n        /* \"source/Marketplace.sol\":52208:52212  true */\n      0x01\n        /* \"source/Marketplace.sol\":52198:52212  hasItem = true */\n      swap3\n      pop\n        /* \"source/Marketplace.sol\":52243:52244  i */\n      dup1\n        /* \"source/Marketplace.sol\":52231:52244  needIndex = i */\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":52263:52268  break */\n      jump(tag_427)\n        /* \"source/Marketplace.sol\":52142:52284  if (_tokensIdsAtSale[i] == _tokenId) {... */\n    tag_432:\n        /* \"source/Marketplace.sol\":52122:52125  i++ */\n      dup1\n      tag_433\n      dup2\n      tag_201\n      jump\t// in\n    tag_433:\n      swap2\n      pop\n      pop\n        /* \"source/Marketplace.sol\":52074:52295  for(uint256 i = 0; i < _tokensIdsAtSale.length; i++) {... */\n      jump(tag_426)\n    tag_427:\n      pop\n        /* \"source/Marketplace.sol\":52309:52316  hasItem */\n      dup2\n        /* \"source/Marketplace.sol\":52305:52455  if (hasItem) {... */\n      iszero\n      tag_365\n      jumpi\n        /* \"source/Marketplace.sol\":52363:52379  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":52380:52403  _tokensIdsAtSale.length */\n      dup1\n      sload\n        /* \"source/Marketplace.sol\":52380:52405  _tokensIdsAtSale.length-1 */\n      tag_435\n      swap1\n        /* \"source/Marketplace.sol\":52404:52405  1 */\n      0x01\n      swap1\n        /* \"source/Marketplace.sol\":52380:52405  _tokensIdsAtSale.length-1 */\n      tag_301\n      jump\t// in\n    tag_435:\n        /* \"source/Marketplace.sol\":52363:52406  _tokensIdsAtSale[_tokensIdsAtSale.length-1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_437\n      jumpi\n      tag_437\n      tag_197\n      jump\t// in\n    tag_437:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"source/Marketplace.sol\":52333:52349  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":52350:52359  needIndex */\n      dup3\n        /* \"source/Marketplace.sol\":52333:52360  _tokensIdsAtSale[needIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_440\n      jumpi\n      tag_440\n      tag_197\n      jump\t// in\n    tag_440:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"source/Marketplace.sol\":52333:52406  _tokensIdsAtSale[needIndex] = _tokensIdsAtSale[_tokensIdsAtSale.length-1] */\n      sstore\n        /* \"source/Marketplace.sol\":52421:52437  _tokensIdsAtSale */\n      0x07\n        /* \"source/Marketplace.sol\":52421:52443  _tokensIdsAtSale.pop() */\n      dup1\n      sload\n      dup1\n      tag_443\n      jumpi\n      tag_443\n      tag_424\n      jump\t// in\n    tag_443:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"source/Marketplace.sol\":51861:52462  {... */\n      pop\n      pop\n        /* \"source/Marketplace.sol\":51806:52462  function __delTokenForSale(uint256 _tokenId) internal  {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":2184:2316  function _checkOwner() internal view virtual {... */\n    tag_189:\n        /* \"source/Marketplace.sol\":2065:2072  address */\n      0x00\n        /* \"source/Marketplace.sol\":2092:2098  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Marketplace.sol\":736:746  msg.sender */\n      caller\n        /* \"source/Marketplace.sol\":2248:2271  owner() == _msgSender() */\n      eq\n        /* \"source/Marketplace.sol\":2240:2308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14640:14642   */\n      0x20\n        /* \"source/Marketplace.sol\":2240:2308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14622:14643   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14659:14677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14652:14682   */\n      mstore\n        /* \"#utility.yul\":14718:14752   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14698:14716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14691:14753   */\n      mstore\n        /* \"#utility.yul\":14770:14788   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":2240:2308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_139\n        /* \"#utility.yul\":14438:14794   */\n      jump\n        /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_325:\n        /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n      0x00\n        /* \"source/Marketplace.sol\":3379:3385  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":3396:3413  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"source/Marketplace.sol\":3379:3385  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"source/Marketplace.sol\":3360:3376  address oldOwner */\n      swap1\n        /* \"source/Marketplace.sol\":3429:3469  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"source/Marketplace.sol\":3349:3477  {... */\n      pop\n        /* \"source/Marketplace.sol\":3286:3477  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":9231:9947  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_414:\n        /* \"source/Marketplace.sol\":9655:9678  bytes memory returndata */\n      0x00\n        /* \"source/Marketplace.sol\":9681:9750  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_456\n        /* \"source/Marketplace.sol\":9709:9713  data */\n      dup3\n        /* \"source/Marketplace.sol\":9681:9750  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"source/Marketplace.sol\":9689:9694  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":9681:9708  address(token).functionCall */\n      and\n      tag_457\n      swap1\n        /* \"source/Marketplace.sol\":9681:9750  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_456:\n        /* \"source/Marketplace.sol\":9765:9782  returndata.length */\n      dup1\n      mload\n        /* \"source/Marketplace.sol\":9655:9750  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":9765:9786  returndata.length > 0 */\n      iszero\n        /* \"source/Marketplace.sol\":9761:9940  if (returndata.length > 0) {... */\n      tag_365\n      jumpi\n        /* \"source/Marketplace.sol\":9862:9872  returndata */\n      dup1\n        /* \"source/Marketplace.sol\":9851:9881  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_459\n      swap2\n      swap1\n      tag_401\n      jump\t// in\n    tag_459:\n        /* \"source/Marketplace.sol\":9843:9928  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_365\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15001:15003   */\n      0x20\n        /* \"source/Marketplace.sol\":9843:9928  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14983:15004   */\n      mstore\n        /* \"#utility.yul\":15040:15042   */\n      0x2a\n        /* \"#utility.yul\":15020:15038   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15013:15043   */\n      mstore\n        /* \"#utility.yul\":15079:15113   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":15059:15077   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15052:15114   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":15130:15148   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15123:15163   */\n      mstore\n        /* \"#utility.yul\":15180:15199   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":9843:9928  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_139\n        /* \"#utility.yul\":14799:15205   */\n      jump\n        /* \"source/Marketplace.sol\":42812:43041  function functionCall(... */\n    tag_457:\n        /* \"source/Marketplace.sol\":42949:42961  bytes memory */\n      0x60\n        /* \"source/Marketplace.sol\":42981:43033  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_465\n        /* \"source/Marketplace.sol\":43003:43009  target */\n      dup5\n        /* \"source/Marketplace.sol\":43011:43015  data */\n      dup5\n        /* \"source/Marketplace.sol\":43017:43018  0 */\n      0x00\n        /* \"source/Marketplace.sol\":43020:43032  errorMessage */\n      dup6\n        /* \"source/Marketplace.sol\":42981:43002  functionCallWithValue */\n      tag_466\n        /* \"source/Marketplace.sol\":42981:43033  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_465:\n        /* \"source/Marketplace.sol\":42974:43033  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"source/Marketplace.sol\":42812:43041  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":43898:44353  function functionCallWithValue(... */\n    tag_466:\n        /* \"source/Marketplace.sol\":44068:44080  bytes memory */\n      0x60\n        /* \"source/Marketplace.sol\":44126:44131  value */\n      dup3\n        /* \"source/Marketplace.sol\":44101:44122  address(this).balance */\n      selfbalance\n        /* \"source/Marketplace.sol\":44101:44131  address(this).balance >= value */\n      lt\n      iszero\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_468\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15412:15414   */\n      0x20\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15394:15415   */\n      mstore\n        /* \"#utility.yul\":15451:15453   */\n      0x26\n        /* \"#utility.yul\":15431:15449   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15424:15454   */\n      mstore\n        /* \"#utility.yul\":15490:15524   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":15470:15488   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15463:15525   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":15541:15559   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15534:15570   */\n      mstore\n        /* \"#utility.yul\":15587:15606   */\n      0x84\n      add\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_139\n        /* \"#utility.yul\":15210:15612   */\n      jump\n        /* \"source/Marketplace.sol\":44093:44174  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_468:\n        /* \"source/Marketplace.sol\":44186:44198  bool success */\n      0x00\n        /* \"source/Marketplace.sol\":44200:44223  bytes memory returndata */\n      dup1\n        /* \"source/Marketplace.sol\":44227:44233  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":44227:44238  target.call */\n      and\n        /* \"source/Marketplace.sol\":44246:44251  value */\n      dup6\n        /* \"source/Marketplace.sol\":44253:44257  data */\n      dup8\n        /* \"source/Marketplace.sol\":44227:44258  target.call{value: value}(data) */\n      mload(0x40)\n      tag_471\n      swap2\n      swap1\n      tag_472\n      jump\t// in\n    tag_471:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_475\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_474)\n    tag_475:\n      0x60\n      swap2\n      pop\n    tag_474:\n      pop\n        /* \"source/Marketplace.sol\":44185:44258  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"source/Marketplace.sol\":44276:44345  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_476\n        /* \"source/Marketplace.sol\":44303:44309  target */\n      dup8\n        /* \"source/Marketplace.sol\":44311:44318  success */\n      dup4\n        /* \"source/Marketplace.sol\":44320:44330  returndata */\n      dup4\n        /* \"source/Marketplace.sol\":44332:44344  errorMessage */\n      dup8\n        /* \"source/Marketplace.sol\":44276:44302  verifyCallResultFromTarget */\n      tag_477\n        /* \"source/Marketplace.sol\":44276:44345  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_476:\n        /* \"source/Marketplace.sol\":44269:44345  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"source/Marketplace.sol\":43898:44353  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Marketplace.sol\":46471:47115  function verifyCallResultFromTarget(... */\n    tag_477:\n        /* \"source/Marketplace.sol\":46656:46668  bytes memory */\n      0x60\n        /* \"source/Marketplace.sol\":46685:46692  success */\n      dup4\n        /* \"source/Marketplace.sol\":46681:47108  if (success) {... */\n      iszero\n      tag_479\n      jumpi\n        /* \"source/Marketplace.sol\":46713:46723  returndata */\n      dup3\n        /* \"source/Marketplace.sol\":46713:46730  returndata.length */\n      mload\n        /* \"source/Marketplace.sol\":46734:46735  0 */\n      0x00\n        /* \"source/Marketplace.sol\":46713:46735  returndata.length == 0 */\n      sub\n        /* \"source/Marketplace.sol\":46709:46999  if (returndata.length == 0) {... */\n      tag_483\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Marketplace.sol\":40351:40370  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n      tag_483\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16366:16368   */\n      0x20\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16348:16369   */\n      mstore\n        /* \"#utility.yul\":16405:16407   */\n      0x1d\n        /* \"#utility.yul\":16385:16403   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16378:16408   */\n      mstore\n        /* \"#utility.yul\":16444:16475   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":16424:16442   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16417:16476   */\n      mstore\n        /* \"#utility.yul\":16493:16511   */\n      0x64\n      add\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n      tag_139\n        /* \"#utility.yul\":16164:16517   */\n      jump\n        /* \"source/Marketplace.sol\":46923:46983  require(isContract(target), \"Address: call to non-contract\") */\n    tag_483:\n      pop\n        /* \"source/Marketplace.sol\":47020:47030  returndata */\n      dup2\n        /* \"source/Marketplace.sol\":47013:47030  return returndata */\n      jump(tag_465)\n        /* \"source/Marketplace.sol\":46681:47108  if (success) {... */\n    tag_479:\n        /* \"source/Marketplace.sol\":47063:47096  _revert(returndata, errorMessage) */\n      tag_465\n        /* \"source/Marketplace.sol\":47071:47081  returndata */\n      dup4\n        /* \"source/Marketplace.sol\":47083:47095  errorMessage */\n      dup4\n        /* \"source/Marketplace.sol\":47818:47835  returndata.length */\n      dup2\n      mload\n        /* \"source/Marketplace.sol\":47818:47839  returndata.length > 0 */\n      iszero\n        /* \"source/Marketplace.sol\":47814:48202  if (returndata.length > 0) {... */\n      tag_491\n      jumpi\n        /* \"source/Marketplace.sol\":48050:48060  returndata */\n      dup2\n        /* \"source/Marketplace.sol\":48044:48061  mload(returndata) */\n      mload\n        /* \"source/Marketplace.sol\":48107:48122  returndata_size */\n      dup1\n        /* \"source/Marketplace.sol\":48094:48104  returndata */\n      dup4\n        /* \"source/Marketplace.sol\":48090:48092  32 */\n      0x20\n        /* \"source/Marketplace.sol\":48086:48105  add(32, returndata) */\n      add\n        /* \"source/Marketplace.sol\":48079:48123  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"source/Marketplace.sol\":47814:48202  if (returndata.length > 0) {... */\n    tag_491:\n        /* \"source/Marketplace.sol\":48177:48189  errorMessage */\n      dup1\n        /* \"source/Marketplace.sol\":48170:48190  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_494\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_378:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_497\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_496:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_497\n      jumpi\n      dup3\n      mload\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_496)\n    tag_497:\n      pop\n      tag_498\n      swap3\n      swap2\n      pop\n      tag_499\n      jump\t// in\n    tag_498:\n      pop\n      swap1\n      jump\t// out\n    tag_499:\n    tag_500:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_498\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_500)\n        /* \"#utility.yul\":14:194   */\n    tag_32:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_508:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":422:553   */\n    tag_502:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":497:528   */\n      dup2\n      and\n        /* \"#utility.yul\":487:529   */\n      dup2\n      eq\n        /* \"#utility.yul\":477:547   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":543:544   */\n      0x00\n        /* \"#utility.yul\":540:541   */\n      dup1\n        /* \"#utility.yul\":533:545   */\n      revert\n        /* \"#utility.yul\":558:692   */\n    tag_503:\n        /* \"#utility.yul\":626:646   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":655:686   */\n      tag_513\n        /* \"#utility.yul\":626:646   */\n      dup2\n        /* \"#utility.yul\":655:686   */\n      tag_502\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":558:692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":697:944   */\n    tag_46:\n        /* \"#utility.yul\":756:762   */\n      0x00\n        /* \"#utility.yul\":809:811   */\n      0x20\n        /* \"#utility.yul\":797:806   */\n      dup3\n        /* \"#utility.yul\":788:795   */\n      dup5\n        /* \"#utility.yul\":784:807   */\n      sub\n        /* \"#utility.yul\":780:812   */\n      slt\n        /* \"#utility.yul\":777:829   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":825:826   */\n      0x00\n        /* \"#utility.yul\":822:823   */\n      dup1\n        /* \"#utility.yul\":815:827   */\n      revert\n        /* \"#utility.yul\":777:829   */\n    tag_515:\n        /* \"#utility.yul\":864:873   */\n      dup2\n        /* \"#utility.yul\":851:874   */\n      calldataload\n        /* \"#utility.yul\":883:914   */\n      tag_404\n        /* \"#utility.yul\":908:913   */\n      dup2\n        /* \"#utility.yul\":883:914   */\n      tag_502\n      jump\t// in\n        /* \"#utility.yul\":949:2061   */\n    tag_49:\n        /* \"#utility.yul\":1174:1176   */\n      0x20\n        /* \"#utility.yul\":1226:1247   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1296:1309   */\n      dup3\n      mload\n        /* \"#utility.yul\":1199:1217   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1318:1340   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1145:1149   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1174:1176   */\n      swap1\n        /* \"#utility.yul\":1359:1361   */\n      0x40\n      swap1\n        /* \"#utility.yul\":1377:1395   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1418:1433   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":1145:1149   */\n      dup6\n        /* \"#utility.yul\":1461:2035   */\n    tag_518:\n        /* \"#utility.yul\":1475:1481   */\n      dup3\n        /* \"#utility.yul\":1472:1473   */\n      dup2\n        /* \"#utility.yul\":1469:1482   */\n      lt\n        /* \"#utility.yul\":1461:2035   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":1534:1547   */\n      dup2\n      mload\n        /* \"#utility.yul\":1572:1581   */\n      dup1\n      mload\n        /* \"#utility.yul\":1560:1582   */\n      dup6\n      mstore\n        /* \"#utility.yul\":1621:1632   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":1615:1633   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1709:1730   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1695:1707   */\n      dup9\n      dup8\n      add\n        /* \"#utility.yul\":1688:1731   */\n      mstore\n        /* \"#utility.yul\":1771:1782   */\n      dup7\n      dup3\n      add\n        /* \"#utility.yul\":1765:1783   */\n      mload\n        /* \"#utility.yul\":1751:1763   */\n      dup8\n      dup8\n      add\n        /* \"#utility.yul\":1744:1784   */\n      mstore\n        /* \"#utility.yul\":1807:1811   */\n      0x60\n        /* \"#utility.yul\":1855:1866   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1849:1867   */\n      mload\n        /* \"#utility.yul\":1845:1872   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1831:1843   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":1824:1873   */\n      mstore\n        /* \"#utility.yul\":1896:1900   */\n      0x80\n        /* \"#utility.yul\":1940:1951   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1934:1952   */\n      mload\n        /* \"#utility.yul\":1920:1932   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":1913:1953   */\n      mstore\n        /* \"#utility.yul\":1664:1667   */\n      0xa0\n        /* \"#utility.yul\":1973:1987   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":2010:2025   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1673:1674   */\n      0x01\n        /* \"#utility.yul\":1490:1499   */\n      add\n        /* \"#utility.yul\":1461:2035   */\n      jump(tag_518)\n    tag_520:\n      pop\n        /* \"#utility.yul\":2052:2055   */\n      swap2\n      swap8\n        /* \"#utility.yul\":949:2061   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2440:2688   */\n    tag_73:\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2516:2522   */\n      dup1\n        /* \"#utility.yul\":2569:2571   */\n      0x40\n        /* \"#utility.yul\":2557:2566   */\n      dup4\n        /* \"#utility.yul\":2548:2555   */\n      dup6\n        /* \"#utility.yul\":2544:2567   */\n      sub\n        /* \"#utility.yul\":2540:2572   */\n      slt\n        /* \"#utility.yul\":2537:2589   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":2585:2586   */\n      0x00\n        /* \"#utility.yul\":2582:2583   */\n      dup1\n        /* \"#utility.yul\":2575:2587   */\n      revert\n        /* \"#utility.yul\":2537:2589   */\n    tag_524:\n      pop\n      pop\n        /* \"#utility.yul\":2608:2631   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2678:2680   */\n      0x20\n        /* \"#utility.yul\":2663:2681   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2650:2682   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2440:2688   */\n      jump\t// out\n        /* \"#utility.yul\":2693:3351   */\n    tag_84:\n        /* \"#utility.yul\":2864:2866   */\n      0x20\n        /* \"#utility.yul\":2916:2937   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2986:2999   */\n      dup3\n      mload\n        /* \"#utility.yul\":2889:2907   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3008:3030   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2835:2839   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2864:2866   */\n      swap1\n        /* \"#utility.yul\":3087:3102   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3061:3063   */\n      0x40\n        /* \"#utility.yul\":3046:3064   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2835:2839   */\n      dup5\n        /* \"#utility.yul\":3130:3325   */\n    tag_526:\n        /* \"#utility.yul\":3144:3150   */\n      dup2\n        /* \"#utility.yul\":3141:3142   */\n      dup2\n        /* \"#utility.yul\":3138:3151   */\n      lt\n        /* \"#utility.yul\":3130:3325   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":3209:3222   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3205:3244   */\n      and\n        /* \"#utility.yul\":3193:3245   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3300:3315   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3265:3277   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":3241:3242   */\n      0x01\n        /* \"#utility.yul\":3159:3168   */\n      add\n        /* \"#utility.yul\":3130:3325   */\n      jump(tag_526)\n    tag_528:\n      pop\n        /* \"#utility.yul\":3342:3345   */\n      swap1\n      swap7\n        /* \"#utility.yul\":2693:3351   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3356:3739   */\n    tag_96:\n        /* \"#utility.yul\":3433:3439   */\n      0x00\n        /* \"#utility.yul\":3441:3447   */\n      dup1\n        /* \"#utility.yul\":3449:3455   */\n      0x00\n        /* \"#utility.yul\":3502:3504   */\n      0x60\n        /* \"#utility.yul\":3490:3499   */\n      dup5\n        /* \"#utility.yul\":3481:3488   */\n      dup7\n        /* \"#utility.yul\":3477:3500   */\n      sub\n        /* \"#utility.yul\":3473:3505   */\n      slt\n        /* \"#utility.yul\":3470:3522   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":3518:3519   */\n      0x00\n        /* \"#utility.yul\":3515:3516   */\n      dup1\n        /* \"#utility.yul\":3508:3520   */\n      revert\n        /* \"#utility.yul\":3470:3522   */\n    tag_530:\n        /* \"#utility.yul\":3554:3563   */\n      dup4\n        /* \"#utility.yul\":3541:3564   */\n      calldataload\n        /* \"#utility.yul\":3531:3564   */\n      swap3\n      pop\n        /* \"#utility.yul\":3611:3613   */\n      0x20\n        /* \"#utility.yul\":3600:3609   */\n      dup5\n        /* \"#utility.yul\":3596:3614   */\n      add\n        /* \"#utility.yul\":3583:3615   */\n      calldataload\n        /* \"#utility.yul\":3573:3615   */\n      swap2\n      pop\n        /* \"#utility.yul\":3665:3667   */\n      0x40\n        /* \"#utility.yul\":3654:3663   */\n      dup5\n        /* \"#utility.yul\":3650:3668   */\n      add\n        /* \"#utility.yul\":3637:3669   */\n      calldataload\n        /* \"#utility.yul\":3678:3709   */\n      tag_531\n        /* \"#utility.yul\":3703:3708   */\n      dup2\n        /* \"#utility.yul\":3678:3709   */\n      tag_502\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":3728:3733   */\n      dup1\n        /* \"#utility.yul\":3718:3733   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3356:3739   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3952:4079   */\n    tag_205:\n        /* \"#utility.yul\":4013:4023   */\n      0x4e487b71\n        /* \"#utility.yul\":4008:4011   */\n      0xe0\n        /* \"#utility.yul\":4004:4024   */\n      shl\n        /* \"#utility.yul\":4001:4002   */\n      0x00\n        /* \"#utility.yul\":3994:4025   */\n      mstore\n        /* \"#utility.yul\":4044:4048   */\n      0x41\n        /* \"#utility.yul\":4041:4042   */\n      0x04\n        /* \"#utility.yul\":4034:4049   */\n      mstore\n        /* \"#utility.yul\":4068:4072   */\n      0x24\n        /* \"#utility.yul\":4065:4066   */\n      0x00\n        /* \"#utility.yul\":4058:4073   */\n      revert\n        /* \"#utility.yul\":4084:5205   */\n    tag_122:\n        /* \"#utility.yul\":4168:4174   */\n      0x00\n        /* \"#utility.yul\":4199:4201   */\n      0x20\n        /* \"#utility.yul\":4242:4244   */\n      dup1\n        /* \"#utility.yul\":4230:4239   */\n      dup4\n        /* \"#utility.yul\":4221:4228   */\n      dup6\n        /* \"#utility.yul\":4217:4240   */\n      sub\n        /* \"#utility.yul\":4213:4245   */\n      slt\n        /* \"#utility.yul\":4210:4262   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":4258:4259   */\n      0x00\n        /* \"#utility.yul\":4255:4256   */\n      dup1\n        /* \"#utility.yul\":4248:4260   */\n      revert\n        /* \"#utility.yul\":4210:4262   */\n    tag_535:\n        /* \"#utility.yul\":4298:4307   */\n      dup3\n        /* \"#utility.yul\":4285:4308   */\n      calldataload\n        /* \"#utility.yul\":4327:4345   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4368:4370   */\n      dup1\n        /* \"#utility.yul\":4360:4366   */\n      dup3\n        /* \"#utility.yul\":4357:4371   */\n      gt\n        /* \"#utility.yul\":4354:4388   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":4384:4385   */\n      0x00\n        /* \"#utility.yul\":4381:4382   */\n      dup1\n        /* \"#utility.yul\":4374:4386   */\n      revert\n        /* \"#utility.yul\":4354:4388   */\n    tag_536:\n        /* \"#utility.yul\":4422:4428   */\n      dup2\n        /* \"#utility.yul\":4411:4420   */\n      dup6\n        /* \"#utility.yul\":4407:4429   */\n      add\n        /* \"#utility.yul\":4397:4429   */\n      swap2\n      pop\n        /* \"#utility.yul\":4467:4474   */\n      dup6\n        /* \"#utility.yul\":4460:4464   */\n      0x1f\n        /* \"#utility.yul\":4456:4458   */\n      dup4\n        /* \"#utility.yul\":4452:4465   */\n      add\n        /* \"#utility.yul\":4448:4475   */\n      slt\n        /* \"#utility.yul\":4438:4493   */\n      tag_537\n      jumpi\n        /* \"#utility.yul\":4489:4490   */\n      0x00\n        /* \"#utility.yul\":4486:4487   */\n      dup1\n        /* \"#utility.yul\":4479:4491   */\n      revert\n        /* \"#utility.yul\":4438:4493   */\n    tag_537:\n        /* \"#utility.yul\":4525:4527   */\n      dup2\n        /* \"#utility.yul\":4512:4528   */\n      calldataload\n        /* \"#utility.yul\":4547:4549   */\n      dup2\n        /* \"#utility.yul\":4543:4545   */\n      dup2\n        /* \"#utility.yul\":4540:4550   */\n      gt\n        /* \"#utility.yul\":4537:4573   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":4553:4571   */\n      tag_539\n      tag_205\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":4599:4601   */\n      dup1\n        /* \"#utility.yul\":4596:4597   */\n      0x05\n        /* \"#utility.yul\":4592:4602   */\n      shl\n        /* \"#utility.yul\":4631:4633   */\n      0x40\n        /* \"#utility.yul\":4625:4634   */\n      mload\n        /* \"#utility.yul\":4694:4696   */\n      0x1f\n        /* \"#utility.yul\":4690:4697   */\n      not\n        /* \"#utility.yul\":4685:4687   */\n      0x3f\n        /* \"#utility.yul\":4681:4683   */\n      dup4\n        /* \"#utility.yul\":4677:4688   */\n      add\n        /* \"#utility.yul\":4673:4698   */\n      and\n        /* \"#utility.yul\":4665:4671   */\n      dup2\n        /* \"#utility.yul\":4661:4699   */\n      add\n        /* \"#utility.yul\":4749:4755   */\n      dup2\n        /* \"#utility.yul\":4737:4747   */\n      dup2\n        /* \"#utility.yul\":4734:4756   */\n      lt\n        /* \"#utility.yul\":4729:4731   */\n      dup6\n        /* \"#utility.yul\":4717:4727   */\n      dup3\n        /* \"#utility.yul\":4714:4732   */\n      gt\n        /* \"#utility.yul\":4711:4757   */\n      or\n        /* \"#utility.yul\":4708:4780   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":4760:4778   */\n      tag_541\n      tag_205\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":4796:4798   */\n      0x40\n        /* \"#utility.yul\":4789:4811   */\n      mstore\n        /* \"#utility.yul\":4846:4864   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":4880:4895   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":4922:4933   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":4918:4938   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":4950:4969   */\n      dup9\n      dup4\n      gt\n        /* \"#utility.yul\":4947:4986   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":4982:4983   */\n      0x00\n        /* \"#utility.yul\":4979:4980   */\n      dup1\n        /* \"#utility.yul\":4972:4984   */\n      revert\n        /* \"#utility.yul\":4947:4986   */\n    tag_542:\n        /* \"#utility.yul\":5006:5017   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":5026:5174   */\n    tag_543:\n        /* \"#utility.yul\":5042:5048   */\n      dup3\n        /* \"#utility.yul\":5037:5040   */\n      dup6\n        /* \"#utility.yul\":5034:5049   */\n      lt\n        /* \"#utility.yul\":5026:5174   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":5108:5131   */\n      tag_546\n        /* \"#utility.yul\":5127:5130   */\n      dup6\n        /* \"#utility.yul\":5108:5131   */\n      tag_503\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":5096:5132   */\n      dup5\n      mstore\n        /* \"#utility.yul\":5059:5071   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":5152:5164   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":5026:5174   */\n      jump(tag_543)\n    tag_545:\n        /* \"#utility.yul\":5193:5199   */\n      swap9\n        /* \"#utility.yul\":4084:5205   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5210:5550   */\n    tag_140:\n        /* \"#utility.yul\":5412:5414   */\n      0x20\n        /* \"#utility.yul\":5394:5415   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5451:5453   */\n      0x10\n        /* \"#utility.yul\":5431:5449   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5424:5454   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5485:5487   */\n      0x40\n        /* \"#utility.yul\":5470:5488   */\n      dup3\n      add\n        /* \"#utility.yul\":5463:5509   */\n      mstore\n        /* \"#utility.yul\":5541:5543   */\n      0x60\n        /* \"#utility.yul\":5526:5544   */\n      add\n      swap1\n        /* \"#utility.yul\":5210:5550   */\n      jump\t// out\n        /* \"#utility.yul\":6269:6453   */\n    tag_152:\n        /* \"#utility.yul\":6339:6345   */\n      0x00\n        /* \"#utility.yul\":6392:6394   */\n      0x20\n        /* \"#utility.yul\":6380:6389   */\n      dup3\n        /* \"#utility.yul\":6371:6378   */\n      dup5\n        /* \"#utility.yul\":6367:6390   */\n      sub\n        /* \"#utility.yul\":6363:6395   */\n      slt\n        /* \"#utility.yul\":6360:6412   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":6408:6409   */\n      0x00\n        /* \"#utility.yul\":6405:6406   */\n      dup1\n        /* \"#utility.yul\":6398:6410   */\n      revert\n        /* \"#utility.yul\":6360:6412   */\n    tag_551:\n      pop\n        /* \"#utility.yul\":6431:6447   */\n      mload\n      swap2\n        /* \"#utility.yul\":6269:6453   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7615:7990   */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7873:7888   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":7855:7889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7925:7940   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":7920:7922   */\n      0x20\n        /* \"#utility.yul\":7905:7923   */\n      dup3\n      add\n        /* \"#utility.yul\":7898:7941   */\n      mstore\n        /* \"#utility.yul\":7972:7974   */\n      0x40\n        /* \"#utility.yul\":7957:7975   */\n      dup2\n      add\n        /* \"#utility.yul\":7950:7984   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7805:7807   */\n      0x60\n        /* \"#utility.yul\":7790:7808   */\n      add\n      swap1\n        /* \"#utility.yul\":7615:7990   */\n      jump\t// out\n        /* \"#utility.yul\":8528:8655   */\n    tag_197:\n        /* \"#utility.yul\":8589:8599   */\n      0x4e487b71\n        /* \"#utility.yul\":8584:8587   */\n      0xe0\n        /* \"#utility.yul\":8580:8600   */\n      shl\n        /* \"#utility.yul\":8577:8578   */\n      0x00\n        /* \"#utility.yul\":8570:8601   */\n      mstore\n        /* \"#utility.yul\":8620:8624   */\n      0x32\n        /* \"#utility.yul\":8617:8618   */\n      0x04\n        /* \"#utility.yul\":8610:8625   */\n      mstore\n        /* \"#utility.yul\":8644:8648   */\n      0x24\n        /* \"#utility.yul\":8641:8642   */\n      0x00\n        /* \"#utility.yul\":8634:8649   */\n      revert\n        /* \"#utility.yul\":8660:8787   */\n    tag_504:\n        /* \"#utility.yul\":8721:8731   */\n      0x4e487b71\n        /* \"#utility.yul\":8716:8719   */\n      0xe0\n        /* \"#utility.yul\":8712:8732   */\n      shl\n        /* \"#utility.yul\":8709:8710   */\n      0x00\n        /* \"#utility.yul\":8702:8733   */\n      mstore\n        /* \"#utility.yul\":8752:8756   */\n      0x11\n        /* \"#utility.yul\":8749:8750   */\n      0x04\n        /* \"#utility.yul\":8742:8757   */\n      mstore\n        /* \"#utility.yul\":8776:8780   */\n      0x24\n        /* \"#utility.yul\":8773:8774   */\n      0x00\n        /* \"#utility.yul\":8766:8781   */\n      revert\n        /* \"#utility.yul\":8792:8927   */\n    tag_201:\n        /* \"#utility.yul\":8831:8834   */\n      0x00\n        /* \"#utility.yul\":8852:8869   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":8849:8892   */\n      tag_561\n      jumpi\n        /* \"#utility.yul\":8872:8890   */\n      tag_561\n      tag_504\n      jump\t// in\n    tag_561:\n      pop\n        /* \"#utility.yul\":8919:8920   */\n      0x01\n        /* \"#utility.yul\":8908:8921   */\n      add\n      swap1\n        /* \"#utility.yul\":8792:8927   */\n      jump\t// out\n        /* \"#utility.yul\":10774:10899   */\n    tag_290:\n        /* \"#utility.yul\":10839:10848   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10860:10870   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":10857:10893   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":10873:10891   */\n      tag_288\n      tag_504\n      jump\t// in\n        /* \"#utility.yul\":10904:11032   */\n    tag_301:\n        /* \"#utility.yul\":10971:10980   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":10992:11003   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":10989:11026   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":11006:11024   */\n      tag_288\n      tag_504\n      jump\t// in\n        /* \"#utility.yul\":11037:11288   */\n    tag_344:\n        /* \"#utility.yul\":11107:11113   */\n      0x00\n        /* \"#utility.yul\":11160:11162   */\n      0x20\n        /* \"#utility.yul\":11148:11157   */\n      dup3\n        /* \"#utility.yul\":11139:11146   */\n      dup5\n        /* \"#utility.yul\":11135:11158   */\n      sub\n        /* \"#utility.yul\":11131:11163   */\n      slt\n        /* \"#utility.yul\":11128:11180   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":11176:11177   */\n      0x00\n        /* \"#utility.yul\":11173:11174   */\n      dup1\n        /* \"#utility.yul\":11166:11178   */\n      revert\n        /* \"#utility.yul\":11128:11180   */\n    tag_574:\n        /* \"#utility.yul\":11208:11217   */\n      dup2\n        /* \"#utility.yul\":11202:11218   */\n      mload\n        /* \"#utility.yul\":11227:11258   */\n      tag_404\n        /* \"#utility.yul\":11252:11257   */\n      dup2\n        /* \"#utility.yul\":11227:11258   */\n      tag_502\n      jump\t// in\n        /* \"#utility.yul\":13629:13906   */\n    tag_401:\n        /* \"#utility.yul\":13696:13702   */\n      0x00\n        /* \"#utility.yul\":13749:13751   */\n      0x20\n        /* \"#utility.yul\":13737:13746   */\n      dup3\n        /* \"#utility.yul\":13728:13735   */\n      dup5\n        /* \"#utility.yul\":13724:13747   */\n      sub\n        /* \"#utility.yul\":13720:13752   */\n      slt\n        /* \"#utility.yul\":13717:13769   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":13765:13766   */\n      0x00\n        /* \"#utility.yul\":13762:13763   */\n      dup1\n        /* \"#utility.yul\":13755:13767   */\n      revert\n        /* \"#utility.yul\":13717:13769   */\n    tag_583:\n        /* \"#utility.yul\":13797:13806   */\n      dup2\n        /* \"#utility.yul\":13791:13807   */\n      mload\n        /* \"#utility.yul\":13850:13855   */\n      dup1\n        /* \"#utility.yul\":13843:13856   */\n      iszero\n        /* \"#utility.yul\":13836:13857   */\n      iszero\n        /* \"#utility.yul\":13829:13834   */\n      dup2\n        /* \"#utility.yul\":13826:13858   */\n      eq\n        /* \"#utility.yul\":13816:13876   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":13872:13873   */\n      0x00\n        /* \"#utility.yul\":13869:13870   */\n      dup1\n        /* \"#utility.yul\":13862:13874   */\n      revert\n        /* \"#utility.yul\":13911:14128   */\n    tag_405:\n        /* \"#utility.yul\":13951:13952   */\n      0x00\n        /* \"#utility.yul\":13977:13978   */\n      dup3\n        /* \"#utility.yul\":13967:14099   */\n      tag_586\n      jumpi\n        /* \"#utility.yul\":14021:14031   */\n      0x4e487b71\n        /* \"#utility.yul\":14016:14019   */\n      0xe0\n        /* \"#utility.yul\":14012:14032   */\n      shl\n        /* \"#utility.yul\":14009:14010   */\n      0x00\n        /* \"#utility.yul\":14002:14033   */\n      mstore\n        /* \"#utility.yul\":14056:14060   */\n      0x12\n        /* \"#utility.yul\":14053:14054   */\n      0x04\n        /* \"#utility.yul\":14046:14061   */\n      mstore\n        /* \"#utility.yul\":14084:14088   */\n      0x24\n        /* \"#utility.yul\":14081:14082   */\n      0x00\n        /* \"#utility.yul\":14074:14089   */\n      revert\n        /* \"#utility.yul\":13967:14099   */\n    tag_586:\n      pop\n        /* \"#utility.yul\":14113:14122   */\n      div\n      swap1\n        /* \"#utility.yul\":13911:14128   */\n      jump\t// out\n        /* \"#utility.yul\":14133:14301   */\n    tag_408:\n        /* \"#utility.yul\":14206:14215   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":14237:14246   */\n      dup2\n      iszero\n        /* \"#utility.yul\":14254:14269   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":14248:14270   */\n      dup5\n      eq\n        /* \"#utility.yul\":14234:14271   */\n      or\n        /* \"#utility.yul\":14224:14295   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":14275:14293   */\n      tag_288\n      tag_504\n      jump\t// in\n        /* \"#utility.yul\":14306:14433   */\n    tag_424:\n        /* \"#utility.yul\":14367:14377   */\n      0x4e487b71\n        /* \"#utility.yul\":14362:14365   */\n      0xe0\n        /* \"#utility.yul\":14358:14378   */\n      shl\n        /* \"#utility.yul\":14355:14356   */\n      0x00\n        /* \"#utility.yul\":14348:14379   */\n      mstore\n        /* \"#utility.yul\":14398:14402   */\n      0x31\n        /* \"#utility.yul\":14395:14396   */\n      0x04\n        /* \"#utility.yul\":14388:14403   */\n      mstore\n        /* \"#utility.yul\":14422:14426   */\n      0x24\n        /* \"#utility.yul\":14419:14420   */\n      0x00\n        /* \"#utility.yul\":14412:14427   */\n      revert\n        /* \"#utility.yul\":15617:15867   */\n    tag_505:\n        /* \"#utility.yul\":15702:15703   */\n      0x00\n        /* \"#utility.yul\":15712:15825   */\n    tag_595:\n        /* \"#utility.yul\":15726:15732   */\n      dup4\n        /* \"#utility.yul\":15723:15724   */\n      dup2\n        /* \"#utility.yul\":15720:15733   */\n      lt\n        /* \"#utility.yul\":15712:15825   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":15802:15813   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":15796:15814   */\n      mload\n        /* \"#utility.yul\":15783:15794   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":15776:15815   */\n      mstore\n        /* \"#utility.yul\":15748:15750   */\n      0x20\n        /* \"#utility.yul\":15741:15751   */\n      add\n        /* \"#utility.yul\":15712:15825   */\n      jump(tag_595)\n    tag_597:\n      pop\n      pop\n        /* \"#utility.yul\":15859:15860   */\n      0x00\n        /* \"#utility.yul\":15841:15857   */\n      swap2\n      add\n        /* \"#utility.yul\":15834:15861   */\n      mstore\n        /* \"#utility.yul\":15617:15867   */\n      jump\t// out\n        /* \"#utility.yul\":15872:16159   */\n    tag_472:\n        /* \"#utility.yul\":16001:16004   */\n      0x00\n        /* \"#utility.yul\":16039:16045   */\n      dup3\n        /* \"#utility.yul\":16033:16046   */\n      mload\n        /* \"#utility.yul\":16055:16121   */\n      tag_599\n        /* \"#utility.yul\":16114:16120   */\n      dup2\n        /* \"#utility.yul\":16109:16112   */\n      dup5\n        /* \"#utility.yul\":16102:16106   */\n      0x20\n        /* \"#utility.yul\":16094:16100   */\n      dup8\n        /* \"#utility.yul\":16090:16107   */\n      add\n        /* \"#utility.yul\":16055:16121   */\n      tag_505\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":16137:16153   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":15872:16159   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16522:16918   */\n    tag_494:\n        /* \"#utility.yul\":16671:16673   */\n      0x20\n        /* \"#utility.yul\":16660:16669   */\n      dup2\n        /* \"#utility.yul\":16653:16674   */\n      mstore\n        /* \"#utility.yul\":16634:16638   */\n      0x00\n        /* \"#utility.yul\":16703:16709   */\n      dup3\n        /* \"#utility.yul\":16697:16710   */\n      mload\n        /* \"#utility.yul\":16746:16752   */\n      dup1\n        /* \"#utility.yul\":16741:16743   */\n      0x20\n        /* \"#utility.yul\":16730:16739   */\n      dup5\n        /* \"#utility.yul\":16726:16744   */\n      add\n        /* \"#utility.yul\":16719:16753   */\n      mstore\n        /* \"#utility.yul\":16762:16841   */\n      tag_602\n        /* \"#utility.yul\":16834:16840   */\n      dup2\n        /* \"#utility.yul\":16829:16831   */\n      0x40\n        /* \"#utility.yul\":16818:16827   */\n      dup6\n        /* \"#utility.yul\":16814:16832   */\n      add\n        /* \"#utility.yul\":16809:16811   */\n      0x20\n        /* \"#utility.yul\":16801:16807   */\n      dup8\n        /* \"#utility.yul\":16797:16812   */\n      add\n        /* \"#utility.yul\":16762:16841   */\n      tag_505\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":16902:16904   */\n      0x1f\n        /* \"#utility.yul\":16881:16896   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":16877:16906   */\n      and\n        /* \"#utility.yul\":16862:16907   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":16909:16911   */\n      0x40\n        /* \"#utility.yul\":16858:16912   */\n      add\n      swap3\n        /* \"#utility.yul\":16522:16918   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206d9fd803a033c9f8ce55d436f097fe945589fa9e234f4e66180b6795a5c3b5f164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2267": {
									"entryPoint": null,
									"id": 2267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2578": {
									"entryPoint": null,
									"id": 2578,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_42": {
									"entryPoint": null,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_130": {
									"entryPoint": 208,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"panic_error_0x41": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1691:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "228:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "245:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "252:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "257:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "238:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "285:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "278:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "278:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "302:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "485:1204:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "532:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "541:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "544:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "534:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "534:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "534:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "506:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "515:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "502:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "527:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "498:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "498:33:1"
															},
															"nodeType": "YulIf",
															"src": "495:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "557:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "597:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "567:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "567:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "557:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "616:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "626:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "620:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "637:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "681:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "692:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "677:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "647:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "637:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "705:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "725:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "736:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "721:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "721:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "715:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "715:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "705:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:39:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "773:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "784:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "763:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:25:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "797:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "815:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "819:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "811:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "811:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "807:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "801:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "852:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "861:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "864:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "854:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "854:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "854:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "840:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "848:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "837:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:14:1"
															},
															"nodeType": "YulIf",
															"src": "834:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "877:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "891:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "902:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "887:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "887:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "881:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "957:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "966:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "969:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "959:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "959:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "936:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "940:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "947:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:1"
															},
															"nodeType": "YulIf",
															"src": "918:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "982:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "992:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "986:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1026:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1016:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1020:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1013:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:10:1"
															},
															"nodeType": "YulIf",
															"src": "1010:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1055:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1069:1:1",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1072:2:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1065:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:10:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "1059:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1084:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1104:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1098:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1088:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1116:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "1154:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1158:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1150:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1150:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1167:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1163:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1163:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1134:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1120:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1231:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1233:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1233:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1233:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1190:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1202:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1187:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1187:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1210:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1222:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1207:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1184:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:46:1"
															},
															"nodeType": "YulIf",
															"src": "1181:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1269:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1273:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1262:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1262:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1262:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1293:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1304:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1297:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1326:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1334:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1319:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1319:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1319:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1346:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1357:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1365:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1377:34:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1399:2:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "1403:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1395:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1395:11:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1408:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1391:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:20:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "1381:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1443:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1452:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1455:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1445:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1445:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1445:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1426:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1434:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1423:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1423:19:1"
															},
															"nodeType": "YulIf",
															"src": "1420:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1468:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1483:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1487:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1479:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1479:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1472:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1555:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1576:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1611:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "1581:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1581:34:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1569:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1569:47:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1569:47:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1629:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1640:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1645:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1636:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1636:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1629:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1510:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1515:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1507:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1523:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1525:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1536:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1541:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1532:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1532:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1525:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1503:3:1",
																"statements": []
															},
															"src": "1499:159:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1667:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1677:6:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "427:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "438:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "450:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "458:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "466:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "474:6:1",
														"type": ""
													}
												],
												"src": "328:1361:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let _1 := 32\n        value1 := abi_decode_address_fromMemory(add(headStart, _1))\n        value2 := mload(add(headStart, 64))\n        let offset := mload(add(headStart, 96))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _1)\n        }\n        value3 := memPtr\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x265D CODESIZE SUB DUP1 PUSH3 0x265D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3E SWAP2 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x49 CALLER PUSH3 0xD0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE PUSH1 0x3 DUP3 SWAP1 SSTORE DUP1 MLOAD PUSH3 0x8B SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x120 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH3 0xA3 JUMPI DUP3 PUSH3 0xA5 JUMP JUMPDEST CALLER JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x2D6 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x178 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x178 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x141 JUMP JUMPDEST POP PUSH3 0x186 SWAP3 SWAP2 POP PUSH3 0x18A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x186 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x18B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1F6 DUP6 PUSH3 0x1A1 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 PUSH3 0x207 DUP2 DUP8 ADD PUSH3 0x1A1 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x256 JUMPI PUSH3 0x256 PUSH3 0x1BE JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH3 0x27E JUMPI PUSH3 0x27E PUSH3 0x1BE JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP12 DUP4 GT ISZERO PUSH3 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH3 0x2C6 JUMPI PUSH3 0x2B6 DUP6 PUSH3 0x1A1 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH3 0x2A2 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2377 DUP1 PUSH3 0x2E6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC8F77899 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC8F77899 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xE8A35392 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xE9E4E160 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xEFDCD974 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xF4F3B200 EQ PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x785FA7CE EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x7C237EEA EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x952977F5 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xA096C5A2 EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5211AC2E GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x5211AC2E EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x527F2902 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x5B87F0F2 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x69C57352 EQ PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x47A5D43 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8CFBC19 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x10603023 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x19C8C1C5 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x512DDCF9 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0x21C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F14 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x192 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1F14 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1F6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F14 JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0x1F14 JUMP JUMPDEST PUSH2 0xD40 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x107E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FEB JUMP JUMPDEST PUSH2 0x10EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x254 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x1309 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x131D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x1381 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x192 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x27A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH2 0x1710 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x27A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x192 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x20A9 JUMP JUMPDEST PUSH2 0x1720 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x173F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x414 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x1769 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x434 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x46C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x216E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x4CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x54686973204E4654206973206E6F7420666F722073616C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204E617469766520636F696E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x2198 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F74206861766520656E6F75676820746F6B656E73206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x20796F75722062616C616E636520746F20706179 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x67D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0x2198 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646964206E6F7420616C6C6F772074686520636F6E74726163742074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F2073656E642074686520707572636861736520616D6F756E74000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 PUSH2 0x754 PUSH2 0x74C DUP4 PUSH1 0x64 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1932 JUMP JUMPDEST SWAP1 POP PUSH2 0x768 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SUB PUSH2 0x790 JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x79C DUP4 DUP4 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x7CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 CALLER SWAP2 AND DUP5 PUSH2 0x194A JUMP JUMPDEST DUP2 ISZERO PUSH2 0x7EC JUMPI PUSH1 0x8 SLOAD PUSH2 0x7EC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 CALLER SWAP2 AND DUP6 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x820 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x84E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH2 0x871 DUP8 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0x87A DUP8 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 DUP6 ADD DUP13 SWAP1 MSTORE SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xD369FDCFEB128F60117661EBD8F220B7265C0A04FEE0E9905EB8C6AB2767B9E5 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x902 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x985 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x938 JUMPI PUSH2 0x938 PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x973 JUMPI DUP2 PUSH2 0x96F DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x97D DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90D JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9A1 JUMPI PUSH2 0x9A1 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9DA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x9C7 PUSH2 0x1E59 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9BF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xBC8 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA0F JUMPI PUSH2 0xA0F PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xBB6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA5C JUMPI PUSH2 0xA5C PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xA83 JUMPI PUSH2 0xA83 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xAD8 JUMPI PUSH2 0xAD8 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xB11 JUMPI PUSH2 0xB11 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xB66 JUMPI PUSH2 0xB66 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 MSTORE POP SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xB9B JUMPI PUSH2 0xB9B PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0xBB1 SWAP1 PUSH2 0x2201 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP1 PUSH2 0xBC0 DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9E4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC42 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151A1A5CC81A5CC81B9BDD081E5BDD5C88139195 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 SWAP3 ADD SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0xC8C SWAP3 ADDRESS SWAP3 SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH2 0xCDD DUP2 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0xCE6 DUP2 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x8BF8E8F2F9D065B620F4E940D87122B03DD779D0FFD6A1590572E1E6D0416BEF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x216E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xDC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x54686973204E4654206973206E6F7420666F722073616C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F74207061696420656E6F75676820666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x73206974656D PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204552433230000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST CALLVALUE PUSH1 0x0 PUSH2 0xEB1 PUSH2 0x74C DUP4 PUSH1 0x64 PUSH2 0x191F JUMP JUMPDEST SWAP1 POP PUSH2 0xEC5 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SUB PUSH2 0xEED JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0xEF9 DUP4 DUP4 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF42 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 ISZERO PUSH2 0xF85 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xFB9 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE CALLER SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x89F5ADC174562E07C9C9B1CAE7109BBECB21CF9D1B2847E550042B8653C54A0E SWAP2 POP PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x106F DUP5 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0x1078 DUP5 PUSH2 0x1A22 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1086 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x2F15B7A52FC8A006876377705647ACBD22EED72DEC9B154AA290E286C06A3CD4 SWAP2 ADD PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH1 0x0 PUSH2 0x10FB DUP5 DUP4 PUSH2 0x221A JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP DUP3 LT PUSH2 0x1142 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH2 0x1125 PUSH2 0x1E59 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x111D JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP POP POP PUSH2 0x12A1 JUMP JUMPDEST DUP5 ISZERO DUP1 ISZERO PUSH2 0x114E JUMPI POP DUP4 ISZERO JUMPDEST ISZERO PUSH2 0x1158 JUMPI POP PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x1167 JUMPI POP PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x1173 DUP4 DUP4 PUSH2 0x222D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1191 JUMPI PUSH2 0x1191 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11CA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x11B7 PUSH2 0x1E59 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x11AF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1299 JUMPI PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11EC JUMPI PUSH2 0x11EC PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE DUP3 DUP6 MSTORE PUSH1 0x5 DUP1 DUP6 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 DUP9 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP5 DUP4 SWAP1 MSTORE SWAP4 SWAP1 SWAP3 MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP5 MLOAD SWAP1 SWAP3 POP DUP2 SWAP1 DUP6 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x126B JUMPI PUSH2 0x126B PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP5 DUP1 PUSH2 0x1281 SWAP1 PUSH2 0x2201 JUMP JUMPDEST SWAP6 POP POP POP POP DUP1 DUP1 PUSH2 0x1291 SWAP1 PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11CF JUMP JUMPDEST POP SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x12FF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12E1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1311 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x131B PUSH1 0x0 PUSH2 0x1BA7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1378 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x133E JUMPI PUSH2 0x133E PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x1366 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x1370 DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1321 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x216E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1418 SWAP2 SWAP1 PUSH2 0x2240 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x146E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x14BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x153C JUMPI PUSH2 0x14D6 DUP2 PUSH2 0x131D JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x153C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204552433230206E6F7420616C6C6F77656420617320612074726164 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x696E672063757272656E6379 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP9 DUP2 MSTORE CALLER DUP2 DUP6 ADD DUP2 DUP2 MSTORE DUP3 DUP6 ADD DUP11 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE DUP15 DUP13 MSTORE PUSH1 0x5 SWAP1 SWAP10 MSTORE SWAP10 DUP8 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD DUP5 DUP7 ADD DUP1 SLOAD SWAP2 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x2 DUP6 ADD SSTORE SWAP8 MLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP2 DUP4 AND SWAP2 SWAP1 SWAP10 AND OR SWAP1 SWAP8 SSTORE SWAP4 MLOAD SWAP1 DUP6 ADD SSTORE SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x15FB SWAP3 SWAP2 ADDRESS SWAP2 DUP10 SWAP2 ADD PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1629 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1666 DUP4 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16CD JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xA4292E75F7EAFDE90821610C4CABFC298540C274B50A7EA784A529A2B8A4A6F SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x4524387B4311078B7531910A140A6975002B10ACA4CF12255E98DA8F1FF1B35B SWAP1 PUSH1 0x60 ADD PUSH2 0x16C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x171B CALLER PUSH2 0x907 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1728 PUSH2 0x1B4D JUMP JUMPDEST DUP1 MLOAD PUSH2 0x173B SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1E9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1747 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1771 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH2 0x17DF DUP2 PUSH2 0x1BA7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x17EA PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1833 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1857 SWAP2 SWAP1 PUSH2 0x2198 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x187A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18EB SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST POP PUSH32 0x33C35F9541201E342D5E7467016E65A0A06182EB12A5F17103F71CEC95B6CB29 CALLER DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16C0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192B DUP3 DUP5 PUSH2 0x227F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192B DUP3 DUP5 PUSH2 0x22A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192B DUP3 DUP5 PUSH2 0x222D JUMP JUMPDEST PUSH2 0x1078 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x196B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP5 DUP2 MSTORE PUSH1 0x80 DUP7 ADD DUP6 DUP2 MSTORE SWAP8 DUP6 MSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP5 SWAP1 SWAP3 KECCAK256 SWAP3 MLOAD DUP4 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE SWAP4 MLOAD PUSH1 0x2 DUP5 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD SWAP1 SWAP5 AND SWAP2 AND OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1A35 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x222D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1A45 JUMPI PUSH2 0x1A45 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0x1A7F JUMPI PUSH1 0x7 DUP1 SLOAD DUP1 PUSH2 0x1A66 JUMPI PUSH2 0x1A66 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1AD0 JUMPI DUP4 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1AA2 JUMPI PUSH2 0x1AA2 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0x1ABE JUMPI PUSH1 0x1 SWAP3 POP DUP1 SWAP2 POP PUSH2 0x1AD0 JUMP JUMPDEST DUP1 PUSH2 0x1AC8 DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A84 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x170B JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0x1AE7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x222D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1AF7 JUMPI PUSH2 0x1AF7 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1B15 JUMPI PUSH2 0x1B15 PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x7 DUP1 SLOAD DUP1 PUSH2 0x1B32 JUMPI PUSH2 0x1B32 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x131B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CC9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x170B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C6A SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0x170B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CD8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1CE0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D5D SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D9A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DB0 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1DBB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E2A JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1E23 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1E23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST POP DUP2 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x1CD8 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1E3F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x230E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1EEF JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1EEF JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1EBA JUMP JUMPDEST POP PUSH2 0x1EFB SWAP3 SWAP2 POP PUSH2 0x1EFF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1EFB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1F4D DUP2 PUSH2 0x1F2D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x192B DUP2 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1FDE JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 DUP8 ADD MSTORE DUP7 DUP3 ADD MLOAD DUP8 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP7 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1F8C JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x204E JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2029 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x206F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2088 DUP2 PUSH2 0x1F2D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x20FA JUMPI PUSH2 0x20FA PUSH2 0x2093 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x211F JUMPI PUSH2 0x211F PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x213D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x2162 JUMPI PUSH2 0x2153 DUP6 PUSH2 0x1F42 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x2142 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2213 JUMPI PUSH2 0x2213 PUSH2 0x21EB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A1 PUSH2 0x21EB JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A1 PUSH2 0x21EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x192B DUP2 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x226F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x192B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x229C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x12A1 JUMPI PUSH2 0x12A1 PUSH2 0x21EB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22E9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22D1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2304 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x22CE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x232D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x22CE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x9FD803A033C9F8CE55D436F097FE SWAP5 SSTORE DUP10 STATICCALL SWAP15 0x23 0x4F 0x4E PUSH7 0x180B6795A5C3B5 CALL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "50386:10833:0:-:0;;;51318:1;51296:23;;51353:1;51328:26;;52470:344;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1740:32;736:10;1740:18;:32::i;:::-;49087:5;49077:15;;-1:-1:-1;;;;49077:15:0;;;-1:-1:-1;52623:25:0;;-1:-1:-1;;;;;;52623:25:0;-1:-1:-1;;;;;52623:25:0;;;;;52659:9;:22;;;52692:30;;;;:13;;:30;;;;;:::i;:::-;-1:-1:-1;;;;;;52749:27:0;;;52748:58;;52793:13;52748:58;;;52780:10;52748:58;52733:12;:73;;-1:-1:-1;;;;;;52733:73:0;-1:-1:-1;;;;;52733:73:0;;;;;;;;;;-1:-1:-1;50386:10833:0;;-1:-1:-1;;;50386:10833:0;3286:191;3360:16;3379:6;;-1:-1:-1;;;;;3396:17:0;;;-1:-1:-1;;;;;;3396:17:0;;;;;;3429:40;;3379:6;;;;;;;3429:40;;3360:16;3429:40;3349:128;3286:191;:::o;50386:10833::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;50386:10833:0;-1:-1:-1;;;;;50386:10833:0;;;;;;;;;;;-1:-1:-1;50386:10833:0;;;;;;;-1:-1:-1;50386:10833:0;;;-1:-1:-1;50386:10833:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:1;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1361;450:6;458;466;474;527:3;515:9;506:7;502:23;498:33;495:53;;;544:1;541;534:12;495:53;567:40;597:9;567:40;:::i;:::-;557:50;;626:2;647:49;692:2;681:9;677:18;647:49;:::i;:::-;736:2;721:18;;715:25;784:2;769:18;;763:25;637:59;;-1:-1:-1;715:25:1;-1:-1:-1;;;;;;837:14:1;;;834:34;;;864:1;861;854:12;834:34;902:6;891:9;887:22;877:32;;947:7;940:4;936:2;932:13;928:27;918:55;;969:1;966;959:12;918:55;998:2;992:9;1020:2;1016;1013:10;1010:36;;;1026:18;;:::i;:::-;1072:2;1069:1;1065:10;1104:2;1098:9;1167:2;1163:7;1158:2;1154;1150:11;1146:25;1138:6;1134:38;1222:6;1210:10;1207:22;1202:2;1190:10;1187:18;1184:46;1181:72;;;1233:18;;:::i;:::-;1269:2;1262:22;1319:18;;;1353:15;;;;-1:-1:-1;1395:11:1;;;1391:20;;;1423:19;;;1420:39;;;1455:1;1452;1445:12;1420:39;1479:11;;;;1499:159;1515:6;1510:3;1507:15;1499:159;;;1581:34;1611:3;1581:34;:::i;:::-;1569:47;;1532:12;;;;1636;;;;1499:159;;;328:1361;;;;-1:-1:-1;328:1361:1;;-1:-1:-1;;;;;;;328:1361:1:o;:::-;50386:10833:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__addTokenToSale_2460": {
									"entryPoint": null,
									"id": 2460,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__delTokenForSale_2537": {
									"entryPoint": 6690,
									"id": 2537,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_callOptionalReturn_440": {
									"entryPoint": 7159,
									"id": 440,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_73": {
									"entryPoint": 6989,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_clearSellToken_2764": {
									"entryPoint": 6562,
									"id": 2764,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_2242": {
									"entryPoint": null,
									"id": 2242,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_130": {
									"entryPoint": 7079,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyNFT_3382": {
									"entryPoint": 3392,
									"id": 3382,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyNFTbyERC20_3240": {
									"entryPoint": 1081,
									"id": 3240,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deSellNFT_3549": {
									"entryPoint": 3024,
									"id": 3549,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_1824": {
									"entryPoint": 6431,
									"id": 1824,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_2067": {
									"entryPoint": 7392,
									"id": 2067,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_2003": {
									"entryPoint": 7369,
									"id": 2003,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAllowedERC20_2620": {
									"entryPoint": 4775,
									"id": 2620,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getFeeReceiver_2586": {
									"entryPoint": null,
									"id": 2586,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMyTokensAtSale_2777": {
									"entryPoint": 5904,
									"id": 2777,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokensAtSaleCount_2908": {
									"entryPoint": null,
									"id": 2908,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokensAtSale_3039": {
									"entryPoint": 4332,
									"id": 3039,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getTradeFee_2728": {
									"entryPoint": null,
									"id": 2728,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserTokensAtSale_2899": {
									"entryPoint": 2311,
									"id": 2899,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isAllowedERC20_2651": {
									"entryPoint": 4893,
									"id": 2651,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_1931": {
									"entryPoint": null,
									"id": 1931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isMarketPlaceContract_2431": {
									"entryPoint": null,
									"id": 2431,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@marketNft_2417": {
									"entryPoint": null,
									"id": 2417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_1809": {
									"entryPoint": 6450,
									"id": 1809,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_59": {
									"entryPoint": null,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_2276": {
									"entryPoint": null,
									"id": 2276,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_87": {
									"entryPoint": 4873,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_218": {
									"entryPoint": 6474,
									"id": 218,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@sellNFT_3489": {
									"entryPoint": 4993,
									"id": 3489,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setAllowedERC20_2611": {
									"entryPoint": 5920,
									"id": 2611,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFeeReceiver_2598": {
									"entryPoint": 5951,
									"id": 2598,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTradeFee_2740": {
									"entryPoint": 2298,
									"id": 2740,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_1794": {
									"entryPoint": 6462,
									"id": 1794,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_110": {
									"entryPoint": 5993,
									"id": 110,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2198": {
									"entryPoint": 7611,
									"id": 2198,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@version_2420": {
									"entryPoint": null,
									"id": 2420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawERC20_2720": {
									"entryPoint": 6114,
									"id": 2720,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawWei_2680": {
									"entryPoint": 4222,
									"id": 2680,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 8002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 8768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 8282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8625,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$638__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8910,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 8888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8661,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8339,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 7981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16920:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "315:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "325:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "337:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "348:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "333:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "333:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "325:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "367:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "382:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "398:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "403:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "394:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "394:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "407:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "390:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "390:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "378:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "378:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "360:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "360:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$638__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "295:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "306:4:1",
														"type": ""
													}
												],
												"src": "199:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "467:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "531:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "543:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "533:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "533:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "533:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "490:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "501:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "516:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "521:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "512:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "512:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "525:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "508:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "508:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "497:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "497:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "487:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:50:1"
															},
															"nodeType": "YulIf",
															"src": "477:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "456:5:1",
														"type": ""
													}
												],
												"src": "422:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "607:85:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "617:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "639:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "626:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "617:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "680:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "655:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "655:31:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "597:5:1",
														"type": ""
													}
												],
												"src": "558:134:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "767:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "822:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "825:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "788:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "797:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "784:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "784:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "809:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "780:32:1"
															},
															"nodeType": "YulIf",
															"src": "777:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "838:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "864:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "851:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "842:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "908:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "883:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "883:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "883:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "923:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "933:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "733:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "744:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "756:6:1",
														"type": ""
													}
												],
												"src": "697:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:907:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1164:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1174:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1168:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1185:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1203:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1214:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1199:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1199:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1189:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1233:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1244:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1226:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1226:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1256:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1267:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1260:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1282:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1302:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1296:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1286:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1325:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1333:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1318:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1349:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1359:2:1",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1353:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1370:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1381:9:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1392:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1377:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1370:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1404:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1422:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1430:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1418:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1408:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1442:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1451:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1446:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1510:525:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1524:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1540:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1534:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1534:13:1"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "1528:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1567:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "1578:2:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1572:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1572:9:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1560:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1560:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1560:22:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1595:38:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "1625:2:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1629:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1621:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1621:11:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1615:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1615:18:1"
																		},
																		"variables": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulTypedName",
																				"src": "1599:12:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1646:29:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1664:3:1",
																							"type": "",
																							"value": "160"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1669:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1660:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:11:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1673:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:19:1"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "1650:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1699:3:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1704:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1695:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1695:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "memberValue0",
																							"nodeType": "YulIdentifier",
																							"src": "1713:12:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "1727:2:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1709:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1709:21:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1688:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1688:43:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1688:43:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1755:3:1"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "1760:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1751:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1751:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1775:2:1"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "1779:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1771:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1771:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1765:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1765:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1744:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1744:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1744:40:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1797:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1807:4:1",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "1801:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1835:3:1"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "1840:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1831:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1831:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1859:2:1"
																										},
																										{
																											"name": "_5",
																											"nodeType": "YulIdentifier",
																											"src": "1863:2:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1855:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1855:11:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1849:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1849:18:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "1869:2:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:27:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1824:49:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:49:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1886:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1896:4:1",
																			"type": "",
																			"value": "0x80"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "1890:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1924:3:1"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "1929:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1920:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1920:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1944:2:1"
																								},
																								{
																									"name": "_6",
																									"nodeType": "YulIdentifier",
																									"src": "1948:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1940:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1940:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1934:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1934:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1913:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1913:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1913:40:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1966:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1977:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1982:4:1",
																					"type": "",
																					"value": "0xa0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1973:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1973:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1966:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2000:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2014:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2022:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2010:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2010:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2000:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1472:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1475:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1469:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1469:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1483:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1485:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1494:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1497:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1490:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1490:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1485:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1465:3:1",
																"statements": []
															},
															"src": "1461:574:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2044:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2052:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2044:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1123:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1134:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1145:4:1",
														"type": ""
													}
												],
												"src": "949:1112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2161:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2171:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2183:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2194:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2171:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2213:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2238:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2231:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2231:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2224:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2224:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2206:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2206:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2130:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2141:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2152:4:1",
														"type": ""
													}
												],
												"src": "2066:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2359:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2369:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2381:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2377:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2369:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2411:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2422:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2404:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2328:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2339:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2350:4:1",
														"type": ""
													}
												],
												"src": "2258:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2527:161:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2573:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2582:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2585:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2575:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2575:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2575:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2548:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2557:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2544:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2569:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2540:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:32:1"
															},
															"nodeType": "YulIf",
															"src": "2537:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2598:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2621:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2608:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2608:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2640:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2667:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2678:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2663:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2650:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2485:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2496:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2508:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2516:6:1",
														"type": ""
													}
												],
												"src": "2440:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2844:507:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2854:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2864:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2858:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2875:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2893:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2904:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2889:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "2879:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2923:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2934:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2916:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2916:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2946:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "2957:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "2950:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2972:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2992:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2986:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2986:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2976:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3015:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3023:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3008:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3008:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3008:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3039:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3050:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3061:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3046:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3046:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3039:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3073:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3091:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3099:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3087:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3087:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3077:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3111:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3120:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3115:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3179:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3200:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3215:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "3209:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3209:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3232:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3237:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3228:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3228:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3241:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "3224:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3224:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3205:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3205:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3193:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3193:52:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3193:52:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3258:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3269:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3274:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3265:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3265:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3258:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3290:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3304:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3312:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3300:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3300:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3290:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3141:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3144:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3138:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3152:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3154:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3163:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3166:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3159:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3159:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3154:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3134:3:1",
																"statements": []
															},
															"src": "3130:195:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3334:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3342:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3334:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2813:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2835:4:1",
														"type": ""
													}
												],
												"src": "2693:658:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3460:279:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3506:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3515:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3518:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3508:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3508:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3508:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3481:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3490:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3477:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3477:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3502:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3473:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3473:32:1"
															},
															"nodeType": "YulIf",
															"src": "3470:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3531:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3554:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3541:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3531:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3573:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3600:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3611:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3596:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3596:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3583:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3624:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3654:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3665:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3637:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3628:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3703:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3678:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3678:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3718:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3728:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3718:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3410:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3421:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3433:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3441:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3449:6:1",
														"type": ""
													}
												],
												"src": "3356:383:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3845:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3855:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3867:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3878:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3863:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3863:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3855:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3897:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3912:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3928:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3933:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3924:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3924:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3937:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3920:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3920:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3908:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3890:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3890:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3814:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3825:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3836:4:1",
														"type": ""
													}
												],
												"src": "3744:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3984:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4001:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4008:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4013:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4004:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4004:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3994:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3994:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4041:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4044:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4034:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4034:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4065:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4068:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4058:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4058:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4058:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3952:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4179:1026:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4189:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4199:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4193:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4246:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4255:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4258:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4248:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4248:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4248:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4221:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4217:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4217:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4242:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4213:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4213:32:1"
															},
															"nodeType": "YulIf",
															"src": "4210:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4271:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4298:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4285:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4285:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4275:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4317:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4327:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4321:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4372:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4381:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4384:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4374:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4374:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4374:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4360:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4368:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4357:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4357:14:1"
															},
															"nodeType": "YulIf",
															"src": "4354:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4397:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4411:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4422:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4407:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4407:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4401:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4477:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4486:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4489:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4479:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4479:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4479:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4456:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4460:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4452:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4452:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4467:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4448:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4448:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4441:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4441:35:1"
															},
															"nodeType": "YulIf",
															"src": "4438:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4502:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4525:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4512:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4512:16:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4506:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4551:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4553:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4553:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4553:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4543:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4547:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4540:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4540:10:1"
															},
															"nodeType": "YulIf",
															"src": "4537:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4582:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4596:1:1",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4599:2:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4592:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4592:10:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "4586:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4611:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4625:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4625:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4615:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4643:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4665:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "4681:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4685:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4677:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4677:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4694:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4690:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4690:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4673:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4661:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4661:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4647:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4758:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4760:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4760:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4760:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4717:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4729:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4714:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4714:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4737:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4749:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4734:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4734:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4711:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4711:46:1"
															},
															"nodeType": "YulIf",
															"src": "4708:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4796:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4800:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4789:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4789:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4789:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4820:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4831:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4824:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4853:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4861:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4846:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4846:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4873:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4884:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4892:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4880:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4880:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4873:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4904:34:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "4926:2:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "4930:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4922:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4922:11:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4935:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4918:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4918:20:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4908:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4970:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4979:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4982:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4972:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4972:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4972:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4953:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4961:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4950:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:19:1"
															},
															"nodeType": "YulIf",
															"src": "4947:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4995:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5010:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5014:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5006:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5006:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4999:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5082:92:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5103:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5127:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5108:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5108:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5096:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5096:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5096:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5145:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5156:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5161:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5152:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5152:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5145:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5037:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5042:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5034:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5034:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5050:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5052:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5063:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5068:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5059:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5059:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5052:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5030:3:1",
																"statements": []
															},
															"src": "5026:148:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5183:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5193:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5183:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4145:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4156:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4168:6:1",
														"type": ""
													}
												],
												"src": "4084:1121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5384:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5401:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5412:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5394:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5394:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5435:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5446:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5431:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5431:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5451:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5424:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5424:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5424:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5474:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5485:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5470:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5470:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5490:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5463:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5463:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5463:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5518:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5530:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5526:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5526:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5518:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5361:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5375:4:1",
														"type": ""
													}
												],
												"src": "5210:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5729:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5746:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5757:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5739:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5739:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5739:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5780:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5791:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5776:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5776:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5796:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5769:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5769:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5769:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5819:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5830:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5815:18:1"
																	},
																	{
																		"hexValue": "54686973204e4654206973206e6f7420666f722073616c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5835:26:1",
																		"type": "",
																		"value": "This NFT is not for sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5808:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5808:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5871:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5883:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5894:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5879:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5879:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5871:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5706:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5720:4:1",
														"type": ""
													}
												],
												"src": "5555:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6082:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6099:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6110:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6092:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6092:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6133:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6144:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6129:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6149:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6122:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6122:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6172:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6183:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6168:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6168:18:1"
																	},
																	{
																		"hexValue": "5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6188:34:1",
																		"type": "",
																		"value": "This token selled by Native coin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6161:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6161:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6161:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6232:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6244:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6255:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6240:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6232:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6059:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6073:4:1",
														"type": ""
													}
												],
												"src": "5908:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6350:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6396:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6405:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6408:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6398:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6398:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6398:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6371:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6380:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6367:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6392:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6363:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6363:32:1"
															},
															"nodeType": "YulIf",
															"src": "6360:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6421:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6437:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6431:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6431:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6421:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6316:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6327:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6339:6:1",
														"type": ""
													}
												],
												"src": "6269:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6632:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6649:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6660:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6642:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6642:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6642:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6679:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6699:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6672:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6672:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6672:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6722:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6733:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6718:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6718:18:1"
																	},
																	{
																		"hexValue": "596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6738:34:1",
																		"type": "",
																		"value": "You do not have enough tokens on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6711:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6711:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6711:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6793:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6804:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6789:18:1"
																	},
																	{
																		"hexValue": "20796f75722062616c616e636520746f20706179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6809:22:1",
																		"type": "",
																		"value": " your balance to pay"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6782:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6782:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6841:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6853:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6864:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6849:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6849:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6841:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6609:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6623:4:1",
														"type": ""
													}
												],
												"src": "6458:416:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7008:175:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7018:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7030:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7041:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7026:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7026:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7018:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7053:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7071:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7076:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7067:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7067:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7080:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7063:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7063:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7057:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7098:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7113:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7121:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7109:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7091:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7091:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7145:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7156:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7141:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7141:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7165:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7173:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7161:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7161:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7134:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7134:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7134:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6969:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6980:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6988:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6999:4:1",
														"type": ""
													}
												],
												"src": "6879:304:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7362:248:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7379:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7390:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7372:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7372:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7372:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7413:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7424:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7409:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7409:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7429:2:1",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7402:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7402:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7452:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7463:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7448:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7448:18:1"
																	},
																	{
																		"hexValue": "596f7520646964206e6f7420616c6c6f772074686520636f6e74726163742074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7468:34:1",
																		"type": "",
																		"value": "You did not allow the contract t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7441:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7441:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7441:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7523:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7534:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7519:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7519:18:1"
																	},
																	{
																		"hexValue": "6f2073656e642074686520707572636861736520616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7539:28:1",
																		"type": "",
																		"value": "o send the purchase amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7512:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7512:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7512:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7577:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7589:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7600:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7585:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7585:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7577:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7339:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7353:4:1",
														"type": ""
													}
												],
												"src": "7188:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7772:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7782:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7794:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7805:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7790:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7790:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7782:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7817:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7835:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7840:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7831:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7831:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7844:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7827:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7827:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7821:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7862:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7877:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7885:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7873:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7873:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7855:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7855:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7909:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7920:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7905:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7905:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7929:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7937:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7925:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7925:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7898:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7898:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7961:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7972:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7957:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7957:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7977:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7950:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7950:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7950:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7725:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7736:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7744:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7752:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7763:4:1",
														"type": ""
													}
												],
												"src": "7615:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8208:315:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8218:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8230:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8241:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8226:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8226:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8218:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8254:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8272:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8277:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8268:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8281:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8264:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8264:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8258:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8299:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8314:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8322:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8310:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8310:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8292:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8292:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8346:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8357:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8342:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8342:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8366:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8374:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8362:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8362:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8335:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8335:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8398:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8409:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8394:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8414:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8387:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8387:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8441:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8452:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8437:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8437:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "8461:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8469:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8457:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8457:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8430:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8430:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8430:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8493:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8504:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8489:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8489:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8510:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8482:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8482:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8482:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8145:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8156:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8164:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8172:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8180:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8188:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8199:4:1",
														"type": ""
													}
												],
												"src": "7995:528:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8560:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8577:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8584:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8589:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8580:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8580:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8570:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8570:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8570:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8617:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8620:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8610:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8610:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8641:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8644:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8634:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8634:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8528:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8692:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8709:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8716:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8721:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8712:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8702:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8702:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8702:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8749:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8752:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8742:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8742:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8742:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8773:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8776:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8766:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8766:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8660:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8839:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8870:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8872:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8872:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8872:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8855:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8866:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8862:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8862:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8852:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8852:17:1"
															},
															"nodeType": "YulIf",
															"src": "8849:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8901:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8912:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8919:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8908:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8908:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8901:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8821:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8831:3:1",
														"type": ""
													}
												],
												"src": "8792:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9106:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9123:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9134:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9116:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9116:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9157:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9168:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9153:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9153:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9173:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9146:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9146:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9146:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9196:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9207:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9192:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9192:18:1"
																	},
																	{
																		"hexValue": "54686973206973206e6f7420796f7572204e4654",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9212:22:1",
																		"type": "",
																		"value": "This is not your NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9185:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9185:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9185:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9244:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9256:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9267:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9252:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9252:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9244:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9083:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9097:4:1",
														"type": ""
													}
												],
												"src": "8932:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9410:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9420:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9432:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9443:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9428:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9428:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9420:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9462:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9477:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9493:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9498:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9489:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9489:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9502:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9485:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9485:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9473:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9473:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9455:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9455:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9455:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9526:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9537:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9522:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9522:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9542:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9515:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9515:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9371:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9382:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9390:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9401:4:1",
														"type": ""
													}
												],
												"src": "9281:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9734:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9751:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9762:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9744:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9744:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9785:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9796:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9781:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9781:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9801:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9774:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9774:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9774:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9824:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9835:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9820:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9820:18:1"
																	},
																	{
																		"hexValue": "596f752068617665206e6f74207061696420656e6f75676820666f7220746869",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9840:34:1",
																		"type": "",
																		"value": "You have not paid enough for thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9813:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9813:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9813:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9895:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9906:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9891:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9891:18:1"
																	},
																	{
																		"hexValue": "73206974656d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9911:8:1",
																		"type": "",
																		"value": "s item"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9884:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9884:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9884:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9929:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9941:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9952:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9937:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9937:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9929:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9711:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9725:4:1",
														"type": ""
													}
												],
												"src": "9560:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10141:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10158:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10169:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10151:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10151:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10151:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10192:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10203:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10188:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10188:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10208:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10181:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10181:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10181:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10231:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10242:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10227:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10227:18:1"
																	},
																	{
																		"hexValue": "5468697320746f6b656e2073656c6c6564206279204552433230",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10247:28:1",
																		"type": "",
																		"value": "This token selled by ERC20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10220:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10220:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10220:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10285:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10297:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10308:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10293:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10293:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10285:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10118:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10132:4:1",
														"type": ""
													}
												],
												"src": "9967:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10507:262:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10517:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10529:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10540:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10525:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10525:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10517:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10553:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10571:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10576:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10567:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10580:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10563:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10557:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10598:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10613:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10621:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10609:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10609:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10591:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10591:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10591:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10645:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10656:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10641:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10641:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10665:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10673:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10661:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10661:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10634:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10634:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10697:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10708:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10693:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10713:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10686:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10686:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10740:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10751:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10736:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10736:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10756:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10729:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10729:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10452:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10471:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10479:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10487:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10498:4:1",
														"type": ""
													}
												],
												"src": "10322:447:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10822:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10832:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10843:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10846:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10839:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10839:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10832:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10871:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10873:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10873:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10873:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10863:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10866:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10860:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10860:10:1"
															},
															"nodeType": "YulIf",
															"src": "10857:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10805:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10808:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10814:3:1",
														"type": ""
													}
												],
												"src": "10774:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10953:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10963:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10975:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10978:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10971:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10971:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10963:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11004:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11006:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11006:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11006:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "10995:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11001:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10992:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10992:11:1"
															},
															"nodeType": "YulIf",
															"src": "10989:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10935:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10938:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10944:4:1",
														"type": ""
													}
												],
												"src": "10904:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11118:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11164:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11173:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11176:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11166:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11166:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11166:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11139:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11148:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11135:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11135:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11160:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11131:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11131:32:1"
															},
															"nodeType": "YulIf",
															"src": "11128:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11189:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11208:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11202:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11202:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11193:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11252:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "11227:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11227:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11227:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11267:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11277:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11267:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11084:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11095:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11107:6:1",
														"type": ""
													}
												],
												"src": "11037:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11467:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11484:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11495:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11477:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11477:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11477:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11518:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11529:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11514:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11514:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11534:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11507:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11507:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11507:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11557:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11568:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11553:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11553:18:1"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11573:27:1",
																		"type": "",
																		"value": "You don't own this token!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11546:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11546:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11546:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11610:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11622:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11633:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11618:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11618:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11610:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11444:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11458:4:1",
														"type": ""
													}
												],
												"src": "11293:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11821:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11838:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11849:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11831:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11831:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11872:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11883:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11868:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11888:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11861:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11861:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11861:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11911:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11922:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11907:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11907:18:1"
																	},
																	{
																		"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11927:33:1",
																		"type": "",
																		"value": "Price must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11900:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11900:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11970:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11982:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11993:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11978:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11978:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11970:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11798:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11812:4:1",
														"type": ""
													}
												],
												"src": "11647:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12181:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12198:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12209:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12191:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12191:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12232:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12243:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12228:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12248:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12221:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12221:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12271:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12282:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12267:18:1"
																	},
																	{
																		"hexValue": "54686973204552433230206e6f7420616c6c6f77656420617320612074726164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12287:34:1",
																		"type": "",
																		"value": "This ERC20 not allowed as a trad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12260:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12260:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12260:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12342:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12353:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12338:18:1"
																	},
																	{
																		"hexValue": "696e672063757272656e6379",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12358:14:1",
																		"type": "",
																		"value": "ing currency"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12331:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12331:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12382:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12394:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12405:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12390:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12390:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12382:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12158:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12172:4:1",
														"type": ""
													}
												],
												"src": "12007:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12605:262:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12615:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12627:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12638:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12623:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12623:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12615:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12651:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12669:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12674:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12665:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12678:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12661:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12661:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12655:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12696:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12711:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12719:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12707:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12707:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12689:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12689:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12689:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12743:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12754:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12739:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12739:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12759:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12732:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12732:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12732:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12786:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12797:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12782:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "12806:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12814:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12802:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12802:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12775:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12775:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12838:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12849:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12834:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12834:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12854:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12827:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12827:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12827:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12550:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12561:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12569:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12577:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12585:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12596:4:1",
														"type": ""
													}
												],
												"src": "12420:447:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13029:188:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13039:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13051:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13062:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13047:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13047:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13039:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13081:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13096:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13112:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13117:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "13108:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13108:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13121:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13104:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13104:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13092:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13074:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13074:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13074:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13145:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13156:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13141:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13141:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13161:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13134:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13134:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13134:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13188:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13199:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13184:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13184:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13204:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13177:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13177:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13177:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12982:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12993:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13001:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13009:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13020:4:1",
														"type": ""
													}
												],
												"src": "12872:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13396:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13413:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13424:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13406:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13406:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13406:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13447:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13458:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13443:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13443:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13463:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13436:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13436:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13436:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13486:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13497:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13482:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13482:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13502:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13475:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13475:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13475:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13557:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13568:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13553:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13553:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13573:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13546:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13546:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13546:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13591:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13603:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13614:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13599:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13599:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13591:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13373:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13387:4:1",
														"type": ""
													}
												],
												"src": "13222:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13707:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13753:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13762:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13765:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13755:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13755:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13755:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13728:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13737:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13724:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13724:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13749:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13720:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13720:32:1"
															},
															"nodeType": "YulIf",
															"src": "13717:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13778:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13797:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13791:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13791:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13782:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13860:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13869:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13872:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13862:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13862:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13862:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13829:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "13850:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "13843:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13843:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13836:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13836:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13826:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13826:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13819:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13819:40:1"
															},
															"nodeType": "YulIf",
															"src": "13816:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13885:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13895:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13885:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13673:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13684:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13696:6:1",
														"type": ""
													}
												],
												"src": "13629:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13957:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13988:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14009:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14016:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14021:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "14012:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14012:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14002:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14002:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14002:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14053:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14056:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14046:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14046:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14046:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14081:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14084:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14074:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14074:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14074:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13977:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13970:9:1"
															},
															"nodeType": "YulIf",
															"src": "13967:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14108:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14117:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14120:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14113:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14113:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14108:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13942:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13945:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13951:1:1",
														"type": ""
													}
												],
												"src": "13911:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14185:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14195:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14210:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14213:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14206:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14206:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14195:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14273:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14275:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14275:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14275:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14244:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14237:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14237:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14251:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "14258:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "14267:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "14254:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14254:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "14248:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14248:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "14234:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14234:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14227:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14227:45:1"
															},
															"nodeType": "YulIf",
															"src": "14224:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14164:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14167:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14173:7:1",
														"type": ""
													}
												],
												"src": "14133:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14338:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14355:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14362:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14367:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14358:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14358:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14348:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14348:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14348:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14395:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14398:4:1",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14388:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14388:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14388:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14419:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14422:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14412:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14412:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14412:15:1"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "14306:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14612:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14629:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14640:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14622:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14622:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14663:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14674:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14659:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14679:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14652:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14652:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14702:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14713:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14698:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14718:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14691:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14691:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14762:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14774:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14785:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14770:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14770:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14762:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14589:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14603:4:1",
														"type": ""
													}
												],
												"src": "14438:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14973:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14990:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15001:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14983:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14983:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15024:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15035:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15020:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15020:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15040:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15013:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15013:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15013:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15063:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15074:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15059:18:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15079:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15052:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15052:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15052:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15134:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15145:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15130:18:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15150:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15123:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15123:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15172:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15184:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15195:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15180:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15180:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15172:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14950:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14964:4:1",
														"type": ""
													}
												],
												"src": "14799:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15384:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15401:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15412:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15394:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15394:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15435:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15446:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15431:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15431:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15451:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15424:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15424:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15424:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15474:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15485:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15470:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15470:18:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15490:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15463:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15463:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15463:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15545:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15556:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15541:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15541:18:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15561:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15534:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15534:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15534:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15579:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15591:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15602:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15587:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15587:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15579:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15361:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15375:4:1",
														"type": ""
													}
												],
												"src": "15210:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15683:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15693:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15702:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15697:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15762:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15787:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15792:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15783:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15783:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "15806:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15811:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15802:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15802:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15796:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15796:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15776:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15776:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15776:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15723:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15726:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15720:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15720:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15734:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15736:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15745:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15748:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15741:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15741:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15736:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15716:3:1",
																"statements": []
															},
															"src": "15712:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "15845:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15850:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15841:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15841:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15859:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15834:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15834:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15834:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15661:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15666:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15671:6:1",
														"type": ""
													}
												],
												"src": "15617:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16009:150:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16019:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16039:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16033:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16033:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16023:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16094:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16102:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16090:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16090:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16109:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16114:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16055:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16055:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16055:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16130:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16141:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16146:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16137:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16137:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16130:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15985:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15990:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16001:3:1",
														"type": ""
													}
												],
												"src": "15872:287:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16338:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16355:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16366:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16348:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16348:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16348:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16389:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16400:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16385:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16385:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16405:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16378:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16378:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16428:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16439:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16424:18:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16444:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16417:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16417:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16485:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16497:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16508:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16493:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16485:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16315:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16329:4:1",
														"type": ""
													}
												],
												"src": "16164:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16643:275:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16660:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16671:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16653:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16653:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16683:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16703:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16697:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16697:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16687:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16730:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16741:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16726:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16726:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16746:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16719:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16719:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16801:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16809:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16797:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16797:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16818:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16829:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16814:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16814:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16834:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16762:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16762:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16762:79:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16850:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16866:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "16885:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16893:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16881:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16881:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16902:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "16898:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16898:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16877:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16877:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16862:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16862:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16909:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16858:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16858:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16850:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16612:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16623:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16634:4:1",
														"type": ""
													}
												],
												"src": "16522:396:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$638__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, mload(_3))\n            let memberValue0 := mload(add(_3, _1))\n            let _4 := sub(shl(160, 1), 1)\n            mstore(add(pos, _1), and(memberValue0, _4))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _5 := 0x60\n            mstore(add(pos, _5), and(mload(add(_3, _5)), _4))\n            let _6 := 0x80\n            mstore(add(pos, _6), mload(add(_3, _6)))\n            pos := add(pos, 0xa0)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"This NFT is not for sale\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"This token selled by Native coin\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"You do not have enough tokens on\")\n        mstore(add(headStart, 96), \" your balance to pay\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"You did not allow the contract t\")\n        mstore(add(headStart, 96), \"o send the purchase amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"This is not your NFT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"You have not paid enough for thi\")\n        mstore(add(headStart, 96), \"s item\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"This token selled by ERC20\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"You don't own this token!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Price must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"This ERC20 not allowed as a trad\")\n        mstore(add(headStart, 96), \"ing currency\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC8F77899 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC8F77899 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xE8A35392 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xE9E4E160 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xEFDCD974 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xF4F3B200 EQ PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x785FA7CE EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x7C237EEA EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x952977F5 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xA096C5A2 EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5211AC2E GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x5211AC2E EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x527F2902 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x5B87F0F2 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x69C57352 EQ PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x47A5D43 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8CFBC19 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x10603023 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x19C8C1C5 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x512DDCF9 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0x21C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F14 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x192 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1F14 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1F6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F14 JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0x1F14 JUMP JUMPDEST PUSH2 0xD40 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x107E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FEB JUMP JUMPDEST PUSH2 0x10EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x254 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x1309 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x131D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x1381 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x192 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x27A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH2 0x1710 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x27A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x192 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x20A9 JUMP JUMPDEST PUSH2 0x1720 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x173F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x414 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x1769 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x434 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F52 JUMP JUMPDEST PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x46C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x216E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x4CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x54686973204E4654206973206E6F7420666F722073616C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204E617469766520636F696E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x2198 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F74206861766520656E6F75676820746F6B656E73206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x20796F75722062616C616E636520746F20706179 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x67D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0x2198 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646964206E6F7420616C6C6F772074686520636F6E74726163742074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F2073656E642074686520707572636861736520616D6F756E74000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 PUSH2 0x754 PUSH2 0x74C DUP4 PUSH1 0x64 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1932 JUMP JUMPDEST SWAP1 POP PUSH2 0x768 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SUB PUSH2 0x790 JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x79C DUP4 DUP4 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x7CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 CALLER SWAP2 AND DUP5 PUSH2 0x194A JUMP JUMPDEST DUP2 ISZERO PUSH2 0x7EC JUMPI PUSH1 0x8 SLOAD PUSH2 0x7EC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 CALLER SWAP2 AND DUP6 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x820 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x84E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH2 0x871 DUP8 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0x87A DUP8 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 DUP6 ADD DUP13 SWAP1 MSTORE SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xD369FDCFEB128F60117661EBD8F220B7265C0A04FEE0E9905EB8C6AB2767B9E5 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x902 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x985 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x938 JUMPI PUSH2 0x938 PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x973 JUMPI DUP2 PUSH2 0x96F DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x97D DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90D JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9A1 JUMPI PUSH2 0x9A1 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9DA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x9C7 PUSH2 0x1E59 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9BF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xBC8 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA0F JUMPI PUSH2 0xA0F PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xBB6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA5C JUMPI PUSH2 0xA5C PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xA83 JUMPI PUSH2 0xA83 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xAD8 JUMPI PUSH2 0xAD8 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xB11 JUMPI PUSH2 0xB11 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xB66 JUMPI PUSH2 0xB66 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 MSTORE POP SWAP1 POP DUP1 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xB9B JUMPI PUSH2 0xB9B PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0xBB1 SWAP1 PUSH2 0x2201 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP1 PUSH2 0xBC0 DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9E4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC42 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151A1A5CC81A5CC81B9BDD081E5BDD5C88139195 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 SWAP3 ADD SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0xC8C SWAP3 ADDRESS SWAP3 SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH2 0xCDD DUP2 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0xCE6 DUP2 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x8BF8E8F2F9D065B620F4E940D87122B03DD779D0FFD6A1590572E1E6D0416BEF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x216E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xDC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x54686973204E4654206973206E6F7420666F722073616C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F74207061696420656E6F75676820666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x73206974656D PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2073656C6C6564206279204552433230000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST CALLVALUE PUSH1 0x0 PUSH2 0xEB1 PUSH2 0x74C DUP4 PUSH1 0x64 PUSH2 0x191F JUMP JUMPDEST SWAP1 POP PUSH2 0xEC5 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SUB PUSH2 0xEED JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0xEF9 DUP4 DUP4 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF42 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 ISZERO PUSH2 0xF85 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xFB9 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE CALLER SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x89F5ADC174562E07C9C9B1CAE7109BBECB21CF9D1B2847E550042B8653C54A0E SWAP2 POP PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x106F DUP5 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0x1078 DUP5 PUSH2 0x1A22 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1086 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x2F15B7A52FC8A006876377705647ACBD22EED72DEC9B154AA290E286C06A3CD4 SWAP2 ADD PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH1 0x0 PUSH2 0x10FB DUP5 DUP4 PUSH2 0x221A JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP DUP3 LT PUSH2 0x1142 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH2 0x1125 PUSH2 0x1E59 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x111D JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP POP POP PUSH2 0x12A1 JUMP JUMPDEST DUP5 ISZERO DUP1 ISZERO PUSH2 0x114E JUMPI POP DUP4 ISZERO JUMPDEST ISZERO PUSH2 0x1158 JUMPI POP PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x1167 JUMPI POP PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x1173 DUP4 DUP4 PUSH2 0x222D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1191 JUMPI PUSH2 0x1191 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11CA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x11B7 PUSH2 0x1E59 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x11AF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1299 JUMPI PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11EC JUMPI PUSH2 0x11EC PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE DUP3 DUP6 MSTORE PUSH1 0x5 DUP1 DUP6 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 DUP9 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP5 DUP4 SWAP1 MSTORE SWAP4 SWAP1 SWAP3 MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP5 MLOAD SWAP1 SWAP3 POP DUP2 SWAP1 DUP6 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x126B JUMPI PUSH2 0x126B PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP5 DUP1 PUSH2 0x1281 SWAP1 PUSH2 0x2201 JUMP JUMPDEST SWAP6 POP POP POP POP DUP1 DUP1 PUSH2 0x1291 SWAP1 PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11CF JUMP JUMPDEST POP SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x12FF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12E1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1311 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x131B PUSH1 0x0 PUSH2 0x1BA7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1378 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x133E JUMPI PUSH2 0x133E PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x1366 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x1370 DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1321 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x216E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1418 SWAP2 SWAP1 PUSH2 0x2240 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x146E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x14BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x153C JUMPI PUSH2 0x14D6 DUP2 PUSH2 0x131D JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x153C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204552433230206E6F7420616C6C6F77656420617320612074726164 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x696E672063757272656E6379 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP9 DUP2 MSTORE CALLER DUP2 DUP6 ADD DUP2 DUP2 MSTORE DUP3 DUP6 ADD DUP11 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE DUP15 DUP13 MSTORE PUSH1 0x5 SWAP1 SWAP10 MSTORE SWAP10 DUP8 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD DUP5 DUP7 ADD DUP1 SLOAD SWAP2 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x2 DUP6 ADD SSTORE SWAP8 MLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP2 DUP4 AND SWAP2 SWAP1 SWAP10 AND OR SWAP1 SWAP8 SSTORE SWAP4 MLOAD SWAP1 DUP6 ADD SSTORE SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x15FB SWAP3 SWAP2 ADDRESS SWAP2 DUP10 SWAP2 ADD PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1629 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1666 DUP4 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16CD JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xA4292E75F7EAFDE90821610C4CABFC298540C274B50A7EA784A529A2B8A4A6F SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x4524387B4311078B7531910A140A6975002B10ACA4CF12255E98DA8F1FF1B35B SWAP1 PUSH1 0x60 ADD PUSH2 0x16C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x171B CALLER PUSH2 0x907 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1728 PUSH2 0x1B4D JUMP JUMPDEST DUP1 MLOAD PUSH2 0x173B SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1E9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1747 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1771 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH2 0x17DF DUP2 PUSH2 0x1BA7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x17EA PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1833 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1857 SWAP2 SWAP1 PUSH2 0x2198 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x187A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18EB SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST POP PUSH32 0x33C35F9541201E342D5E7467016E65A0A06182EB12A5F17103F71CEC95B6CB29 CALLER DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16C0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192B DUP3 DUP5 PUSH2 0x227F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192B DUP3 DUP5 PUSH2 0x22A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192B DUP3 DUP5 PUSH2 0x222D JUMP JUMPDEST PUSH2 0x1078 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x196B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP5 DUP2 MSTORE PUSH1 0x80 DUP7 ADD DUP6 DUP2 MSTORE SWAP8 DUP6 MSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP5 SWAP1 SWAP3 KECCAK256 SWAP3 MLOAD DUP4 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE SWAP4 MLOAD PUSH1 0x2 DUP5 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD SWAP1 SWAP5 AND SWAP2 AND OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1A35 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x222D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1A45 JUMPI PUSH2 0x1A45 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0x1A7F JUMPI PUSH1 0x7 DUP1 SLOAD DUP1 PUSH2 0x1A66 JUMPI PUSH2 0x1A66 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1AD0 JUMPI DUP4 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1AA2 JUMPI PUSH2 0x1AA2 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0x1ABE JUMPI PUSH1 0x1 SWAP3 POP DUP1 SWAP2 POP PUSH2 0x1AD0 JUMP JUMPDEST DUP1 PUSH2 0x1AC8 DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A84 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x170B JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0x1AE7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x222D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1AF7 JUMPI PUSH2 0x1AF7 PUSH2 0x21D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1B15 JUMPI PUSH2 0x1B15 PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x7 DUP1 SLOAD DUP1 PUSH2 0x1B32 JUMPI PUSH2 0x1B32 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x131B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CC9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x170B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C6A SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0x170B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CD8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1CE0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D5D SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D9A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DB0 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1DBB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E2A JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1E23 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1E23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST POP DUP2 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x1CD8 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1E3F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x230E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1EEF JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1EEF JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1EBA JUMP JUMPDEST POP PUSH2 0x1EFB SWAP3 SWAP2 POP PUSH2 0x1EFF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1EFB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1F4D DUP2 PUSH2 0x1F2D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x192B DUP2 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1FDE JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 DUP8 ADD MSTORE DUP7 DUP3 ADD MLOAD DUP8 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP7 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1F8C JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x204E JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2029 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x206F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2088 DUP2 PUSH2 0x1F2D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x20FA JUMPI PUSH2 0x20FA PUSH2 0x2093 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x211F JUMPI PUSH2 0x211F PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x213D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x2162 JUMPI PUSH2 0x2153 DUP6 PUSH2 0x1F42 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x2142 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2213 JUMPI PUSH2 0x2213 PUSH2 0x21EB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A1 PUSH2 0x21EB JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A1 PUSH2 0x21EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x192B DUP2 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x226F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x192B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x229C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x12A1 JUMPI PUSH2 0x12A1 PUSH2 0x21EB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22E9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22D1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2304 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x22CE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x232D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x22CE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x9FD803A033C9F8CE55D436F097FE SWAP5 SSTORE DUP10 STATICCALL SWAP15 0x23 0x4F 0x4E PUSH7 0x180B6795A5C3B5 CALL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "50386:10833:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56681:1721;;;;;;;;;;-1:-1:-1;56681:1721:0;;;;;:::i;:::-;;:::i;:::-;;51263:24;;;;;;;;;;-1:-1:-1;51263:24:0;;;;-1:-1:-1;;;;;51263:24:0;;;;;;-1:-1:-1;;;;;378:32:1;;;360:51;;348:2;333:18;51263:24:0;;;;;;;;54077:100;;;;;;;;;;-1:-1:-1;54077:100:0;;;;;:::i;:::-;;:::i;54476:1027::-;;;;;;;;;;-1:-1:-1;54476:1027:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;60720:496::-;;;;;;;;;;-1:-1:-1;60720:496:0;;;;;:::i;:::-;;:::i;58412:1232::-;;;;;;:::i;:::-;;:::i;53518:191::-;;;;;;;;;;;;;:::i;51363:90::-;;;;;;;;;;-1:-1:-1;51441:4:0;51363:90;;;2231:14:1;;2224:22;2206:41;;2194:2;2179:18;51363:90:0;2066:187:1;51296:23:0;;;;;;;;;;;;;;;;;;;2404:25:1;;;2392:2;2377:18;51296:23:0;2258:177:1;55630:1043:0;;;;;;;;;;-1:-1:-1;55630:1043:0;;;;;:::i;:::-;;:::i;49200:86::-;;;;;;;;;;-1:-1:-1;49247:4:0;49271:7;-1:-1:-1;;;49271:7:0;;;;49200:86;;53180:104;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2667:103::-;;;;;;;;;;;;;:::i;53292:218::-;;;;;;;;;;-1:-1:-1;53292:218:0;;;;;:::i;:::-;;:::i;59652:1060::-;;;;;;;;;;-1:-1:-1;59652:1060:0;;;;;:::i;:::-;;:::i;2019:87::-;;;;;;;;;;-1:-1:-1;2065:7:0;2092:6;-1:-1:-1;;;;;2092:6:0;2019:87;;53986:85;;;;;;;;;;-1:-1:-1;54054:9:0;;53986:85;;54335:133;;;;;;;;;;;;;:::i;55511:111::-;;;;;;;;;;-1:-1:-1;55591:16:0;:23;55511:111;;52822:93;;;;;;;;;;-1:-1:-1;52895:12:0;;-1:-1:-1;;;;;52895:12:0;52822:93;;53042:126;;;;;;;;;;-1:-1:-1;53042:126:0;;;;;:::i;:::-;;:::i;52921:115::-;;;;;;;;;;-1:-1:-1;52921:115:0;;;;;:::i;:::-;;:::i;2925:201::-;;;;;;;;;;-1:-1:-1;2925:201:0;;;;;:::i;:::-;;:::i;53717:261::-;;;;;;;;;;-1:-1:-1;53717:261:0;;;;;:::i;:::-;;:::i;56681:1721::-;49247:4;49271:7;-1:-1:-1;;;49271:7:0;;;;49525:9;49517:38;;;;-1:-1:-1;;;49517:38:0;;;;;;;:::i;:::-;;;;;;;;;56782:25:::1;::::0;;;:15:::1;:25;::::0;;;;;::::1;;:33;;:25:::0;:33:::1;56774:70;;;::::0;-1:-1:-1;;;56774:70:0;;5757:2:1;56774:70:0::1;::::0;::::1;5739:21:1::0;5796:2;5776:18;;;5769:30;-1:-1:-1;;;5815:18:1;;;5808:54;5879:18;;56774:70:0::1;5555:348:1::0;56774:70:0::1;56904:1;56863:23:::0;;;:13:::1;:23;::::0;;;;:29:::1;;::::0;-1:-1:-1;;;;;56863:29:0::1;56855:88;;;::::0;-1:-1:-1;;;56855:88:0;;6110:2:1;56855:88:0::1;::::0;::::1;6092:21:1::0;;;6129:18;;;6122:30;6188:34;6168:18;;;6161:62;6240:18;;56855:88:0::1;5908:356:1::0;56855:88:0::1;56956:15;56981:23:::0;;;:13:::1;:23;::::0;;;;;:29:::1;;::::0;57045:30;;-1:-1:-1;;;57045:30:0;;57064:10:::1;57045:30;::::0;::::1;360:51:1::0;-1:-1:-1;;;;;56981:29:0;;::::1;::::0;56956:15;56981:29;;57045:18:::1;::::0;333::1;;57045:30:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;57110:23;::::0;;;:13:::1;:23;::::0;;;;:29:::1;;::::0;57022:53;;-1:-1:-1;57094:45:0;::::1;;57086:110;;;::::0;-1:-1:-1;;;57086:110:0;;6660:2:1;57086:110:0::1;::::0;::::1;6642:21:1::0;6699:2;6679:18;;;6672:30;6738:34;6718:18;;;6711:62;-1:-1:-1;;;6789:18:1;;;6782:50;6849:19;;57086:110:0::1;6458:416:1::0;57086:110:0::1;57232:45;::::0;-1:-1:-1;;;57232:45:0;;57251:10:::1;57232:45;::::0;::::1;7091:34:1::0;57271:4:0::1;7141:18:1::0;;;7134:43;57207:22:0::1;::::0;-1:-1:-1;;;;;57232:18:0;::::1;::::0;::::1;::::0;7026::1;;57232:45:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;57314:23;::::0;;;:13:::1;:23;::::0;;;;:29:::1;;::::0;57207:70;;-1:-1:-1;57296:47:0;::::1;;57288:118;;;::::0;-1:-1:-1;;;57288:118:0;;7390:2:1;57288:118:0::1;::::0;::::1;7372:21:1::0;7429:2;7409:18;;;7402:30;7468:34;7448:18;;;7441:62;7539:28;7519:18;;;7512:56;7585:19;;57288:118:0::1;7188:422:1::0;57288:118:0::1;57429:14;57446:23:::0;;;:13:::1;:23;::::0;;;;:29:::1;;::::0;;57506:50:::1;57519:25;57446:29:::0;57540:3:::1;57519:12;:25::i;:::-;57546:9;;57506:12;:50::i;:::-;57486:70;;57605:7;2065::::0;2092:6;-1:-1:-1;;;;;2092:6:0;;2019:87;57605:7:::1;57571:23;::::0;;;:13:::1;:23;::::0;;;;:30:::1;;::::0;-1:-1:-1;;;;;57571:41:0;;::::1;:30:::0;::::1;:41:::0;57567:60:::1;;-1:-1:-1::0;57626:1:0::1;57567:60;57638:21;57662:31;57675:6;57683:9;57662:12;:31::i;:::-;57788:23;::::0;;;:13:::1;:23;::::0;;;;:30:::1;;::::0;57638:55;;-1:-1:-1;57706:152:0::1;::::0;-1:-1:-1;;;;;57706:25:0;;::::1;::::0;57754:10:::1;::::0;57788:30:::1;57638:55:::0;57706:25:::1;:152::i;:::-;57873:13:::0;;57869:192:::1;;57993:12;::::0;57903:146:::1;::::0;-1:-1:-1;;;;;57903:25:0;;::::1;::::0;57955:10:::1;::::0;57993:12:::1;58025:9:::0;57903:25:::1;:146::i;:::-;58071:9;::::0;:59:::1;::::0;-1:-1:-1;;;58071:59:0;;-1:-1:-1;;;;;58071:9:0;;::::1;::::0;:22:::1;::::0;:59:::1;::::0;58102:4:::1;::::0;58109:10:::1;::::0;58121:8;;58071:59:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;58169:5:0::1;58141:25:::0;;;:15:::1;:25;::::0;;;;:33;;-1:-1:-1;;58141:33:0::1;::::0;;-1:-1:-1;58185:25:0::1;58157:8:::0;58185:15:::1;:25::i;:::-;58221:27;58239:8;58221:17;:27::i;:::-;58279:23;::::0;;;:13:::1;:23;::::0;;;;;;;;:30:::1;::::0;::::1;::::0;58333:29:::1;::::0;::::1;::::0;58364::::1;::::0;;::::1;::::0;58266:128;;-1:-1:-1;;;;;58279:30:0;;::::1;8292:34:1::0;;58311:10:0::1;8342:18:1::0;;;8335:43;;;;8394:18;;;8387:34;;;58333:29:0;::::1;8452:2:1::0;8437:18;;8430:43;8504:3;8489:19;;8482:35;58266:128:0;;::::1;::::0;;;;8241:3:1;58266:128:0;;::::1;56763:1639;;;;;;56681:1721:::0;:::o;54077:100::-;1905:13;:11;:13::i;:::-;54145:9:::1;:24:::0;54077:100::o;54476:1027::-;54560:22;54600:16;54636:9;54631:148;54655:16;:23;54651:27;;54631:148;;;54749:6;-1:-1:-1;;;;;54704:51:0;:13;:34;54718:16;54735:1;54718:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;54704:34;;;;;;;;;;;;:41;;;-1:-1:-1;;;;;54704:41:0;:51;54700:67;;54757:10;;;;:::i;:::-;;;;54700:67;54680:3;;;;:::i;:::-;;;;54631:148;;;;54789:23;54831:8;54815:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;54789:51;;54862:1;54851:12;;54881:9;54876:596;54900:16;:23;54896:27;;54876:596;;;54994:6;-1:-1:-1;;;;;54949:51:0;:13;:34;54963:16;54980:1;54963:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;54949:34;;;;;;;;;;;;:41;;;-1:-1:-1;;;;;54949:41:0;:51;54945:516;;55021:26;55050:321;;;;;;;;55082:16;55099:1;55082:19;;;;;;;;:::i;:::-;;;;;;;;;55050:321;;;;55124:13;:34;55138:16;55155:1;55138:19;;;;;;;;:::i;:::-;;;;;;;;;55124:34;;;;;;;;;;;:41;;;;;;;;;;-1:-1:-1;;;;;55124:41:0;-1:-1:-1;;;;;55050:321:0;;;;;55188:13;:34;55202:16;55219:1;55202:19;;;;;;;;:::i;:::-;;;;;;;;;55188:34;;;;;;;;;;;:40;;;55050:321;;;;55251:13;:34;55265:16;55282:1;55265:19;;;;;;;;:::i;:::-;;;;;;;;;55251:34;;;;;;;;;;;:40;;;;;;;;;;-1:-1:-1;;;;;55251:40:0;-1:-1:-1;;;;;55050:321:0;;;;;55314:13;:34;55328:16;55345:1;55328:19;;;;;;;;:::i;:::-;;;;;;;;;55314:34;;;;;;;;;;;:38;;;55050:321;;;55021:350;;55407:9;55390:4;55395:8;55390:14;;;;;;;;:::i;:::-;;;;;;:26;;;;55435:10;;;;;:::i;:::-;;;;55002:459;54945:516;54925:3;;;;:::i;:::-;;;;54876:596;;;-1:-1:-1;55491:4:0;54476:1027;-1:-1:-1;;;54476:1027:0:o;60720:496::-;2065:7;2092:6;-1:-1:-1;;;;;2092:6:0;60778:10;:21;60775:130;;60838:23;;;;:13;:23;;;;;:30;;;-1:-1:-1;;;;;60838:30:0;60824:10;:44;60816:77;;;;-1:-1:-1;;;60816:77:0;;9134:2:1;60816:77:0;;;9116:21:1;9173:2;9153:18;;;9146:30;-1:-1:-1;;;9192:18:1;;;9185:50;9252:18;;60816:77:0;8932:344:1;60816:77:0;60917:9;;;;60955:23;;;:13;:23;;;;;;;:30;;;;60917:79;;-1:-1:-1;;;60917:79:0;;-1:-1:-1;;;;;60917:9:0;;;;:22;;:79;;60948:4;;60955:30;;;;60969:8;;60917:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;61037:5:0;61009:25;;;:15;:25;;;;;:33;;-1:-1:-1;;61009:33:0;;;-1:-1:-1;61061:25:0;61025:8;61061:15;:25::i;:::-;61097:27;61115:8;61097:17;:27::i;:::-;61167:23;;;;:13;:23;;;;;;;;;:30;;;61150:58;;-1:-1:-1;;;;;61167:30:0;;;9455:51:1;;9522:18;;;9515:34;;;61150:58:0;;9428:18:1;61150:58:0;;;;;;;;60720:496;:::o;58412:1232::-;49247:4;49271:7;-1:-1:-1;;;49271:7:0;;;;49525:9;49517:38;;;;-1:-1:-1;;;49517:38:0;;;;;;;:::i;:::-;58563:25:::1;::::0;;;:15:::1;:25;::::0;;;;;::::1;;:33;;:25:::0;:33:::1;58555:70;;;::::0;-1:-1:-1;;;58555:70:0;;5757:2:1;58555:70:0::1;::::0;::::1;5739:21:1::0;5796:2;5776:18;;;5769:30;-1:-1:-1;;;5815:18:1;;;5808:54;5879:18;;58555:70:0::1;5555:348:1::0;58555:70:0::1;58683:23;::::0;;;:13:::1;:23;::::0;;;;:29:::1;;::::0;58670:9:::1;:42;;58662:93;;;::::0;-1:-1:-1;;;58662:93:0;;9762:2:1;58662:93:0::1;::::0;::::1;9744:21:1::0;9801:2;9781:18;;;9774:30;9840:34;9820:18;;;9813:62;-1:-1:-1;;;9891:18:1;;;9884:36;9937:19;;58662:93:0::1;9560:402:1::0;58662:93:0::1;58859:1;58818:23:::0;;;:13:::1;:23;::::0;;;;:29:::1;;::::0;-1:-1:-1;;;;;58818:29:0::1;:43:::0;58810:82:::1;;;::::0;-1:-1:-1;;;58810:82:0;;10169:2:1;58810:82:0::1;::::0;::::1;10151:21:1::0;10208:2;10188:18;;;10181:30;10247:28;10227:18;;;10220:56;10293:18;;58810:82:0::1;9967:350:1::0;58810:82:0::1;58930:9;58913:14;58970:50;58983:25;58930:9:::0;59004:3:::1;58983:12;:25::i;58970:50::-;58950:70;;59069:7;2065::::0;2092:6;-1:-1:-1;;;;;2092:6:0;;2019:87;59069:7:::1;59035:23;::::0;;;:13:::1;:23;::::0;;;;:30:::1;;::::0;-1:-1:-1;;;;;59035:41:0;;::::1;:30:::0;::::1;:41:::0;59031:60:::1;;-1:-1:-1::0;59090:1:0::1;59031:60;59102:21;59126:31;59139:6;59147:9;59126:12;:31::i;:::-;59178:23;::::0;;;:13:::1;:23;::::0;;;;;:30:::1;;::::0;59170:63;;59102:55;;-1:-1:-1;;;;;;59178:30:0::1;::::0;59170:63;::::1;;;::::0;59102:55;;59170:63;;59178:23;59170:63;59102:55;59178:30;59170:63;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;59248:13:0;;59244:87:::1;;59286:12;::::0;59278:41:::1;::::0;-1:-1:-1;;;;;59286:12:0;;::::1;::::0;59278:41;::::1;;;::::0;59309:9;;59286:12:::1;59278:41:::0;59286:12;59278:41;59309:9;59286:12;59278:41;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;59244:87;59351:9;::::0;:59:::1;::::0;-1:-1:-1;;;59351:59:0;;-1:-1:-1;;;;;59351:9:0;;::::1;::::0;:22:::1;::::0;:59:::1;::::0;59382:4:::1;::::0;59389:10:::1;::::0;59401:8;;59351:59:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;59449:5:0::1;59421:25:::0;;;:15:::1;:25;::::0;;;;;;;:33;;-1:-1:-1;;59421:33:0::1;::::0;;59476:13:::1;:23:::0;;;;;;-1:-1:-1;59476:30:0;::::1;::::0;59530:29:::1;::::0;;::::1;::::0;59472:88;;-1:-1:-1;;;;;59476:30:0;;::::1;10591:34:1::0;;59508:10:0::1;10641:18:1::0;;;10634:43;;;;10693:18;;;10686:34;;;10751:2;10736:18;;10729:34;59472:88:0::1;::::0;-1:-1:-1;10540:3:1;10525:19;59472:88:0::1;;;;;;;59573:25;59589:8;59573:15;:25::i;:::-;59609:27;59627:8;59609:17;:27::i;:::-;58507:1137;;;58412:1232:::0;:::o;53518:191::-;1905:13;:11;:13::i;:::-;53618:36:::1;::::0;53586:21:::1;::::0;53626:10:::1;::::0;53618:36;::::1;;;::::0;53586:21;;53569:14:::1;53618:36:::0;53569:14;53618:36;53586:21;53626:10;53618:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;53670:31:0::1;::::0;;53682:10:::1;9455:51:1::0;;9537:2;9522:18;;9515:34;;;53670:31:0::1;::::0;9428:18:1;53670:31:0::1;9281:274:1::0;55630:1043:0;55727:22;55784:6;55767:14;55816;55825:5;55784:6;55816:14;:::i;:::-;55855:16;:23;55801:29;;-1:-1:-1;55845:33:0;;55841:64;;55887:18;;;55903:1;55887:18;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;55880:25;;;;;;55841:64;55920:11;;:25;;;;-1:-1:-1;55935:10:0;;55920:25;55916:61;;;-1:-1:-1;55954:16:0;:23;55916:61;55999:16;:23;55992:30;;55988:66;;;-1:-1:-1;56031:16:0;:23;55988:66;56075:13;56091;56098:6;56091:4;:13;:::i;:::-;56075:29;;56115:10;56140:23;56182:5;56166:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;56140:48:0;-1:-1:-1;56216:6:0;56199:445;56228:4;56224:1;:8;56199:445;;;56254:16;56273;56290:1;56273:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;56336:242;;;;;;;;;;;56391:23;;;:13;:23;;;;;;:30;;;;-1:-1:-1;;;;;56391:30:0;;;56336:242;;;;56440:29;;;;56336:242;;;;;;;56488:29;;;;;;;56336:242;;;;56536:23;;;;;;;;:27;;;;;56336:242;;;;56593:8;;56273:19;;-1:-1:-1;56336:242:0;;56593:4;;56598:2;;56593:8;;;;;;:::i;:::-;;;;;;:20;;;;56628:4;;;;;:::i;:::-;;;;56239:405;;56234:3;;;;;:::i;:::-;;;;56199:445;;;-1:-1:-1;56661:4:0;-1:-1:-1;;;;;55630:1043:0;;;;;:::o;53180:104::-;53227:16;53263:13;53256:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;53256:20:0;;;;;;;;;;;;;;;;;;;;;;;53180:104;:::o;2667:103::-;1905:13;:11;:13::i;:::-;2732:30:::1;2759:1;2732:18;:30::i;:::-;2667:103::o:0;53292:218::-;53352:4;;53369:111;53385:13;:20;53383:22;;53369:111;;;53439:13;53453:1;53439:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;53439:16:0;;;53430:25;;;;53426:42;;-1:-1:-1;53464:4:0;;53292:218;-1:-1:-1;;53292:218:0:o;53426:42::-;53406:3;;;;:::i;:::-;;;;53369:111;;;-1:-1:-1;53497:5:0;;53292:218;-1:-1:-1;;53292:218:0:o;59652:1060::-;49247:4;49271:7;-1:-1:-1;;;49271:7:0;;;;49525:9;49517:38;;;;-1:-1:-1;;;49517:38:0;;;;;;;:::i;:::-;59829:9:::1;::::0;:27:::1;::::0;-1:-1:-1;;;59829:27:0;;::::1;::::0;::::1;2404:25:1::0;;;59860:10:0::1;::::0;-1:-1:-1;;;;;59829:9:0::1;::::0;:17:::1;::::0;2377:18:1;;59829:27:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;59829:41:0::1;;59807:116;;;::::0;-1:-1:-1;;;59807:116:0;;11495:2:1;59807:116:0::1;::::0;::::1;11477:21:1::0;11534:2;11514:18;;;11507:30;11573:27;11553:18;;;11546:55;11618:18;;59807:116:0::1;11293:349:1::0;59807:116:0::1;59950:1;59942:5;:9;59934:53;;;::::0;-1:-1:-1;;;59934:53:0;;11849:2:1;59934:53:0::1;::::0;::::1;11831:21:1::0;11888:2;11868:18;;;11861:30;11927:33;11907:18;;;11900:61;11978:18;;59934:53:0::1;11647:355:1::0;59934:53:0::1;-1:-1:-1::0;;;;;60002:20:0;::::1;::::0;59998:172:::1;;60079:22;60094:6;60079:14;:22::i;:::-;:30;;60105:4;60079:30;60071:87;;;::::0;-1:-1:-1;;;60071:87:0;;12209:2:1;60071:87:0::1;::::0;::::1;12191:21:1::0;12248:2;12228:18;;;12221:30;12287:34;12267:18;;;12260:62;-1:-1:-1;;;12338:18:1;;;12331:42;12390:19;;60071:87:0::1;12007:408:1::0;60071:87:0::1;60182:25;::::0;;;:15:::1;:25;::::0;;;;;;;:32;;-1:-1:-1;;60182:32:0::1;60210:4;60182:32:::0;;::::1;::::0;;;60251:139;;::::1;::::0;::::1;::::0;;;;;60298:10:::1;60251:139:::0;;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;60251:139:0;;::::1;::::0;;;;;;60364:15:::1;60251:139:::0;;;;;;60225:23;;;:13:::1;:23:::0;;;;;;;:165;;;;;;;;::::1;::::0;;;;::::1;-1:-1:-1::0;;;;;;60225:165:0;;::::1;;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;::::1;;::::0;;;;;;;::::1;::::0;60401:9;:59;;-1:-1:-1;;;60401:59:0;;:9;::::1;::::0;:22:::1;::::0;:59:::1;::::0;60298:10;60444:4:::1;::::0;60198:8;;60401:59:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;60471:26;60488:8;51761:16:::0;:31;;;;;;;-1:-1:-1;51761:31:0;;;;;;;51696:104;60471:26:::1;-1:-1:-1::0;;;;;60514:20:0;::::1;60510:195;;60556:58;::::0;;60578:10:::1;12689:34:1::0;;12754:2;12739:18;;12732:34;;;-1:-1:-1;;;;;12802:15:1;;12782:18;;;12775:43;;;;12849:2;12834:18;;12827:34;;;60556:58:0::1;::::0;12638:3:1;12623:19;60556:58:0::1;;;;;;;;59652:1060:::0;;;:::o;60510:195::-:1;60652:41;::::0;;60665:10:::1;13074:51:1::0;;13156:2;13141:18;;13134:34;;;13184:18;;;13177:34;;;60652:41:0::1;::::0;13062:2:1;13047:18;60652:41:0::1;12872:345:1::0;60510:195:0::1;59652:1060:::0;;;:::o;54335:133::-;54387:22;54429:31;54449:10;54429:19;:31::i;:::-;54422:38;;54335:133;:::o;53042:126::-;1905:13;:11;:13::i;:::-;53129:31;;::::1;::::0;:13:::1;::::0;:31:::1;::::0;::::1;::::0;::::1;:::i;:::-;;53042:126:::0;:::o;52921:115::-;1905:13;:11;:13::i;:::-;52998:12:::1;:30:::0;;-1:-1:-1;;;;;;52998:30:0::1;-1:-1:-1::0;;;;;52998:30:0;;;::::1;::::0;;;::::1;::::0;;52921:115::o;2925:201::-;1905:13;:11;:13::i;:::-;-1:-1:-1;;;;;3014:22:0;::::1;3006:73;;;::::0;-1:-1:-1;;;3006:73:0;;13424:2:1;3006:73:0::1;::::0;::::1;13406:21:1::0;13463:2;13443:18;;;13436:30;13502:34;13482:18;;;13475:62;-1:-1:-1;;;13553:18:1;;;13546:36;13599:19;;3006:73:0::1;13222:402:1::0;3006:73:0::1;3090:28;3109:8;3090:18;:28::i;:::-;2925:201:::0;:::o;53717:261::-;1905:13;:11;:13::i;:::-;53840:30:::1;::::0;-1:-1:-1;;;53840:30:0;;53864:4:::1;53840:30;::::0;::::1;360:51:1::0;53805:5:0;;53783:12:::1;::::0;-1:-1:-1;;;;;53840:15:0;::::1;::::0;::::1;::::0;333:18:1;;53840:30:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;53822:48;;53881:5;-1:-1:-1::0;;;;;53881:14:0::1;;53896:7;2065::::0;2092:6;-1:-1:-1;;;;;2092:6:0;;2019:87;53896:7:::1;53881:32;::::0;-1:-1:-1;;;;;;53881:32:0::1;::::0;;;;;;-1:-1:-1;;;;;9473:32:1;;;53881::0::1;::::0;::::1;9455:51:1::0;9522:18;;;9515:34;;;9428:18;;53881:32:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;53929:41;53943:10;53955:5;53962:7;53929:41;;;;;;;;:::i;35741:98::-:0;35799:7;35826:5;35830:1;35826;:5;:::i;:::-;35819:12;35741:98;-1:-1:-1;;;35741:98:0:o;35342:::-;35400:7;35427:5;35431:1;35427;:5;:::i;34985:98::-;35043:7;35070:5;35074:1;35070;:5;:::i;6528:205::-;6629:96;6649:5;6679:27;;;6708:4;6714:2;6718:5;6656:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6656:68:0;;;;;;;;;;;;;;-1:-1:-1;;;;;6656:68:0;-1:-1:-1;;;;;;6656:68:0;;;;;;;;;;6629:19;:96::i;54187:140::-;54277:42;;;;;;;;-1:-1:-1;54277:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;54251:23;;;:13;:23;;;;;;;:68;;;;;;;;;;;-1:-1:-1;;;;;;54251:68:0;;;-1:-1:-1;;;;;54251:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54187:140::o;51806:656::-;51876:16;51893:23;;51925:8;;51876:16;51893:27;;51919:1;;51893:27;:::i;:::-;51876:45;;;;;;;;:::i;:::-;;;;;;;;;:57;51872:133;;51950:16;:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;51806:656;:::o;51872:133::-;52015:12;;;52074:221;52097:16;:23;52093:27;;52074:221;;;52169:8;52146:16;52163:1;52146:19;;;;;;;;:::i;:::-;;;;;;;;;:31;52142:142;;52208:4;52198:14;;52243:1;52231:13;;52263:5;;52142:142;52122:3;;;;:::i;:::-;;;;52074:221;;;;52309:7;52305:150;;;52363:16;52380:23;;:25;;52404:1;;52380:25;:::i;:::-;52363:43;;;;;;;;:::i;:::-;;;;;;;;;52333:16;52350:9;52333:27;;;;;;;;:::i;:::-;;;;;;;;;;:73;52421:16;:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;51861:601;;51806:656;:::o;2184:132::-;2065:7;2092:6;-1:-1:-1;;;;;2092:6:0;736:10;2248:23;2240:68;;;;-1:-1:-1;;;2240:68:0;;14640:2:1;2240:68:0;;;14622:21:1;;;14659:18;;;14652:30;14718:34;14698:18;;;14691:62;14770:18;;2240:68:0;14438:356:1;3286:191:0;3360:16;3379:6;;-1:-1:-1;;;;;3396:17:0;;;-1:-1:-1;;;;;;3396:17:0;;;;;;3429:40;;3379:6;;;;;;;3429:40;;3360:16;3429:40;3349:128;3286:191;:::o;9231:716::-;9655:23;9681:69;9709:4;9681:69;;;;;;;;;;;;;;;;;9689:5;-1:-1:-1;;;;;9681:27:0;;;:69;;;;;:::i;:::-;9765:17;;9655:95;;-1:-1:-1;9765:21:0;9761:179;;9862:10;9851:30;;;;;;;;;;;;:::i;:::-;9843:85;;;;-1:-1:-1;;;9843:85:0;;15001:2:1;9843:85:0;;;14983:21:1;15040:2;15020:18;;;15013:30;15079:34;15059:18;;;15052:62;-1:-1:-1;;;15130:18:1;;;15123:40;15180:19;;9843:85:0;14799:406:1;42812:229:0;42949:12;42981:52;43003:6;43011:4;43017:1;43020:12;42981:21;:52::i;:::-;42974:59;42812:229;-1:-1:-1;;;;42812:229:0:o;43898:455::-;44068:12;44126:5;44101:21;:30;;44093:81;;;;-1:-1:-1;;;44093:81:0;;15412:2:1;44093:81:0;;;15394:21:1;15451:2;15431:18;;;15424:30;15490:34;15470:18;;;15463:62;-1:-1:-1;;;15541:18:1;;;15534:36;15587:19;;44093:81:0;15210:402:1;44093:81:0;44186:12;44200:23;44227:6;-1:-1:-1;;;;;44227:11:0;44246:5;44253:4;44227:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44185:73;;;;44276:69;44303:6;44311:7;44320:10;44332:12;44276:26;:69::i;:::-;44269:76;43898:455;-1:-1:-1;;;;;;;43898:455:0:o;46471:644::-;46656:12;46685:7;46681:427;;;46713:10;:17;46734:1;46713:22;46709:290;;-1:-1:-1;;;;;40351:19:0;;;46923:60;;;;-1:-1:-1;;;46923:60:0;;16366:2:1;46923:60:0;;;16348:21:1;16405:2;16385:18;;;16378:30;16444:31;16424:18;;;16417:59;16493:18;;46923:60:0;16164:353:1;46923:60:0;-1:-1:-1;47020:10:0;47013:17;;46681:427;47063:33;47071:10;47083:12;47818:17;;:21;47814:388;;48050:10;48044:17;48107:15;48094:10;48090:2;48086:19;48079:44;47814:388;48177:12;48170:20;;-1:-1:-1;;;48170:20:0;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:1;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;422:131::-;-1:-1:-1;;;;;497:31:1;;487:42;;477:70;;543:1;540;533:12;558:134;626:20;;655:31;626:20;655:31;:::i;:::-;558:134;;;:::o;697:247::-;756:6;809:2;797:9;788:7;784:23;780:32;777:52;;;825:1;822;815:12;777:52;864:9;851:23;883:31;908:5;883:31;:::i;949:1112::-;1174:2;1226:21;;;1296:13;;1199:18;;;1318:22;;;1145:4;;1174:2;1359;;1377:18;;;;1418:15;;;1145:4;1461:574;1475:6;1472:1;1469:13;1461:574;;;1534:13;;1572:9;;1560:22;;1621:11;;;1615:18;-1:-1:-1;;;;;1709:21:1;;;1695:12;;;1688:43;1771:11;;;1765:18;1751:12;;;1744:40;1807:4;1855:11;;;1849:18;1845:27;;;1831:12;;;1824:49;1896:4;1940:11;;;1934:18;1920:12;;;1913:40;1664:3;1973:14;;;;2010:15;;;;1673:1;1490:9;1461:574;;;-1:-1:-1;2052:3:1;;949:1112;-1:-1:-1;;;;;;;949:1112:1:o;2440:248::-;2508:6;2516;2569:2;2557:9;2548:7;2544:23;2540:32;2537:52;;;2585:1;2582;2575:12;2537:52;-1:-1:-1;;2608:23:1;;;2678:2;2663:18;;;2650:32;;-1:-1:-1;2440:248:1:o;2693:658::-;2864:2;2916:21;;;2986:13;;2889:18;;;3008:22;;;2835:4;;2864:2;3087:15;;;;3061:2;3046:18;;;2835:4;3130:195;3144:6;3141:1;3138:13;3130:195;;;3209:13;;-1:-1:-1;;;;;3205:39:1;3193:52;;3300:15;;;;3265:12;;;;3241:1;3159:9;3130:195;;;-1:-1:-1;3342:3:1;;2693:658;-1:-1:-1;;;;;;2693:658:1:o;3356:383::-;3433:6;3441;3449;3502:2;3490:9;3481:7;3477:23;3473:32;3470:52;;;3518:1;3515;3508:12;3470:52;3554:9;3541:23;3531:33;;3611:2;3600:9;3596:18;3583:32;3573:42;;3665:2;3654:9;3650:18;3637:32;3678:31;3703:5;3678:31;:::i;:::-;3728:5;3718:15;;;3356:383;;;;;:::o;3952:127::-;4013:10;4008:3;4004:20;4001:1;3994:31;4044:4;4041:1;4034:15;4068:4;4065:1;4058:15;4084:1121;4168:6;4199:2;4242;4230:9;4221:7;4217:23;4213:32;4210:52;;;4258:1;4255;4248:12;4210:52;4298:9;4285:23;4327:18;4368:2;4360:6;4357:14;4354:34;;;4384:1;4381;4374:12;4354:34;4422:6;4411:9;4407:22;4397:32;;4467:7;4460:4;4456:2;4452:13;4448:27;4438:55;;4489:1;4486;4479:12;4438:55;4525:2;4512:16;4547:2;4543;4540:10;4537:36;;;4553:18;;:::i;:::-;4599:2;4596:1;4592:10;4631:2;4625:9;4694:2;4690:7;4685:2;4681;4677:11;4673:25;4665:6;4661:38;4749:6;4737:10;4734:22;4729:2;4717:10;4714:18;4711:46;4708:72;;;4760:18;;:::i;:::-;4796:2;4789:22;4846:18;;;4880:15;;;;-1:-1:-1;4922:11:1;;;4918:20;;;4950:19;;;4947:39;;;4982:1;4979;4972:12;4947:39;5006:11;;;;5026:148;5042:6;5037:3;5034:15;5026:148;;;5108:23;5127:3;5108:23;:::i;:::-;5096:36;;5059:12;;;;5152;;;;5026:148;;;5193:6;4084:1121;-1:-1:-1;;;;;;;;4084:1121:1:o;5210:340::-;5412:2;5394:21;;;5451:2;5431:18;;;5424:30;-1:-1:-1;;;5485:2:1;5470:18;;5463:46;5541:2;5526:18;;5210:340::o;6269:184::-;6339:6;6392:2;6380:9;6371:7;6367:23;6363:32;6360:52;;;6408:1;6405;6398:12;6360:52;-1:-1:-1;6431:16:1;;6269:184;-1:-1:-1;6269:184:1:o;7615:375::-;-1:-1:-1;;;;;7873:15:1;;;7855:34;;7925:15;;;;7920:2;7905:18;;7898:43;7972:2;7957:18;;7950:34;;;;7805:2;7790:18;;7615:375::o;8528:127::-;8589:10;8584:3;8580:20;8577:1;8570:31;8620:4;8617:1;8610:15;8644:4;8641:1;8634:15;8660:127;8721:10;8716:3;8712:20;8709:1;8702:31;8752:4;8749:1;8742:15;8776:4;8773:1;8766:15;8792:135;8831:3;8852:17;;;8849:43;;8872:18;;:::i;:::-;-1:-1:-1;8919:1:1;8908:13;;8792:135::o;10774:125::-;10839:9;;;10860:10;;;10857:36;;;10873:18;;:::i;10904:128::-;10971:9;;;10992:11;;;10989:37;;;11006:18;;:::i;11037:251::-;11107:6;11160:2;11148:9;11139:7;11135:23;11131:32;11128:52;;;11176:1;11173;11166:12;11128:52;11208:9;11202:16;11227:31;11252:5;11227:31;:::i;13629:277::-;13696:6;13749:2;13737:9;13728:7;13724:23;13720:32;13717:52;;;13765:1;13762;13755:12;13717:52;13797:9;13791:16;13850:5;13843:13;13836:21;13829:5;13826:32;13816:60;;13872:1;13869;13862:12;13911:217;13951:1;13977;13967:132;;14021:10;14016:3;14012:20;14009:1;14002:31;14056:4;14053:1;14046:15;14084:4;14081:1;14074:15;13967:132;-1:-1:-1;14113:9:1;;13911:217::o;14133:168::-;14206:9;;;14237;;14254:15;;;14248:22;;14234:37;14224:71;;14275:18;;:::i;14306:127::-;14367:10;14362:3;14358:20;14355:1;14348:31;14398:4;14395:1;14388:15;14422:4;14419:1;14412:15;15617:250;15702:1;15712:113;15726:6;15723:1;15720:13;15712:113;;;15802:11;;;15796:18;15783:11;;;15776:39;15748:2;15741:10;15712:113;;;-1:-1:-1;;15859:1:1;15841:16;;15834:27;15617:250::o;15872:287::-;16001:3;16039:6;16033:13;16055:66;16114:6;16109:3;16102:4;16094:6;16090:17;16055:66;:::i;:::-;16137:16;;;;;15872:287;-1:-1:-1;;15872:287:1:o;16522:396::-;16671:2;16660:9;16653:21;16634:4;16703:6;16697:13;16746:6;16741:2;16730:9;16726:18;16719:34;16762:79;16834:6;16829:2;16818:9;16814:18;16809:2;16801:6;16797:15;16762:79;:::i;:::-;16902:2;16881:15;-1:-1:-1;;16877:29:1;16862:45;;;;16909:2;16858:54;;16522:396;-1:-1:-1;;16522:396:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1815800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyNFT(uint256)": "infinite",
								"buyNFTbyERC20(uint256)": "infinite",
								"deSellNFT(uint256)": "infinite",
								"getAllowedERC20()": "infinite",
								"getFeeReceiver()": "2364",
								"getMyTokensAtSale()": "infinite",
								"getTokensAtSale(uint256,uint256)": "infinite",
								"getTokensAtSaleCount()": "2314",
								"getTradeFee()": "2403",
								"getUserTokensAtSale(address)": "infinite",
								"isAllowedERC20(address)": "infinite",
								"isMarketPlaceContract()": "232",
								"marketNft()": "2372",
								"owner()": "2409",
								"paused()": "2432",
								"renounceOwnership()": "infinite",
								"sellNFT(uint256,uint256,address)": "infinite",
								"setAllowedERC20(address[])": "infinite",
								"setFeeReceiver(address)": "26817",
								"setTradeFee(uint256)": "24556",
								"transferOwnership(address)": "infinite",
								"version()": "2362",
								"withdrawERC20(address)": "infinite",
								"withdrawWei()": "infinite"
							},
							"internal": {
								"__addTokenToSale(uint256)": "infinite",
								"__delTokenForSale(uint256)": "infinite",
								"_clearSellToken(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 51318,
									"end": 51319,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 51296,
									"end": 51319,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 51296,
									"end": 51319,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 51353,
									"end": 51354,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 51328,
									"end": 51354,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 51328,
									"end": 51354,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 52470,
									"end": 52814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 52470,
									"end": 52814,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1740,
									"end": 1772,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1740,
									"end": 1772,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1740,
									"end": 1772,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1740,
									"end": 1772,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49087,
									"end": 49092,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49077,
									"end": 49092,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 52623,
									"end": 52648,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52623,
									"end": 52648,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 52623,
									"end": 52648,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 52623,
									"end": 52648,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 52623,
									"end": 52648,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52623,
									"end": 52648,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 52623,
									"end": 52648,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52623,
									"end": 52648,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 52659,
									"end": 52668,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 52659,
									"end": 52681,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 52659,
									"end": 52681,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52659,
									"end": 52681,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 52692,
									"end": 52722,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52692,
									"end": 52722,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52692,
									"end": 52722,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 52692,
									"end": 52722,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52692,
									"end": 52705,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 52692,
									"end": 52705,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52692,
									"end": 52722,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 52692,
									"end": 52722,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 52692,
									"end": 52722,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52692,
									"end": 52722,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52692,
									"end": 52722,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 52692,
									"end": 52722,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 52692,
									"end": 52722,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 52692,
									"end": 52722,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 52749,
									"end": 52776,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 52749,
									"end": 52776,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52749,
									"end": 52776,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 52748,
									"end": 52806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 52748,
									"end": 52806,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52793,
									"end": 52806,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 52748,
									"end": 52806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 52748,
									"end": 52806,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 52748,
									"end": 52806,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 52748,
									"end": 52806,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52780,
									"end": 52790,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 52748,
									"end": 52806,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 52748,
									"end": 52806,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52733,
									"end": 52745,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 52733,
									"end": 52806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52733,
									"end": 52806,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 52733,
									"end": 52806,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 52733,
									"end": 52806,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 52733,
									"end": 52806,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52733,
									"end": 52806,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 52733,
									"end": 52806,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52733,
									"end": 52806,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52733,
									"end": 52806,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52733,
									"end": 52806,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52733,
									"end": 52806,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 52733,
									"end": 52806,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52733,
									"end": 52806,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3286,
									"end": 3477,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3286,
									"end": 3477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3360,
									"end": 3376,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3396,
									"end": 3413,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3360,
									"end": 3376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3469,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3349,
									"end": 3477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3286,
									"end": 3477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3286,
									"end": 3477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 50386,
									"end": 61219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1689,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 328,
									"end": 1689,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 450,
									"end": 456,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 464,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 474,
									"end": 480,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 527,
									"end": 530,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 515,
									"end": 524,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 506,
									"end": 513,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 502,
									"end": 525,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 498,
									"end": 531,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 495,
									"end": 548,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 495,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 495,
									"end": 548,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 544,
									"end": 545,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 541,
									"end": 542,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 534,
									"end": 546,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 495,
									"end": 548,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 495,
									"end": 548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 567,
									"end": 607,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 597,
									"end": 606,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 567,
									"end": 607,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 567,
									"end": 607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 567,
									"end": 607,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 567,
									"end": 607,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 557,
									"end": 607,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 557,
									"end": 607,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 626,
									"end": 628,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 647,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 692,
									"end": 694,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 681,
									"end": 690,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 677,
									"end": 695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 647,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 647,
									"end": 696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 696,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 647,
									"end": 696,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 736,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 721,
									"end": 739,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 721,
									"end": 739,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 715,
									"end": 740,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 784,
									"end": 786,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 769,
									"end": 787,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 769,
									"end": 787,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 763,
									"end": 788,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 637,
									"end": 696,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 637,
									"end": 696,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 715,
									"end": 740,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 837,
									"end": 851,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 837,
									"end": 851,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 837,
									"end": 851,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 834,
									"end": 868,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 834,
									"end": 868,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 834,
									"end": 868,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 864,
									"end": 865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 861,
									"end": 862,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 854,
									"end": 866,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 834,
									"end": 868,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 834,
									"end": 868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 902,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 891,
									"end": 900,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 887,
									"end": 909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 909,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 947,
									"end": 954,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 940,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 936,
									"end": 938,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 932,
									"end": 945,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 955,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 918,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 918,
									"end": 973,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 969,
									"end": 970,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 967,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 959,
									"end": 971,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 918,
									"end": 973,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 918,
									"end": 973,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1022,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1016,
									"end": 1018,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1023,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1010,
									"end": 1046,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1010,
									"end": 1046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1010,
									"end": 1046,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1026,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1026,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1026,
									"end": 1044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1026,
									"end": 1044,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1026,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1074,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1069,
									"end": 1070,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1065,
									"end": 1075,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1106,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1098,
									"end": 1107,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1169,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1163,
									"end": 1170,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1158,
									"end": 1160,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 1154,
									"end": 1156,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1150,
									"end": 1161,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1146,
									"end": 1171,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1144,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1172,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1228,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1210,
									"end": 1220,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1207,
									"end": 1229,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1204,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1190,
									"end": 1200,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1187,
									"end": 1205,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1184,
									"end": 1230,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1253,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1253,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1181,
									"end": 1253,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1233,
									"end": 1251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1271,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1262,
									"end": 1284,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1319,
									"end": 1337,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1319,
									"end": 1337,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1319,
									"end": 1337,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1368,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1368,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1395,
									"end": 1406,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1406,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1406,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1391,
									"end": 1411,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1391,
									"end": 1411,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1391,
									"end": 1411,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1423,
									"end": 1442,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 1423,
									"end": 1442,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1423,
									"end": 1442,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1420,
									"end": 1459,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1420,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1420,
									"end": 1459,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1456,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1452,
									"end": 1453,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1445,
									"end": 1457,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1420,
									"end": 1459,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1420,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1490,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1490,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1490,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1490,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1658,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1499,
									"end": 1658,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1515,
									"end": 1521,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1510,
									"end": 1513,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1507,
									"end": 1522,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1658,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1658,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1499,
									"end": 1658,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1611,
									"end": 1614,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1581,
									"end": 1615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1615,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1581,
									"end": 1615,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1616,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1616,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 1544,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 1544,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 1544,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 1544,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1636,
									"end": 1648,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1636,
									"end": 1648,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1636,
									"end": 1648,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1636,
									"end": 1648,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1658,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1499,
									"end": 1658,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1658,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1499,
									"end": 1658,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1689,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1689,
									"name": "SWAP12",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1689,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1689,
									"name": "SWAP11",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 328,
									"end": 1689,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1689,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 328,
									"end": 1689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1689,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 328,
									"end": 1689,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50386,
									"end": 61219,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d9fd803a033c9f8ce55d436f097fe945589fa9e234f4e66180b6795a5c3b5f164736f6c63430008120033",
									".code": [
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "C8F77899"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "C8F77899"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "E8A35392"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "E9E4E160"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "EFDCD974"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "F4F3B200"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "785FA7CE"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "7C237EEA"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "952977F5"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "A096C5A2"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "5211AC2E"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "5211AC2E"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "527F2902"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "54FD4D50"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "5B87F0F2"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "69C57352"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "47A5D43"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "8CFBC19"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "10603023"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "19C8C1C5"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "512DDCF9"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "51ED8288"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50386,
											"end": 61219,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 56681,
											"end": 58402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 56681,
											"end": 58402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 378,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 378,
											"end": 410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 378,
											"end": 410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 360,
											"end": 411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51263,
											"end": 51287,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 54077,
											"end": 54177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 54077,
											"end": 54177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 54476,
											"end": 55503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 54476,
											"end": 55503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 54476,
											"end": 55503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 60720,
											"end": 61216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 60720,
											"end": 61216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58412,
											"end": 59644,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58412,
											"end": 59644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58412,
											"end": 59644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 58412,
											"end": 59644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 58412,
											"end": 59644,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58412,
											"end": 59644,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58412,
											"end": 59644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 58412,
											"end": 59644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58412,
											"end": 59644,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 58412,
											"end": 59644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58412,
											"end": 59644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 58412,
											"end": 59644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 53518,
											"end": 53709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51441,
											"end": 51445,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2231,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2245,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51363,
											"end": 51453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2066,
											"end": 2253,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2429,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2377,
											"end": 2395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51296,
											"end": 51319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2258,
											"end": 2435,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 55630,
											"end": 56673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 55630,
											"end": 56673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49247,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 49200,
											"end": 49286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 53180,
											"end": 53284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 53180,
											"end": 53284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2667,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 53292,
											"end": 53510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 53292,
											"end": 53510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 59652,
											"end": 60712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 59652,
											"end": 60712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54054,
											"end": 54063,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 54054,
											"end": 54063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 53986,
											"end": 54071,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 54335,
											"end": 54468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55591,
											"end": 55607,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55591,
											"end": 55614,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 55511,
											"end": 55622,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52895,
											"end": 52907,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 52895,
											"end": 52907,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52895,
											"end": 52907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 52822,
											"end": 52915,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 53042,
											"end": 53168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 53042,
											"end": 53168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 52921,
											"end": 53036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 52921,
											"end": 53036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2925,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2925,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 53717,
											"end": 53978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 53717,
											"end": 53978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49247,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49525,
											"end": 49534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 49517,
											"end": 49555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56782,
											"end": 56807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56782,
											"end": 56807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56782,
											"end": 56807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56782,
											"end": 56807,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56782,
											"end": 56797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56782,
											"end": 56807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56782,
											"end": 56807,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56782,
											"end": 56807,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56782,
											"end": 56807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56782,
											"end": 56807,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56782,
											"end": 56807,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56782,
											"end": 56807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 56782,
											"end": 56807,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56782,
											"end": 56815,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56782,
											"end": 56815,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56782,
											"end": 56807,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56782,
											"end": 56815,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56774,
											"end": 56844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 56774,
											"end": 56844,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56774,
											"end": 56844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56774,
											"end": 56844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56774,
											"end": 56844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56774,
											"end": 56844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5757,
											"end": 5759,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 56774,
											"end": 56844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56774,
											"end": 56844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56774,
											"end": 56844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 5760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54686973204E4654206973206E6F7420666F722073616C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 5862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 5897,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5879,
											"end": 5897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56774,
											"end": 56844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5555,
											"end": 5903,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 56774,
											"end": 56844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 56774,
											"end": 56844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56904,
											"end": 56905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56863,
											"end": 56886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56863,
											"end": 56886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56863,
											"end": 56886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56863,
											"end": 56886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56886,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56863,
											"end": 56892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56863,
											"end": 56892,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56863,
											"end": 56892,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56855,
											"end": 56943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 56855,
											"end": 56943,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56855,
											"end": 56943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56855,
											"end": 56943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56855,
											"end": 56943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56855,
											"end": 56943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6110,
											"end": 6112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 56855,
											"end": 56943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56855,
											"end": 56943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56855,
											"end": 56943,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6092,
											"end": 6113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6092,
											"end": 6113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6147,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6129,
											"end": 6147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6222,
											"name": "PUSH",
											"source": 1,
											"value": "5468697320746F6B656E2073656C6C6564206279204E617469766520636F696E"
										},
										{
											"begin": 6168,
											"end": 6186,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6168,
											"end": 6186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6168,
											"end": 6186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6161,
											"end": 6223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6258,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6240,
											"end": 6258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56855,
											"end": 56943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5908,
											"end": 6264,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 56855,
											"end": 56943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 56855,
											"end": 56943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56956,
											"end": 56971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56981,
											"end": 57004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56981,
											"end": 57004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56981,
											"end": 57004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56981,
											"end": 56994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56981,
											"end": 57004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56981,
											"end": 57004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56981,
											"end": 57004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56981,
											"end": 57004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56981,
											"end": 57004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56981,
											"end": 57004,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56981,
											"end": 57010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56981,
											"end": 57010,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56981,
											"end": 57010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57045,
											"end": 57075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57064,
											"end": 57074,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57045,
											"end": 57075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 360,
											"end": 411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56981,
											"end": 57010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56981,
											"end": 57010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56981,
											"end": 57010,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56981,
											"end": 57010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56956,
											"end": 56971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56981,
											"end": 57010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56981,
											"end": 57010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 57045,
											"end": 57063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 351,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 333,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57045,
											"end": 57075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 57045,
											"end": 57075,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 57045,
											"end": 57075,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57110,
											"end": 57133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57110,
											"end": 57133,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57110,
											"end": 57133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57110,
											"end": 57133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57110,
											"end": 57123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57110,
											"end": 57133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57110,
											"end": 57133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57110,
											"end": 57133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57110,
											"end": 57133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57110,
											"end": 57133,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57110,
											"end": 57139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57110,
											"end": 57139,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57110,
											"end": 57139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57022,
											"end": 57075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57022,
											"end": 57075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57094,
											"end": 57139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57094,
											"end": 57139,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57094,
											"end": 57139,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57086,
											"end": 57196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 57086,
											"end": 57196,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57086,
											"end": 57196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57086,
											"end": 57196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57086,
											"end": 57196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57086,
											"end": 57196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 57086,
											"end": 57196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57086,
											"end": 57196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57086,
											"end": 57196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6642,
											"end": 6663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6701,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6679,
											"end": 6697,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6679,
											"end": 6697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6679,
											"end": 6697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 6772,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F206E6F74206861766520656E6F75676820746F6B656E73206F6E"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6711,
											"end": 6773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20796F75722062616C616E636520746F20706179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6789,
											"end": 6807,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6789,
											"end": 6807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57086,
											"end": 57196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6458,
											"end": 6874,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57086,
											"end": 57196,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 57086,
											"end": 57196,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57232,
											"end": 57277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57232,
											"end": 57277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57251,
											"end": 57261,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57232,
											"end": 57277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7091,
											"end": 7125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 57271,
											"end": 57275,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7159,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7141,
											"end": 7159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7141,
											"end": 7159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7177,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 57207,
											"end": 57229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57207,
											"end": 57229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57232,
											"end": 57250,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57250,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 57232,
											"end": 57250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57232,
											"end": 57277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 57232,
											"end": 57277,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 57232,
											"end": 57277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57314,
											"end": 57337,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57314,
											"end": 57337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57314,
											"end": 57337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57314,
											"end": 57337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57337,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57314,
											"end": 57343,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57314,
											"end": 57343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57207,
											"end": 57277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57207,
											"end": 57277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57296,
											"end": 57343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57296,
											"end": 57343,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57296,
											"end": 57343,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57288,
											"end": 57406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 57288,
											"end": 57406,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57288,
											"end": 57406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57288,
											"end": 57406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57288,
											"end": 57406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57288,
											"end": 57406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7390,
											"end": 7392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 57288,
											"end": 57406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57288,
											"end": 57406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57288,
											"end": 57406,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7372,
											"end": 7393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7429,
											"end": 7431,
											"name": "PUSH",
											"source": 1,
											"value": "3A"
										},
										{
											"begin": 7409,
											"end": 7427,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7409,
											"end": 7427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7432,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7502,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646964206E6F7420616C6C6F772074686520636F6E74726163742074"
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7441,
											"end": 7503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7567,
											"name": "PUSH",
											"source": 1,
											"value": "6F2073656E642074686520707572636861736520616D6F756E74000000000000"
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7512,
											"end": 7568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7585,
											"end": 7604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57288,
											"end": 57406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7188,
											"end": 7610,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57288,
											"end": 57406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 57288,
											"end": 57406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57429,
											"end": 57443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57446,
											"end": 57469,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57446,
											"end": 57469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57446,
											"end": 57469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57446,
											"end": 57459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57446,
											"end": 57469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57446,
											"end": 57469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57446,
											"end": 57469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57446,
											"end": 57469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57446,
											"end": 57469,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57446,
											"end": 57475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57446,
											"end": 57475,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57446,
											"end": 57475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57446,
											"end": 57475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 57519,
											"end": 57544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 57446,
											"end": 57475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57540,
											"end": 57543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 57519,
											"end": 57531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 57519,
											"end": 57544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57519,
											"end": 57544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 57519,
											"end": 57544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57546,
											"end": 57555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57546,
											"end": 57555,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 57506,
											"end": 57556,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57506,
											"end": 57556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 57506,
											"end": 57556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57486,
											"end": 57556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57486,
											"end": 57556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57605,
											"end": 57612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57605,
											"end": 57612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 57605,
											"end": 57612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57571,
											"end": 57594,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57571,
											"end": 57594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57571,
											"end": 57594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57571,
											"end": 57594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57571,
											"end": 57601,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57571,
											"end": 57612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57601,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57567,
											"end": 57627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 57567,
											"end": 57627,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57626,
											"end": 57627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57567,
											"end": 57627,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 57567,
											"end": 57627,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57638,
											"end": 57659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57662,
											"end": 57693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 57675,
											"end": 57681,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57683,
											"end": 57692,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57662,
											"end": 57674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 57662,
											"end": 57693,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57662,
											"end": 57693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 57662,
											"end": 57693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57788,
											"end": 57811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57788,
											"end": 57811,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 57788,
											"end": 57811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57788,
											"end": 57811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57788,
											"end": 57801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57788,
											"end": 57811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57788,
											"end": 57811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57788,
											"end": 57811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57788,
											"end": 57811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57788,
											"end": 57811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57788,
											"end": 57818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57788,
											"end": 57818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57788,
											"end": 57818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57638,
											"end": 57693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57638,
											"end": 57693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57706,
											"end": 57858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 57706,
											"end": 57858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57706,
											"end": 57731,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 57706,
											"end": 57731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57706,
											"end": 57731,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57706,
											"end": 57731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57754,
											"end": 57764,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57754,
											"end": 57764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57788,
											"end": 57818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57638,
											"end": 57693,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57706,
											"end": 57731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 57706,
											"end": 57858,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57706,
											"end": 57858,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 57706,
											"end": 57858,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57873,
											"end": 57886,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57869,
											"end": 58061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 57869,
											"end": 58061,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57993,
											"end": 58005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57993,
											"end": 58005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57903,
											"end": 58049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 57903,
											"end": 58049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57903,
											"end": 57928,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 57903,
											"end": 57928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57903,
											"end": 57928,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57903,
											"end": 57928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57955,
											"end": 57965,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57955,
											"end": 57965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57993,
											"end": 58005,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58025,
											"end": 58034,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57903,
											"end": 57928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 57903,
											"end": 58049,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57903,
											"end": 58049,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 57903,
											"end": 58049,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58071,
											"end": 58080,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58071,
											"end": 58130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58071,
											"end": 58130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58071,
											"end": 58080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58080,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 58071,
											"end": 58093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 58071,
											"end": 58130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58106,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58109,
											"end": 58119,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58109,
											"end": 58119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58121,
											"end": 58129,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 58121,
											"end": 58129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 58071,
											"end": 58130,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58071,
											"end": 58130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58071,
											"end": 58130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 58071,
											"end": 58130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58169,
											"end": 58174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58141,
											"end": 58166,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 58141,
											"end": 58166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58141,
											"end": 58166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58141,
											"end": 58156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58141,
											"end": 58166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58141,
											"end": 58166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58141,
											"end": 58166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58141,
											"end": 58166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58141,
											"end": 58166,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58141,
											"end": 58174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58141,
											"end": 58174,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 58141,
											"end": 58174,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58141,
											"end": 58174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58141,
											"end": 58174,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58185,
											"end": 58210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 58157,
											"end": 58165,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 58185,
											"end": 58200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 58185,
											"end": 58210,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58185,
											"end": 58210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 58185,
											"end": 58210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58221,
											"end": 58248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 58239,
											"end": 58247,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 58221,
											"end": 58238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 58221,
											"end": 58248,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58221,
											"end": 58248,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 58221,
											"end": 58248,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58279,
											"end": 58302,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58279,
											"end": 58302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58279,
											"end": 58302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58279,
											"end": 58302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58302,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58279,
											"end": 58309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58309,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58333,
											"end": 58362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58333,
											"end": 58362,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58333,
											"end": 58362,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58333,
											"end": 58362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58364,
											"end": 58393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58364,
											"end": 58393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58364,
											"end": 58393,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58364,
											"end": 58393,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58364,
											"end": 58393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58266,
											"end": 58394,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58266,
											"end": 58394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58279,
											"end": 58309,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58279,
											"end": 58309,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8292,
											"end": 8326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58311,
											"end": 58321,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8360,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8342,
											"end": 8360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8342,
											"end": 8360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8378,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8378,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8394,
											"end": 8412,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8394,
											"end": 8412,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8394,
											"end": 8412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8387,
											"end": 8421,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 8387,
											"end": 8421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8387,
											"end": 8421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58333,
											"end": 58362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58333,
											"end": 58362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8452,
											"end": 8454,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8430,
											"end": 8473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 8507,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8489,
											"end": 8508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8489,
											"end": 8508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58266,
											"end": 58394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58266,
											"end": 58394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58266,
											"end": 58394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D369FDCFEB128F60117661EBD8F220B7265C0A04FEE0E9905EB8C6AB2767B9E5"
										},
										{
											"begin": 58266,
											"end": 58394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58266,
											"end": 58394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58266,
											"end": 58394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58266,
											"end": 58394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8244,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 58266,
											"end": 58394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58266,
											"end": 58394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58266,
											"end": 58394,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 58402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 58402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 58402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 58402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 58402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56763,
											"end": 58402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56681,
											"end": 58402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 54077,
											"end": 54177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54145,
											"end": 54154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 54145,
											"end": 54169,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54077,
											"end": 54177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54560,
											"end": 54582,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 54600,
											"end": 54616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54636,
											"end": 54645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54631,
											"end": 54779,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 54631,
											"end": 54779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54655,
											"end": 54671,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54655,
											"end": 54678,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54651,
											"end": 54678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54651,
											"end": 54678,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54631,
											"end": 54779,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54631,
											"end": 54779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 54631,
											"end": 54779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54749,
											"end": 54755,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54704,
											"end": 54755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54717,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54704,
											"end": 54738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54718,
											"end": 54734,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54735,
											"end": 54736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 54718,
											"end": 54737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54738,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54738,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54704,
											"end": 54738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54738,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54745,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54704,
											"end": 54745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54704,
											"end": 54745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54704,
											"end": 54755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54700,
											"end": 54767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 54700,
											"end": 54767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 54757,
											"end": 54767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 54757,
											"end": 54767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54767,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 54757,
											"end": 54767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54767,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54700,
											"end": 54767,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 54700,
											"end": 54767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 54680,
											"end": 54683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 54680,
											"end": 54683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54683,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 54680,
											"end": 54683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54680,
											"end": 54683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54631,
											"end": 54779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 54631,
											"end": 54779,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54631,
											"end": 54779,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 54631,
											"end": 54779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54631,
											"end": 54779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54789,
											"end": 54812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54831,
											"end": 54839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 54815,
											"end": 54840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 54815,
											"end": 54840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54789,
											"end": 54840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54789,
											"end": 54840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54862,
											"end": 54863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54851,
											"end": 54863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54851,
											"end": 54863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54881,
											"end": 54890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54876,
											"end": 55472,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 54876,
											"end": 55472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54900,
											"end": 54916,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54900,
											"end": 54923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54896,
											"end": 54923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54896,
											"end": 54923,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54876,
											"end": 55472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54876,
											"end": 55472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 54876,
											"end": 55472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54994,
											"end": 55000,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54949,
											"end": 55000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54962,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54949,
											"end": 54983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54963,
											"end": 54979,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54980,
											"end": 54981,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 54963,
											"end": 54982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 54982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54949,
											"end": 54983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54990,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54949,
											"end": 54990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 54990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54949,
											"end": 54990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54949,
											"end": 55000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54945,
											"end": 55461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 54945,
											"end": 55461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55021,
											"end": 55047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55098,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55099,
											"end": 55100,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 55082,
											"end": 55101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55082,
											"end": 55101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55137,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55124,
											"end": 55158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55138,
											"end": 55154,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55155,
											"end": 55156,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 55138,
											"end": 55157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55138,
											"end": 55157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55124,
											"end": 55158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55124,
											"end": 55158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55124,
											"end": 55158,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55165,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55124,
											"end": 55165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55124,
											"end": 55165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55165,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55124,
											"end": 55165,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55124,
											"end": 55165,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55124,
											"end": 55165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55201,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55202,
											"end": 55218,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55219,
											"end": 55220,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 55202,
											"end": 55221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55202,
											"end": 55221,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55228,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55188,
											"end": 55228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55264,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55251,
											"end": 55285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55265,
											"end": 55281,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55282,
											"end": 55283,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 55265,
											"end": 55284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55265,
											"end": 55284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55285,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55251,
											"end": 55285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55285,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55251,
											"end": 55285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55251,
											"end": 55285,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55291,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55251,
											"end": 55291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55251,
											"end": 55291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55291,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55291,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55251,
											"end": 55291,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55251,
											"end": 55291,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55251,
											"end": 55291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55314,
											"end": 55327,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55314,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55328,
											"end": 55344,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55345,
											"end": 55346,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 55328,
											"end": 55347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55328,
											"end": 55347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55314,
											"end": 55348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55314,
											"end": 55348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55314,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55314,
											"end": 55348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55314,
											"end": 55348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55314,
											"end": 55348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55314,
											"end": 55348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55314,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55314,
											"end": 55348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55314,
											"end": 55348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55314,
											"end": 55348,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55314,
											"end": 55352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55314,
											"end": 55352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55314,
											"end": 55352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55050,
											"end": 55371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55021,
											"end": 55371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55021,
											"end": 55371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55407,
											"end": 55416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55395,
											"end": 55403,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 55390,
											"end": 55404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55435,
											"end": 55445,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55435,
											"end": 55445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55435,
											"end": 55445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 55435,
											"end": 55445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55435,
											"end": 55445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 55435,
											"end": 55445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55435,
											"end": 55445,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 55435,
											"end": 55445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55435,
											"end": 55445,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 55435,
											"end": 55445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55435,
											"end": 55445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55002,
											"end": 55461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54945,
											"end": 55461,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 54945,
											"end": 55461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54925,
											"end": 54928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54925,
											"end": 54928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 54925,
											"end": 54928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54925,
											"end": 54928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 54925,
											"end": 54928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54925,
											"end": 54928,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 54925,
											"end": 54928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54925,
											"end": 54928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54925,
											"end": 54928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54925,
											"end": 54928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54876,
											"end": 55472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 54876,
											"end": 55472,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54876,
											"end": 55472,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 54876,
											"end": 55472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55491,
											"end": 55495,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54476,
											"end": 55503,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54476,
											"end": 55503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60778,
											"end": 60788,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60778,
											"end": 60799,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60775,
											"end": 60905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 60775,
											"end": 60905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60838,
											"end": 60861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60851,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60838,
											"end": 60861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60838,
											"end": 60861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60838,
											"end": 60861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60861,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60868,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60838,
											"end": 60868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60868,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60838,
											"end": 60868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60824,
											"end": 60834,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60824,
											"end": 60868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60816,
											"end": 60893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 60816,
											"end": 60893,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60816,
											"end": 60893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60816,
											"end": 60893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60816,
											"end": 60893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60816,
											"end": 60893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9134,
											"end": 9136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 60816,
											"end": 60893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60816,
											"end": 60893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60816,
											"end": 60893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9173,
											"end": 9175,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9146,
											"end": 9176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A1A5CC81A5CC81B9BDD081E5BDD5C88139195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9192,
											"end": 9210,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9192,
											"end": 9210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9192,
											"end": 9210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9185,
											"end": 9235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9252,
											"end": 9270,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9252,
											"end": 9270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60816,
											"end": 60893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 8932,
											"end": 9276,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 60816,
											"end": 60893,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 60816,
											"end": 60893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60926,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60917,
											"end": 60926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60926,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60955,
											"end": 60978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60968,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60955,
											"end": 60978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60955,
											"end": 60978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60955,
											"end": 60978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60978,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60917,
											"end": 60926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60926,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60939,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 60917,
											"end": 60939,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60948,
											"end": 60952,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60948,
											"end": 60952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60955,
											"end": 60985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60969,
											"end": 60977,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60969,
											"end": 60977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 60917,
											"end": 60996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 60917,
											"end": 60996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 61037,
											"end": 61042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61009,
											"end": 61034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61009,
											"end": 61034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61009,
											"end": 61034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61009,
											"end": 61024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61009,
											"end": 61034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61009,
											"end": 61034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61009,
											"end": 61034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61009,
											"end": 61034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61009,
											"end": 61034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61009,
											"end": 61042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61009,
											"end": 61042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61009,
											"end": 61042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61009,
											"end": 61042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61009,
											"end": 61042,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 61061,
											"end": 61086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 61025,
											"end": 61033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61061,
											"end": 61076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 61061,
											"end": 61086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61061,
											"end": 61086,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 61061,
											"end": 61086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61097,
											"end": 61124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 61115,
											"end": 61123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61097,
											"end": 61114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 61097,
											"end": 61124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61097,
											"end": 61124,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 61097,
											"end": 61124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61167,
											"end": 61190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61180,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61167,
											"end": 61190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61167,
											"end": 61190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61167,
											"end": 61190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61190,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61197,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61167,
											"end": 61197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61150,
											"end": 61208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61150,
											"end": 61208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61167,
											"end": 61197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61167,
											"end": 61197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9455,
											"end": 9506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9549,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 61150,
											"end": 61208,
											"name": "PUSH",
											"source": 0,
											"value": "8BF8E8F2F9D065B620F4E940D87122B03DD779D0FFD6A1590572E1E6D0416BEF"
										},
										{
											"begin": 61150,
											"end": 61208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 61150,
											"end": 61208,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 61150,
											"end": 61208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61150,
											"end": 61208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61150,
											"end": 61208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61150,
											"end": 61208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61150,
											"end": 61208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61150,
											"end": 61208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61150,
											"end": 61208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61150,
											"end": 61208,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60720,
											"end": 61216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58412,
											"end": 59644,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 58412,
											"end": 59644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49247,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49525,
											"end": 49534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 49517,
											"end": 49555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58563,
											"end": 58588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58563,
											"end": 58588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58563,
											"end": 58588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58563,
											"end": 58588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58563,
											"end": 58578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58563,
											"end": 58588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58563,
											"end": 58588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58563,
											"end": 58588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58563,
											"end": 58588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58563,
											"end": 58588,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58563,
											"end": 58588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58563,
											"end": 58588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 58563,
											"end": 58588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58563,
											"end": 58596,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58563,
											"end": 58596,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58563,
											"end": 58588,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58563,
											"end": 58596,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58555,
											"end": 58625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 58555,
											"end": 58625,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58555,
											"end": 58625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58555,
											"end": 58625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58555,
											"end": 58625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58555,
											"end": 58625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5757,
											"end": 5759,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 58555,
											"end": 58625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58555,
											"end": 58625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58555,
											"end": 58625,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 5760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54686973204E4654206973206E6F7420666F722073616C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 5862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 5897,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5879,
											"end": 5897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58555,
											"end": 58625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5555,
											"end": 5903,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58555,
											"end": 58625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 58555,
											"end": 58625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58683,
											"end": 58706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58683,
											"end": 58706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58683,
											"end": 58706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58683,
											"end": 58706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58683,
											"end": 58696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58683,
											"end": 58706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58683,
											"end": 58706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58683,
											"end": 58706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58683,
											"end": 58706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58683,
											"end": 58706,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58683,
											"end": 58712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58683,
											"end": 58712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58683,
											"end": 58712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58670,
											"end": 58679,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58670,
											"end": 58712,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58670,
											"end": 58712,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58662,
											"end": 58755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 58662,
											"end": 58755,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58662,
											"end": 58755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58662,
											"end": 58755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58662,
											"end": 58755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58662,
											"end": 58755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 58662,
											"end": 58755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58662,
											"end": 58755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58662,
											"end": 58755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9744,
											"end": 9765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9803,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9874,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F74207061696420656E6F75676820666F7220746869"
										},
										{
											"begin": 9820,
											"end": 9838,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9820,
											"end": 9838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73206974656D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9891,
											"end": 9909,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9891,
											"end": 9909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9891,
											"end": 9909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9937,
											"end": 9956,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9937,
											"end": 9956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58662,
											"end": 58755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 9560,
											"end": 9962,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58662,
											"end": 58755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 58662,
											"end": 58755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58859,
											"end": 58860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58818,
											"end": 58841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58818,
											"end": 58841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58818,
											"end": 58841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58818,
											"end": 58831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58818,
											"end": 58841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58818,
											"end": 58841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58818,
											"end": 58841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58818,
											"end": 58841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58818,
											"end": 58841,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58818,
											"end": 58847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58818,
											"end": 58847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58818,
											"end": 58847,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58818,
											"end": 58847,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58818,
											"end": 58861,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58810,
											"end": 58892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 58810,
											"end": 58892,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58810,
											"end": 58892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58810,
											"end": 58892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58810,
											"end": 58892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58810,
											"end": 58892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10169,
											"end": 10171,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 58810,
											"end": 58892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58810,
											"end": 58892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58810,
											"end": 58892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10181,
											"end": 10211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10247,
											"end": 10275,
											"name": "PUSH",
											"source": 1,
											"value": "5468697320746F6B656E2073656C6C6564206279204552433230000000000000"
										},
										{
											"begin": 10227,
											"end": 10245,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10227,
											"end": 10245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10227,
											"end": 10245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10311,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10293,
											"end": 10311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58810,
											"end": 58892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 9967,
											"end": 10317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58810,
											"end": 58892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 58810,
											"end": 58892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58930,
											"end": 58939,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58913,
											"end": 58927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58970,
											"end": 59020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 58983,
											"end": 59008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 58930,
											"end": 58939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59004,
											"end": 59007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 58983,
											"end": 58995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 58983,
											"end": 59008,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58970,
											"end": 59020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 58970,
											"end": 59020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58950,
											"end": 59020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58950,
											"end": 59020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59069,
											"end": 59076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59069,
											"end": 59076,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 59069,
											"end": 59076,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59035,
											"end": 59058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59035,
											"end": 59058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59035,
											"end": 59058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59035,
											"end": 59058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59035,
											"end": 59048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59035,
											"end": 59058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59035,
											"end": 59058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59035,
											"end": 59058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59035,
											"end": 59058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59035,
											"end": 59058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59035,
											"end": 59065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59035,
											"end": 59065,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59035,
											"end": 59065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59035,
											"end": 59076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59035,
											"end": 59076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59035,
											"end": 59076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59035,
											"end": 59065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59035,
											"end": 59065,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59035,
											"end": 59076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59031,
											"end": 59091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 59031,
											"end": 59091,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59090,
											"end": 59091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59031,
											"end": 59091,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 59031,
											"end": 59091,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59102,
											"end": 59123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59126,
											"end": 59157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 59139,
											"end": 59145,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59147,
											"end": 59156,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59126,
											"end": 59138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 59126,
											"end": 59157,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59126,
											"end": 59157,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 59126,
											"end": 59157,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59178,
											"end": 59201,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59178,
											"end": 59201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59178,
											"end": 59201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59178,
											"end": 59201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59201,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59178,
											"end": 59208,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59208,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59102,
											"end": 59157,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59102,
											"end": 59157,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59178,
											"end": 59208,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59102,
											"end": 59157,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59102,
											"end": 59157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59102,
											"end": 59157,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59208,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59170,
											"end": 59233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 59170,
											"end": 59233,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59248,
											"end": 59261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59248,
											"end": 59261,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59244,
											"end": 59331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 59244,
											"end": 59331,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 59286,
											"end": 59298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59278,
											"end": 59319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59286,
											"end": 59298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59298,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59309,
											"end": 59318,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59309,
											"end": 59318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59278,
											"end": 59319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59309,
											"end": 59318,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59298,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59278,
											"end": 59319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59278,
											"end": 59319,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59244,
											"end": 59331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 59244,
											"end": 59331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59351,
											"end": 59360,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59351,
											"end": 59410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 59351,
											"end": 59410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59351,
											"end": 59360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59360,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 59351,
											"end": 59373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 59351,
											"end": 59410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59382,
											"end": 59386,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 59382,
											"end": 59386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59389,
											"end": 59399,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59389,
											"end": 59399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59401,
											"end": 59409,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 59401,
											"end": 59409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 59351,
											"end": 59410,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59351,
											"end": 59410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59351,
											"end": 59410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 59351,
											"end": 59410,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59449,
											"end": 59454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59421,
											"end": 59446,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59421,
											"end": 59446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59421,
											"end": 59446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59421,
											"end": 59436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59421,
											"end": 59446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59421,
											"end": 59446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59421,
											"end": 59446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59421,
											"end": 59446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59421,
											"end": 59446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59421,
											"end": 59446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59421,
											"end": 59446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59421,
											"end": 59446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59421,
											"end": 59454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59421,
											"end": 59454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 59421,
											"end": 59454,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59421,
											"end": 59454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59421,
											"end": 59454,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59476,
											"end": 59489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59476,
											"end": 59499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59476,
											"end": 59499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59476,
											"end": 59499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59476,
											"end": 59499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59476,
											"end": 59499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59476,
											"end": 59499,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 59476,
											"end": 59506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59476,
											"end": 59506,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59476,
											"end": 59506,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59530,
											"end": 59559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59530,
											"end": 59559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59530,
											"end": 59559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59530,
											"end": 59559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59530,
											"end": 59559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59472,
											"end": 59560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59472,
											"end": 59560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59476,
											"end": 59506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59476,
											"end": 59506,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59476,
											"end": 59506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10591,
											"end": 10625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10625,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 59508,
											"end": 59518,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10641,
											"end": 10659,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10641,
											"end": 10659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10641,
											"end": 10659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10677,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10677,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 10720,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 10720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 10720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 10753,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10729,
											"end": 10763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 59472,
											"end": 59560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "89F5ADC174562E07C9C9B1CAE7109BBECB21CF9D1B2847E550042B8653C54A0E"
										},
										{
											"begin": 59472,
											"end": 59560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10540,
											"end": 10543,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10525,
											"end": 10544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59472,
											"end": 59560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59472,
											"end": 59560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59472,
											"end": 59560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59472,
											"end": 59560,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59472,
											"end": 59560,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59472,
											"end": 59560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59472,
											"end": 59560,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 59573,
											"end": 59598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 59589,
											"end": 59597,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59573,
											"end": 59588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 59573,
											"end": 59598,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59573,
											"end": 59598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 59573,
											"end": 59598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59609,
											"end": 59636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 59627,
											"end": 59635,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59609,
											"end": 59626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 59609,
											"end": 59636,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59609,
											"end": 59636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 59609,
											"end": 59636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58507,
											"end": 59644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58507,
											"end": 59644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58507,
											"end": 59644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58412,
											"end": 59644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58412,
											"end": 59644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 53518,
											"end": 53709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53618,
											"end": 53654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53586,
											"end": 53607,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 53586,
											"end": 53607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53626,
											"end": 53636,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 53626,
											"end": 53636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53586,
											"end": 53607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53586,
											"end": 53607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53569,
											"end": 53583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53618,
											"end": 53654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53569,
											"end": 53583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53586,
											"end": 53607,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53626,
											"end": 53636,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53618,
											"end": 53654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 53618,
											"end": 53654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53670,
											"end": 53701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53670,
											"end": 53701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53670,
											"end": 53701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53682,
											"end": 53692,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9455,
											"end": 9506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9549,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 53670,
											"end": 53701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2F15B7A52FC8A006876377705647ACBD22EED72DEC9B154AA290E286C06A3CD4"
										},
										{
											"begin": 53670,
											"end": 53701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53670,
											"end": 53701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 9281,
											"end": 9555,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55727,
											"end": 55749,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 55784,
											"end": 55790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55767,
											"end": 55781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55816,
											"end": 55830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 55825,
											"end": 55830,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55784,
											"end": 55790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55816,
											"end": 55830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 55816,
											"end": 55830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55816,
											"end": 55830,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 55816,
											"end": 55830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55855,
											"end": 55871,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55855,
											"end": 55878,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55801,
											"end": 55830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55801,
											"end": 55830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55845,
											"end": 55878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55878,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55841,
											"end": 55905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 55841,
											"end": 55905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55903,
											"end": 55904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 55887,
											"end": 55905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55887,
											"end": 55905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55905,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55880,
											"end": 55905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 55880,
											"end": 55905,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55841,
											"end": 55905,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 55841,
											"end": 55905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55920,
											"end": 55931,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55920,
											"end": 55931,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55920,
											"end": 55945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55920,
											"end": 55945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55920,
											"end": 55945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 55920,
											"end": 55945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55935,
											"end": 55945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55935,
											"end": 55945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55920,
											"end": 55945,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 55920,
											"end": 55945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55916,
											"end": 55977,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55916,
											"end": 55977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 55916,
											"end": 55977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55954,
											"end": 55970,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55954,
											"end": 55977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55916,
											"end": 55977,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 55916,
											"end": 55977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55999,
											"end": 56015,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55999,
											"end": 56022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55992,
											"end": 56022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55992,
											"end": 56022,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55988,
											"end": 56054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55988,
											"end": 56054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 55988,
											"end": 56054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56031,
											"end": 56047,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56031,
											"end": 56054,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55988,
											"end": 56054,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 55988,
											"end": 56054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56091,
											"end": 56104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 56098,
											"end": 56104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56091,
											"end": 56095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56091,
											"end": 56104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 56091,
											"end": 56104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56091,
											"end": 56104,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 56091,
											"end": 56104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56075,
											"end": 56104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56115,
											"end": 56125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56140,
											"end": 56163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56182,
											"end": 56187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 56166,
											"end": 56188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 56166,
											"end": 56188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 56166,
											"end": 56188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56140,
											"end": 56188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56216,
											"end": 56222,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56199,
											"end": 56644,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 56199,
											"end": 56644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56228,
											"end": 56232,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56224,
											"end": 56225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56224,
											"end": 56232,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56199,
											"end": 56644,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56199,
											"end": 56644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 56199,
											"end": 56644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56254,
											"end": 56270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56273,
											"end": 56289,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56290,
											"end": 56291,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 56273,
											"end": 56292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56414,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56404,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56391,
											"end": 56414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56414,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56414,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56414,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56421,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56391,
											"end": 56421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56391,
											"end": 56421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56391,
											"end": 56421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56440,
											"end": 56469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 56469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 56469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56488,
											"end": 56517,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56488,
											"end": 56517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56488,
											"end": 56517,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56488,
											"end": 56517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56488,
											"end": 56517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56488,
											"end": 56517,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56488,
											"end": 56517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56536,
											"end": 56559,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56536,
											"end": 56559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56536,
											"end": 56559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56536,
											"end": 56559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56536,
											"end": 56559,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56536,
											"end": 56559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56536,
											"end": 56559,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56536,
											"end": 56559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56536,
											"end": 56563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56536,
											"end": 56563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56536,
											"end": 56563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56536,
											"end": 56563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56536,
											"end": 56563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56273,
											"end": 56292,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56597,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56598,
											"end": 56600,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56598,
											"end": 56600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 56593,
											"end": 56601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56593,
											"end": 56613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56628,
											"end": 56632,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56628,
											"end": 56632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56628,
											"end": 56632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 56628,
											"end": 56632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56628,
											"end": 56632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 56628,
											"end": 56632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56628,
											"end": 56632,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 56628,
											"end": 56632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56628,
											"end": 56632,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 56628,
											"end": 56632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56628,
											"end": 56632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56239,
											"end": 56644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56239,
											"end": 56644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 56234,
											"end": 56237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 56234,
											"end": 56237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56237,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 56234,
											"end": 56237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56234,
											"end": 56237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56199,
											"end": 56644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 56199,
											"end": 56644,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56199,
											"end": 56644,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 56199,
											"end": 56644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56661,
											"end": 56665,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55630,
											"end": 56673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53227,
											"end": 53243,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 53263,
											"end": 53276,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2667,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2759,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 2732,
											"end": 2762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2732,
											"end": 2762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53352,
											"end": 53356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53369,
											"end": 53480,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 53369,
											"end": 53480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53385,
											"end": 53398,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53385,
											"end": 53405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53383,
											"end": 53405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53383,
											"end": 53405,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53369,
											"end": 53480,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53369,
											"end": 53480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 53369,
											"end": 53480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53452,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53453,
											"end": 53454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 53439,
											"end": 53455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53439,
											"end": 53455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53430,
											"end": 53455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53430,
											"end": 53455,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53430,
											"end": 53455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53430,
											"end": 53455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 53426,
											"end": 53468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53464,
											"end": 53468,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53464,
											"end": 53468,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53292,
											"end": 53510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53426,
											"end": 53468,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 53426,
											"end": 53468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53406,
											"end": 53409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53406,
											"end": 53409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 53406,
											"end": 53409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53406,
											"end": 53409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 53406,
											"end": 53409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53406,
											"end": 53409,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 53406,
											"end": 53409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53406,
											"end": 53409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53406,
											"end": 53409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53406,
											"end": 53409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53369,
											"end": 53480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 53369,
											"end": 53480,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53369,
											"end": 53480,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 53369,
											"end": 53480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53497,
											"end": 53502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53497,
											"end": 53502,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53292,
											"end": 53510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53292,
											"end": 53510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49247,
											"end": 49251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49271,
											"end": 49278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49525,
											"end": 49534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 49517,
											"end": 49555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 49517,
											"end": 49555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59829,
											"end": 59838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59829,
											"end": 59856,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 59829,
											"end": 59856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59829,
											"end": 59856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2429,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 59860,
											"end": 59870,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59860,
											"end": 59870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59829,
											"end": 59838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 59829,
											"end": 59846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2395,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2377,
											"end": 2395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59829,
											"end": 59856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 59829,
											"end": 59856,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 59829,
											"end": 59856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59829,
											"end": 59870,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59829,
											"end": 59870,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59807,
											"end": 59923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 59807,
											"end": 59923,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59807,
											"end": 59923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59807,
											"end": 59923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 59807,
											"end": 59923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59807,
											"end": 59923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11495,
											"end": 11497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 59807,
											"end": 59923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59807,
											"end": 59923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59807,
											"end": 59923,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11477,
											"end": 11498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11536,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 11514,
											"end": 11532,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11514,
											"end": 11532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11507,
											"end": 11537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11600,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000"
										},
										{
											"begin": 11553,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11553,
											"end": 11571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11553,
											"end": 11571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11546,
											"end": 11601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11618,
											"end": 11636,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11618,
											"end": 11636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59807,
											"end": 59923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11293,
											"end": 11642,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 59807,
											"end": 59923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 59807,
											"end": 59923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59950,
											"end": 59951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59942,
											"end": 59947,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59942,
											"end": 59951,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59934,
											"end": 59987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 59934,
											"end": 59987,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59934,
											"end": 59987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59934,
											"end": 59987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 59934,
											"end": 59987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59934,
											"end": 59987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11851,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 59934,
											"end": 59987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59934,
											"end": 59987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59934,
											"end": 59987,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11831,
											"end": 11852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11888,
											"end": 11890,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11868,
											"end": 11886,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11868,
											"end": 11886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11868,
											"end": 11886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11861,
											"end": 11891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11927,
											"end": 11960,
											"name": "PUSH",
											"source": 1,
											"value": "5072696365206D7573742062652067726561746572207468616E207A65726F00"
										},
										{
											"begin": 11907,
											"end": 11925,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11907,
											"end": 11925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11907,
											"end": 11925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11900,
											"end": 11961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 11996,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11978,
											"end": 11996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59934,
											"end": 59987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11647,
											"end": 12002,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 59934,
											"end": 59987,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 59934,
											"end": 59987,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60002,
											"end": 60022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60002,
											"end": 60022,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60002,
											"end": 60022,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59998,
											"end": 60170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 59998,
											"end": 60170,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60079,
											"end": 60101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 60094,
											"end": 60100,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60079,
											"end": 60093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 60079,
											"end": 60101,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60079,
											"end": 60101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 60079,
											"end": 60101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60079,
											"end": 60109,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60079,
											"end": 60109,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60105,
											"end": 60109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60079,
											"end": 60109,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60071,
											"end": 60158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 60071,
											"end": 60158,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60071,
											"end": 60158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60071,
											"end": 60158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60071,
											"end": 60158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60071,
											"end": 60158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12209,
											"end": 12211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 60071,
											"end": 60158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60071,
											"end": 60158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60071,
											"end": 60158,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12191,
											"end": 12212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12248,
											"end": 12250,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12221,
											"end": 12251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12287,
											"end": 12321,
											"name": "PUSH",
											"source": 1,
											"value": "54686973204552433230206E6F7420616C6C6F77656420617320612074726164"
										},
										{
											"begin": 12267,
											"end": 12285,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12267,
											"end": 12285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12267,
											"end": 12285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12260,
											"end": 12322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E672063757272656E6379"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12338,
											"end": 12356,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12338,
											"end": 12356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12338,
											"end": 12356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12331,
											"end": 12373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12390,
											"end": 12409,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12390,
											"end": 12409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60071,
											"end": 60158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 12007,
											"end": 12415,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 60071,
											"end": 60158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 60071,
											"end": 60158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60182,
											"end": 60207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60182,
											"end": 60207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60182,
											"end": 60207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60182,
											"end": 60207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60207,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60207,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60182,
											"end": 60214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60210,
											"end": 60214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60182,
											"end": 60214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60214,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60182,
											"end": 60214,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60298,
											"end": 60308,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60364,
											"end": 60379,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60251,
											"end": 60390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60248,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60248,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60225,
											"end": 60248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60248,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60248,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60248,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60248,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60225,
											"end": 60390,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60401,
											"end": 60460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60410,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60410,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60410,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 60401,
											"end": 60423,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 60401,
											"end": 60460,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60298,
											"end": 60308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60444,
											"end": 60448,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60444,
											"end": 60448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60198,
											"end": 60206,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 60198,
											"end": 60206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 60401,
											"end": 60460,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60401,
											"end": 60460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60401,
											"end": 60460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60401,
											"end": 60460,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60471,
											"end": 60497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 60488,
											"end": 60496,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51761,
											"end": 51777,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "PUSH",
											"source": 0,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51761,
											"end": 51792,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51696,
											"end": 51800,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60471,
											"end": 60497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 60471,
											"end": 60497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60514,
											"end": 60534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60514,
											"end": 60534,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60510,
											"end": 60705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 60510,
											"end": 60705,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60556,
											"end": 60614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60556,
											"end": 60614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60556,
											"end": 60614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60578,
											"end": 60588,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12689,
											"end": 12723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12689,
											"end": 12723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12754,
											"end": 12756,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12732,
											"end": 12766,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12732,
											"end": 12766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12732,
											"end": 12766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12802,
											"end": 12817,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12802,
											"end": 12817,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12782,
											"end": 12800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12782,
											"end": 12800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12782,
											"end": 12800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12849,
											"end": 12851,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12827,
											"end": 12861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12827,
											"end": 12861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12827,
											"end": 12861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 60556,
											"end": 60614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A4292E75F7EAFDE90821610C4CABFC298540C274B50A7EA784A529A2B8A4A6F"
										},
										{
											"begin": 60556,
											"end": 60614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12641,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12623,
											"end": 12642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60556,
											"end": 60614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 60556,
											"end": 60614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60556,
											"end": 60614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60556,
											"end": 60614,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60556,
											"end": 60614,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60556,
											"end": 60614,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60556,
											"end": 60614,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60556,
											"end": 60614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60556,
											"end": 60614,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60510,
											"end": 60705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 60510,
											"end": 60705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60652,
											"end": 60693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60652,
											"end": 60693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60652,
											"end": 60693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60665,
											"end": 60675,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13074,
											"end": 13125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13141,
											"end": 13159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13141,
											"end": 13159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13134,
											"end": 13168,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13134,
											"end": 13168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13134,
											"end": 13168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13184,
											"end": 13202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13184,
											"end": 13202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13184,
											"end": 13202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13177,
											"end": 13211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13177,
											"end": 13211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13177,
											"end": 13211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 60652,
											"end": 60693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4524387B4311078B7531910A140A6975002B10ACA4CF12255E98DA8F1FF1B35B"
										},
										{
											"begin": 60652,
											"end": 60693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13064,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13047,
											"end": 13065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60652,
											"end": 60693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 12872,
											"end": 13217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 60510,
											"end": 60705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 60510,
											"end": 60705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59652,
											"end": 60712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54387,
											"end": 54409,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 54429,
											"end": 54460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 54449,
											"end": 54459,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54429,
											"end": 54448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 54429,
											"end": 54460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54429,
											"end": 54460,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 54429,
											"end": 54460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54422,
											"end": 54460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54422,
											"end": 54460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53129,
											"end": 53160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53129,
											"end": 53160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53129,
											"end": 53160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 53129,
											"end": 53160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53129,
											"end": 53142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53129,
											"end": 53142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53129,
											"end": 53160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53129,
											"end": 53160,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53129,
											"end": 53160,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53129,
											"end": 53160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53129,
											"end": 53160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 53129,
											"end": 53160,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53129,
											"end": 53160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 53129,
											"end": 53160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53129,
											"end": 53160,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53042,
											"end": 53168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 52921,
											"end": 53036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52998,
											"end": 53010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 52998,
											"end": 53028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52998,
											"end": 53028,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52998,
											"end": 53028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52998,
											"end": 53028,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52998,
											"end": 53028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52998,
											"end": 53028,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52998,
											"end": 53028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52998,
											"end": 53028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52998,
											"end": 53028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52998,
											"end": 53028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52998,
											"end": 53028,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52998,
											"end": 53028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52998,
											"end": 53028,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52921,
											"end": 53036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3036,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13424,
											"end": 13426,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3006,
											"end": 3079,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13406,
											"end": 13427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13463,
											"end": 13465,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 13443,
											"end": 13461,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13443,
											"end": 13461,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13443,
											"end": 13461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13436,
											"end": 13466,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13502,
											"end": 13536,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13482,
											"end": 13500,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13482,
											"end": 13500,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13475,
											"end": 13537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13546,
											"end": 13582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13599,
											"end": 13618,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13599,
											"end": 13618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 13222,
											"end": 13624,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 3006,
											"end": 3079,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 3109,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3090,
											"end": 3118,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 3090,
											"end": 3118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 53717,
											"end": 53978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1905,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53840,
											"end": 53870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53840,
											"end": 53870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53864,
											"end": 53868,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53840,
											"end": 53870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 360,
											"end": 411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 53805,
											"end": 53810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53805,
											"end": 53810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53783,
											"end": 53795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53783,
											"end": 53795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53840,
											"end": 53855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53855,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 53840,
											"end": 53855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 351,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 333,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53840,
											"end": 53870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 53840,
											"end": 53870,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 53840,
											"end": 53870,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53822,
											"end": 53870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53822,
											"end": 53870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53881,
											"end": 53895,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 53896,
											"end": 53903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53896,
											"end": 53903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 53896,
											"end": 53903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53881,
											"end": 53913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 53881,
											"end": 53913,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9473,
											"end": 9505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9473,
											"end": 9505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9473,
											"end": 9505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53881,
											"end": 53913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9455,
											"end": 9506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9549,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53881,
											"end": 53913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 53881,
											"end": 53913,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53881,
											"end": 53913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53929,
											"end": 53970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "33C35F9541201E342D5E7467016E65A0A06182EB12A5F17103F71CEC95B6CB29"
										},
										{
											"begin": 53943,
											"end": 53953,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 53955,
											"end": 53960,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53962,
											"end": 53969,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53929,
											"end": 53970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53929,
											"end": 53970,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53929,
											"end": 53970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 53929,
											"end": 53970,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53929,
											"end": 53970,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53929,
											"end": 53970,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53929,
											"end": 53970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53929,
											"end": 53970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 53929,
											"end": 53970,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35799,
											"end": 35806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 35830,
											"end": 35831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35826,
											"end": 35827,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 35826,
											"end": 35831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 35826,
											"end": 35831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35819,
											"end": 35831,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35741,
											"end": 35839,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35741,
											"end": 35839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35342,
											"end": 35440,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 35342,
											"end": 35440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35400,
											"end": 35407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35427,
											"end": 35432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 35431,
											"end": 35432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 35428,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 35432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 35427,
											"end": 35432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34985,
											"end": 35083,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 34985,
											"end": 35083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35043,
											"end": 35050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35070,
											"end": 35075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 35074,
											"end": 35075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 35070,
											"end": 35075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6528,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 6649,
											"end": 6654,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6679,
											"end": 6706,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 6679,
											"end": 6706,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6679,
											"end": 6706,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 6712,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6723,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 6656,
											"end": 6724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 6629,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54187,
											"end": 54327,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 54187,
											"end": 54327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54277,
											"end": 54319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54274,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54264,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54251,
											"end": 54274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54274,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54274,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54274,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54274,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54251,
											"end": 54319,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54187,
											"end": 54327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51806,
											"end": 52462,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 51806,
											"end": 52462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51892,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 51893,
											"end": 51916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51893,
											"end": 51916,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51925,
											"end": 51933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51925,
											"end": 51933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51893,
											"end": 51920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 51893,
											"end": 51920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51919,
											"end": 51920,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51919,
											"end": 51920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51893,
											"end": 51920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 51893,
											"end": 51920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51893,
											"end": 51920,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 51893,
											"end": 51920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 51876,
											"end": 51921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51921,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51872,
											"end": 52005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 51872,
											"end": 52005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51966,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 51950,
											"end": 51972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51950,
											"end": 51972,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51806,
											"end": 52462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51806,
											"end": 52462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51872,
											"end": 52005,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 51872,
											"end": 52005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52015,
											"end": 52027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52015,
											"end": 52027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52015,
											"end": 52027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52074,
											"end": 52295,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 52074,
											"end": 52295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52097,
											"end": 52113,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 52097,
											"end": 52120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52093,
											"end": 52120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52093,
											"end": 52120,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52074,
											"end": 52295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52074,
											"end": 52295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 52074,
											"end": 52295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52169,
											"end": 52177,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52162,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 52163,
											"end": 52164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 52146,
											"end": 52165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52146,
											"end": 52177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52142,
											"end": 52284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 52142,
											"end": 52284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52208,
											"end": 52212,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52198,
											"end": 52212,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52198,
											"end": 52212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52231,
											"end": 52244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52231,
											"end": 52244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52263,
											"end": 52268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 52263,
											"end": 52268,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52142,
											"end": 52284,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 52142,
											"end": 52284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52122,
											"end": 52125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52122,
											"end": 52125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 52122,
											"end": 52125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52122,
											"end": 52125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 52122,
											"end": 52125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52122,
											"end": 52125,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 52122,
											"end": 52125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52122,
											"end": 52125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52122,
											"end": 52125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52122,
											"end": 52125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52074,
											"end": 52295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 52074,
											"end": 52295,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52074,
											"end": 52295,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 52074,
											"end": 52295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52074,
											"end": 52295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52309,
											"end": 52316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52305,
											"end": 52455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52305,
											"end": 52455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 52305,
											"end": 52455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52379,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 52380,
											"end": 52403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52380,
											"end": 52403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52380,
											"end": 52405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 52380,
											"end": 52405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52404,
											"end": 52405,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52404,
											"end": 52405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52380,
											"end": 52405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 52380,
											"end": 52405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52380,
											"end": 52405,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 52380,
											"end": 52405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 52363,
											"end": 52406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52349,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 52350,
											"end": 52359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 52333,
											"end": 52360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52333,
											"end": 52406,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52437,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 52421,
											"end": 52443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52443,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51861,
											"end": 52462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51861,
											"end": 52462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51806,
											"end": 52462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51806,
											"end": 52462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2184,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14640,
											"end": 14642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14622,
											"end": 14643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14622,
											"end": 14643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14622,
											"end": 14643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14652,
											"end": 14682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14718,
											"end": 14752,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14698,
											"end": 14716,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14698,
											"end": 14716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14698,
											"end": 14716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14691,
											"end": 14753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14770,
											"end": 14788,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14770,
											"end": 14788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 14438,
											"end": 14794,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3477,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3286,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3469,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9947,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 9231,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 9709,
											"end": 9713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9694,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9681,
											"end": 9708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 9681,
											"end": 9708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 9681,
											"end": 9750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9655,
											"end": 9750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9765,
											"end": 9786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9761,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 9761,
											"end": 9940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 9851,
											"end": 9881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15001,
											"end": 15003,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14983,
											"end": 15004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15040,
											"end": 15042,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 15020,
											"end": 15038,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15020,
											"end": 15038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15020,
											"end": 15038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15013,
											"end": 15043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15079,
											"end": 15113,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 15059,
											"end": 15077,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15059,
											"end": 15077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15059,
											"end": 15077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15052,
											"end": 15114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15130,
											"end": 15148,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15130,
											"end": 15148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15130,
											"end": 15148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15180,
											"end": 15199,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15180,
											"end": 15199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 14799,
											"end": 15205,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42812,
											"end": 43041,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 42812,
											"end": 43041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42961,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42981,
											"end": 43033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 43003,
											"end": 43009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43011,
											"end": 43015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43017,
											"end": 43018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43020,
											"end": 43032,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42981,
											"end": 43002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 42981,
											"end": 43033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42981,
											"end": 43033,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 42981,
											"end": 43033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42974,
											"end": 43033,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 42812,
											"end": 43041,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42812,
											"end": 43041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43898,
											"end": 44353,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 43898,
											"end": 44353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44068,
											"end": 44080,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 44126,
											"end": 44131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44122,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44131,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15412,
											"end": 15414,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15451,
											"end": 15453,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 15431,
											"end": 15449,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15431,
											"end": 15449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15431,
											"end": 15449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15424,
											"end": 15454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15490,
											"end": 15524,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 15470,
											"end": 15488,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15470,
											"end": 15488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15470,
											"end": 15488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15463,
											"end": 15525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15541,
											"end": 15559,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15541,
											"end": 15559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15541,
											"end": 15559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15534,
											"end": 15570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15587,
											"end": 15606,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15587,
											"end": 15606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 15210,
											"end": 15612,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 44093,
											"end": 44174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44186,
											"end": 44198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44200,
											"end": 44223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44233,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44227,
											"end": 44238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44246,
											"end": 44251,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44253,
											"end": 44257,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 44227,
											"end": 44258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44227,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44185,
											"end": 44258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44276,
											"end": 44345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 44303,
											"end": 44309,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44311,
											"end": 44318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44320,
											"end": 44330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44332,
											"end": 44344,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44276,
											"end": 44302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 44276,
											"end": 44345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44276,
											"end": 44345,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 44276,
											"end": 44345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44269,
											"end": 44345,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 43898,
											"end": 44353,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43898,
											"end": 44353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46471,
											"end": 47115,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 46471,
											"end": 47115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46656,
											"end": 46668,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 46685,
											"end": 46692,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46713,
											"end": 46723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46713,
											"end": 46730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46734,
											"end": 46735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46713,
											"end": 46735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46709,
											"end": 46999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 46709,
											"end": 46999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40351,
											"end": 40370,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40351,
											"end": 40370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40351,
											"end": 40370,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16366,
											"end": 16368,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16405,
											"end": 16407,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 16385,
											"end": 16403,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16385,
											"end": 16403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16385,
											"end": 16403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16378,
											"end": 16408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16475,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 16424,
											"end": 16442,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 16424,
											"end": 16442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16424,
											"end": 16442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16417,
											"end": 16476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16493,
											"end": 16511,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 16493,
											"end": 16511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 16164,
											"end": 16517,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 46923,
											"end": 46983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47020,
											"end": 47030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47013,
											"end": 47030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 47013,
											"end": 47030,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 46681,
											"end": 47108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47063,
											"end": 47096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 47071,
											"end": 47081,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47083,
											"end": 47095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47818,
											"end": 47835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47818,
											"end": 47835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47818,
											"end": 47839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48050,
											"end": 48060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48044,
											"end": 48061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48107,
											"end": 48122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48094,
											"end": 48104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48090,
											"end": 48092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48086,
											"end": 48105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48079,
											"end": 48123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 47814,
											"end": 48202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48177,
											"end": 48189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48170,
											"end": 48190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 48170,
											"end": 48190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "209"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "378"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "497"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "496"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "497"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "496"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "497"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "498"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "499"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "498"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "499"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "500"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "498"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "500"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 422,
											"end": 553,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 422,
											"end": 553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 497,
											"end": 528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 497,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 529,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 477,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 477,
											"end": 547,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 533,
											"end": 545,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 558,
											"end": 692,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 558,
											"end": 692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 626,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 626,
											"end": 646,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 655,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 655,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 686,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 655,
											"end": 686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 558,
											"end": 692,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 558,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 558,
											"end": 692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 558,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 944,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 697,
											"end": 944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 756,
											"end": 762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 780,
											"end": 812,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 777,
											"end": 829,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 777,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 777,
											"end": 829,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 825,
											"end": 826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 827,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 777,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 777,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 864,
											"end": 873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 851,
											"end": 874,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 883,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 908,
											"end": 913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 883,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 883,
											"end": 914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 949,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1395,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2035,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 1461,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1482,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 1461,
											"end": 2035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1581,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1632,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1709,
											"end": 1730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1707,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1707,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1782,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1763,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1763,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1855,
											"end": 1866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1866,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 1952,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1932,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 1973,
											"end": 1987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1987,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1987,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2025,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1490,
											"end": 1499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 1461,
											"end": 2035,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2035,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 1461,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2052,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2055,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 949,
											"end": 2061,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 949,
											"end": 2061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2688,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2440,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2571,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2555,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2572,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2589,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 2537,
											"end": 2589,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2589,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 2537,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2608,
											"end": 2631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2608,
											"end": 2631,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2608,
											"end": 2631,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2682,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 3351,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2693,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 2937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 2937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 2937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 2999,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 2999,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2835,
											"end": 2839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2835,
											"end": 2839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3325,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 3130,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3151,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3325,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 3130,
											"end": 3325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3222,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3205,
											"end": 3244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3315,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3277,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3242,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 3130,
											"end": 3325,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3325,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 3130,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3342,
											"end": 3345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3345,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 3351,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2693,
											"end": 3351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3739,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3356,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3449,
											"end": 3455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3490,
											"end": 3499,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3500,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3505,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 3470,
											"end": 3522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3522,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 3470,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3563,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3564,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3600,
											"end": 3609,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3615,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3654,
											"end": 3663,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3669,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 3703,
											"end": 3708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 3678,
											"end": 3709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3709,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 3678,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4079,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3952,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4023,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4008,
											"end": 4011,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4004,
											"end": 4024,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 4048,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4041,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4034,
											"end": 4049,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4065,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4073,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 5205,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4084,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4201,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4242,
											"end": 4244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4221,
											"end": 4228,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4245,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4262,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 4210,
											"end": 4262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4260,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4262,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 4210,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4298,
											"end": 4307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4308,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4360,
											"end": 4366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4388,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 4354,
											"end": 4388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4381,
											"end": 4382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4386,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4388,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 4354,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4411,
											"end": 4420,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4467,
											"end": 4474,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4456,
											"end": 4458,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4475,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4438,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 4438,
											"end": 4493,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4491,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4438,
											"end": 4493,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 4438,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 4527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4528,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4540,
											"end": 4550,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4537,
											"end": 4573,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4537,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 4537,
											"end": 4573,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4553,
											"end": 4571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 4553,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4599,
											"end": 4601,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4597,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4592,
											"end": 4602,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4633,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4625,
											"end": 4634,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4696,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4690,
											"end": 4697,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4687,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4677,
											"end": 4688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4671,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4755,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4734,
											"end": 4756,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4731,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4714,
											"end": 4732,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4757,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4780,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 4708,
											"end": 4780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4760,
											"end": 4778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4789,
											"end": 4811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4880,
											"end": 4895,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4880,
											"end": 4895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4880,
											"end": 4895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4880,
											"end": 4895,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4922,
											"end": 4933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4969,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4969,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4986,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 4947,
											"end": 4986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4979,
											"end": 4980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 4984,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4986,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 4947,
											"end": 4986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5017,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5017,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5017,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5174,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 5026,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5042,
											"end": 5048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5037,
											"end": 5040,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5049,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 5026,
											"end": 5174,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 5127,
											"end": 5130,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 5108,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5131,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 5108,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5132,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5071,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5071,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5071,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 5026,
											"end": 5174,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5174,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 5026,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5199,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 5205,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4084,
											"end": 5205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5210,
											"end": 5550,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5210,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5412,
											"end": 5414,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5394,
											"end": 5415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5394,
											"end": 5415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5394,
											"end": 5415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5453,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5431,
											"end": 5449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5487,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5210,
											"end": 5550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 6453,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6269,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6339,
											"end": 6345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6380,
											"end": 6389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6371,
											"end": 6378,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6390,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6363,
											"end": 6395,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6412,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 6360,
											"end": 6412,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6412,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 6360,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6447,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 6453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6269,
											"end": 6453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7990,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7615,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7873,
											"end": 7888,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7873,
											"end": 7888,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7873,
											"end": 7888,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7940,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7920,
											"end": 7922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7905,
											"end": 7923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7905,
											"end": 7923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7898,
											"end": 7941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7972,
											"end": 7974,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7950,
											"end": 7984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7950,
											"end": 7984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7950,
											"end": 7984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7950,
											"end": 7984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7805,
											"end": 7807,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7790,
											"end": 7808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7790,
											"end": 7808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8528,
											"end": 8655,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 8528,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8599,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8584,
											"end": 8587,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8580,
											"end": 8600,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8570,
											"end": 8601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8620,
											"end": 8624,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 8617,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8610,
											"end": 8625,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8644,
											"end": 8648,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8641,
											"end": 8642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8649,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8787,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 8660,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8721,
											"end": 8731,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8716,
											"end": 8719,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8712,
											"end": 8732,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8709,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8702,
											"end": 8733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8756,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8749,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8742,
											"end": 8757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8776,
											"end": 8780,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8773,
											"end": 8774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8792,
											"end": 8927,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8792,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8831,
											"end": 8834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8852,
											"end": 8869,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8852,
											"end": 8869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8852,
											"end": 8869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 8849,
											"end": 8892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8872,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 8872,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 8872,
											"end": 8890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8872,
											"end": 8890,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 8872,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8919,
											"end": 8920,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8908,
											"end": 8921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8908,
											"end": 8921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8792,
											"end": 8927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10774,
											"end": 10899,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 10774,
											"end": 10899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10860,
											"end": 10870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10860,
											"end": 10870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10860,
											"end": 10870,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10857,
											"end": 10893,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10857,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 10857,
											"end": 10893,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 10873,
											"end": 10891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 11032,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 10904,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10971,
											"end": 10980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10971,
											"end": 10980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10971,
											"end": 10980,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10992,
											"end": 11003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10992,
											"end": 11003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10992,
											"end": 11003,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10989,
											"end": 11026,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10989,
											"end": 11026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 10989,
											"end": 11026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11006,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 11006,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 11006,
											"end": 11024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11288,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 11037,
											"end": 11288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11160,
											"end": 11162,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11148,
											"end": 11157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11139,
											"end": 11146,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11135,
											"end": 11158,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11131,
											"end": 11163,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11128,
											"end": 11180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11128,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 11128,
											"end": 11180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11176,
											"end": 11177,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11173,
											"end": 11174,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11166,
											"end": 11178,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11128,
											"end": 11180,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 11128,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11208,
											"end": 11217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11202,
											"end": 11218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 11252,
											"end": 11257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 11227,
											"end": 11258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13629,
											"end": 13906,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 13629,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 13702,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13749,
											"end": 13751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13737,
											"end": 13746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13728,
											"end": 13735,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13724,
											"end": 13747,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13720,
											"end": 13752,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13717,
											"end": 13769,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13717,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 13717,
											"end": 13769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13765,
											"end": 13766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13762,
											"end": 13763,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13755,
											"end": 13767,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13717,
											"end": 13769,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 13717,
											"end": 13769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13797,
											"end": 13806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 13807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13850,
											"end": 13855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13843,
											"end": 13856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13836,
											"end": 13857,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13829,
											"end": 13834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13826,
											"end": 13858,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13816,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 13816,
											"end": 13876,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13872,
											"end": 13873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13869,
											"end": 13870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13862,
											"end": 13874,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13911,
											"end": 14128,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 13911,
											"end": 14128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13951,
											"end": 13952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13977,
											"end": 13978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 13967,
											"end": 14099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14021,
											"end": 14031,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 14016,
											"end": 14019,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14012,
											"end": 14032,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14009,
											"end": 14010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14002,
											"end": 14033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14056,
											"end": 14060,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 14053,
											"end": 14054,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14046,
											"end": 14061,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14084,
											"end": 14088,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14081,
											"end": 14082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14074,
											"end": 14089,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 14099,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 13967,
											"end": 14099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14113,
											"end": 14122,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 14113,
											"end": 14122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13911,
											"end": 14128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14133,
											"end": 14301,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 14133,
											"end": 14301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14206,
											"end": 14215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14206,
											"end": 14215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14206,
											"end": 14215,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 14237,
											"end": 14246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14237,
											"end": 14246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14254,
											"end": 14269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14254,
											"end": 14269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14254,
											"end": 14269,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 14248,
											"end": 14270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14248,
											"end": 14270,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14271,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 14224,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 14224,
											"end": 14295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14275,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 14275,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 14275,
											"end": 14293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14306,
											"end": 14433,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 14306,
											"end": 14433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14367,
											"end": 14377,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 14362,
											"end": 14365,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14358,
											"end": 14378,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14348,
											"end": 14379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14398,
											"end": 14402,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 14395,
											"end": 14396,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14388,
											"end": 14403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14422,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14419,
											"end": 14420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14412,
											"end": 14427,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15617,
											"end": 15867,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 15617,
											"end": 15867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15702,
											"end": 15703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15712,
											"end": 15825,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 15712,
											"end": 15825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15726,
											"end": 15732,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15723,
											"end": 15724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15720,
											"end": 15733,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15712,
											"end": 15825,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15712,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 15712,
											"end": 15825,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15802,
											"end": 15813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15802,
											"end": 15813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15802,
											"end": 15813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15796,
											"end": 15814,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15783,
											"end": 15794,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15783,
											"end": 15794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15783,
											"end": 15794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15776,
											"end": 15815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15748,
											"end": 15750,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15741,
											"end": 15751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15712,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 15712,
											"end": 15825,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15712,
											"end": 15825,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 15712,
											"end": 15825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15859,
											"end": 15860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15841,
											"end": 15857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15841,
											"end": 15857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15834,
											"end": 15861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15617,
											"end": 15867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15872,
											"end": 16159,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 15872,
											"end": 16159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16001,
											"end": 16004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16039,
											"end": 16045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16033,
											"end": 16046,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16055,
											"end": 16121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 16114,
											"end": 16120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16109,
											"end": 16112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16102,
											"end": 16106,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16094,
											"end": 16100,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16090,
											"end": 16107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16055,
											"end": 16121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 16055,
											"end": 16121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16055,
											"end": 16121,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 16055,
											"end": 16121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16137,
											"end": 16153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16137,
											"end": 16153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16137,
											"end": 16153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16137,
											"end": 16153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16137,
											"end": 16153,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15872,
											"end": 16159,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15872,
											"end": 16159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16522,
											"end": 16918,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 16522,
											"end": 16918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16671,
											"end": 16673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16660,
											"end": 16669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16653,
											"end": 16674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16634,
											"end": 16638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16703,
											"end": 16709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16697,
											"end": 16710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16746,
											"end": 16752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16741,
											"end": 16743,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16730,
											"end": 16739,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16726,
											"end": 16744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16719,
											"end": 16753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16762,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 16834,
											"end": 16840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16829,
											"end": 16831,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16818,
											"end": 16827,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16814,
											"end": 16832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16809,
											"end": 16811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16801,
											"end": 16807,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16797,
											"end": 16812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16762,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 16762,
											"end": 16841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16762,
											"end": 16841,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 16762,
											"end": 16841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16902,
											"end": 16904,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 16881,
											"end": 16896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16877,
											"end": 16906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16862,
											"end": 16907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16862,
											"end": 16907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16862,
											"end": 16907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16862,
											"end": 16907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16909,
											"end": 16911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16858,
											"end": 16912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16858,
											"end": 16912,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16522,
											"end": 16918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16522,
											"end": 16918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyNFT(uint256)": "51ed8288",
							"buyNFTbyERC20(uint256)": "047a5d43",
							"deSellNFT(uint256)": "512ddcf9",
							"getAllowedERC20()": "69c57352",
							"getFeeReceiver()": "e8a35392",
							"getMyTokensAtSale()": "a096c5a2",
							"getTokensAtSale(uint256,uint256)": "5b87f0f2",
							"getTokensAtSaleCount()": "c8f77899",
							"getTradeFee()": "952977f5",
							"getUserTokensAtSale(address)": "19c8c1c5",
							"isAllowedERC20(address)": "785fa7ce",
							"isMarketPlaceContract()": "527f2902",
							"marketNft()": "08cfbc19",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"sellNFT(uint256,uint256,address)": "7c237eea",
							"setAllowedERC20(address[])": "e9e4e160",
							"setFeeReceiver(address)": "efdcd974",
							"setTradeFee(uint256)": "10603023",
							"transferOwnership(address)": "f2fde38b",
							"version()": "54fd4d50",
							"withdrawERC20(address)": "f4f3b200",
							"withdrawWei()": "5211ac2e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"__feeReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"__tradeFee\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"__allowedERC20\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"BuyWithERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PutUpForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PutUpForSaleWithERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"WithdrawFromSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawWei\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFTbyERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deSellNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedERC20\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utx\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"ret\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utx\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"ret\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokensAtSaleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTradeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getUserTokensAtSale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"utx\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.SelledNFT[]\",\"name\":\"ret\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"isAllowedERC20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMarketPlaceContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketNft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"}],\"name\":\"sellNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newAllowedERC20\",\"type\":\"address[]\"}],\"name\":\"setAllowedERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFeeReceiver\",\"type\":\"address\"}],\"name\":\"setFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTradeFee\",\"type\":\"uint256\"}],\"name\":\"setTradeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawWei\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x803c9d36144cb3ddaefdd1c9b71ef2f4e517804cec7119183be39e7845923fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4eff55500329671498d36c368729bce57e322c84be19ab025ee137480b2c3d\",\"dweb:/ipfs/QmejZVHTvvjSyV32FbFNYnki4dtBoLJnM23c9ESdrjoiZD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2258,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2417,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "marketNft",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721)638"
							},
							{
								"astId": 2420,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "version",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2423,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_tradeFee",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2435,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_isTokensAtSale",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 2440,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_tokensAtSale",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(SelledNFT)2414_storage)"
							},
							{
								"astId": 2443,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_allowedERC20",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 2446,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_tokensIdsAtSale",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2448,
								"contract": "source/Marketplace.sol:Marketplace",
								"label": "_feeReceiver",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC721)638": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(SelledNFT)2414_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Marketplace.SelledNFT)",
								"numberOfBytes": "32",
								"value": "t_struct(SelledNFT)2414_storage"
							},
							"t_struct(SelledNFT)2414_storage": {
								"encoding": "inplace",
								"label": "struct Marketplace.SelledNFT",
								"members": [
									{
										"astId": 2405,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2407,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "seller",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 2409,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2411,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "erc20",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 2413,
										"contract": "source/Marketplace.sol:Marketplace",
										"label": "utx",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":17953:30569  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":17953:30569  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220347a56d46dfc564f11fe2773a2be6dc7b594ff56176331ba35d290bd31b5837a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220347a56d46dfc564f11fe2773a2be6dc7b594ff56176331ba35d290bd31b5837a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH27 0x56D46DFC564F11FE2773A2BE6DC7B594FF56176331BA35D290BD31 0xB5 DUP4 PUSH27 0x64736F6C6343000812003300000000000000000000000000000000 ",
							"sourceMap": "17953:12616:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;17953:12616:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220347a56d46dfc564f11fe2773a2be6dc7b594ff56176331ba35d290bd31b5837a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH27 0x56D46DFC564F11FE2773A2BE6DC7B594FF56176331BA35D290BD31 0xB5 DUP4 PUSH27 0x64736F6C6343000812003300000000000000000000000000000000 ",
							"sourceMap": "17953:12616:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 30569,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220347a56d46dfc564f11fe2773a2be6dc7b594ff56176331ba35d290bd31b5837a64736f6c63430008120033",
									".code": [
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 30569,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x803c9d36144cb3ddaefdd1c9b71ef2f4e517804cec7119183be39e7845923fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4eff55500329671498d36c368729bce57e322c84be19ab025ee137480b2c3d\",\"dweb:/ipfs/QmejZVHTvvjSyV32FbFNYnki4dtBoLJnM23c9ESdrjoiZD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x803c9d36144cb3ddaefdd1c9b71ef2f4e517804cec7119183be39e7845923fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4eff55500329671498d36c368729bce57e322c84be19ab025ee137480b2c3d\",\"dweb:/ipfs/QmejZVHTvvjSyV32FbFNYnki4dtBoLJnM23c9ESdrjoiZD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "source/Marketplace.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x803c9d36144cb3ddaefdd1c9b71ef2f4e517804cec7119183be39e7845923fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4eff55500329671498d36c368729bce57e322c84be19ab025ee137480b2c3d\",\"dweb:/ipfs/QmejZVHTvvjSyV32FbFNYnki4dtBoLJnM23c9ESdrjoiZD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2258,
								"contract": "source/Marketplace.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":6284:9950  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":6284:9950  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122039c9c03781ccca098a5a88c3c1fbfcbd6869a2655fd6196f805ec67adfe2459064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039c9c03781ccca098a5a88c3c1fbfcbd6869a2655fd6196f805ec67adfe2459064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xC9 0xC0 CALLDATACOPY DUP2 0xCC 0xCA MULMOD DUP11 GAS DUP9 0xC3 0xC1 0xFB 0xFC 0xBD PUSH9 0x69A2655FD6196F805E 0xC6 PUSH27 0xDFE2459064736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "6284:3666:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;6284:3666:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039c9c03781ccca098a5a88c3c1fbfcbd6869a2655fd6196f805ec67adfe2459064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xC9 0xC0 CALLDATACOPY DUP2 0xCC 0xCA MULMOD DUP11 GAS DUP9 0xC3 0xC1 0xFB 0xFC 0xBD PUSH9 0x69A2655FD6196F805E 0xC6 PUSH27 0xDFE2459064736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "6284:3666:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6284,
									"end": 9950,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039c9c03781ccca098a5a88c3c1fbfcbd6869a2655fd6196f805ec67adfe2459064736f6c63430008120033",
									".code": [
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 9950,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x803c9d36144cb3ddaefdd1c9b71ef2f4e517804cec7119183be39e7845923fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4eff55500329671498d36c368729bce57e322c84be19ab025ee137480b2c3d\",\"dweb:/ipfs/QmejZVHTvvjSyV32FbFNYnki4dtBoLJnM23c9ESdrjoiZD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":32254:38663  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":32254:38663  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122050032921219e3642ee0b477d81527eaeb45107044c193032f39ccd25f65eedb464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122050032921219e3642ee0b477d81527eaeb45107044c193032f39ccd25f65eedb464736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP SUB 0x29 0x21 0x21 SWAP15 CALLDATASIZE TIMESTAMP 0xEE SIGNEXTEND SELFBALANCE PUSH30 0x81527EAEB45107044C193032F39CCD25F65EEDB464736F6C634300081200 CALLER ",
							"sourceMap": "32254:6409:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;32254:6409:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122050032921219e3642ee0b477d81527eaeb45107044c193032f39ccd25f65eedb464736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP SUB 0x29 0x21 0x21 SWAP15 CALLDATASIZE TIMESTAMP 0xEE SIGNEXTEND SELFBALANCE PUSH30 0x81527EAEB45107044C193032F39CCD25F65EEDB464736F6C634300081200 CALLER ",
							"sourceMap": "32254:6409:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32254,
									"end": 38663,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122050032921219e3642ee0b477d81527eaeb45107044c193032f39ccd25f65eedb464736f6c63430008120033",
									".code": [
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 38663,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x803c9d36144cb3ddaefdd1c9b71ef2f4e517804cec7119183be39e7845923fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4eff55500329671498d36c368729bce57e322c84be19ab025ee137480b2c3d\",\"dweb:/ipfs/QmejZVHTvvjSyV32FbFNYnki4dtBoLJnM23c9ESdrjoiZD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Marketplace.sol\":30734:31815  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Marketplace.sol\":30734:31815  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209ba6d10905722aa5f7549ee53363c65826b7573d364db827a809f75cc08eb1a564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209ba6d10905722aa5f7549ee53363c65826b7573d364db827a809f75cc08eb1a564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xA6 0xD1 MULMOD SDIV PUSH19 0x2AA5F7549EE53363C65826B7573D364DB827A8 MULMOD 0xF7 0x5C 0xC0 DUP15 0xB1 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "30734:1081:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;30734:1081:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209ba6d10905722aa5f7549ee53363c65826b7573d364db827a809f75cc08eb1a564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xA6 0xD1 MULMOD SDIV PUSH19 0x2AA5F7549EE53363C65826B7573D364DB827A8 MULMOD 0xF7 0x5C 0xC0 DUP15 0xB1 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "30734:1081:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30734,
									"end": 31815,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ba6d10905722aa5f7549ee53363c65826b7573d364db827a809f75cc08eb1a564736f6c63430008120033",
									".code": [
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 31815,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Marketplace.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Marketplace.sol\":{\"keccak256\":\"0x803c9d36144cb3ddaefdd1c9b71ef2f4e517804cec7119183be39e7845923fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4eff55500329671498d36c368729bce57e322c84be19ab025ee137480b2c3d\",\"dweb:/ipfs/QmejZVHTvvjSyV32FbFNYnki4dtBoLJnM23c9ESdrjoiZD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"source/Marketplace.sol": {
				"ast": {
					"absolutePath": "source/Marketplace.sol",
					"exportedSymbols": {
						"Address": [
							2243
						],
						"Context": [
							21
						],
						"IERC165": [
							526
						],
						"IERC20": [
							517
						],
						"IERC20Permit": [
							165
						],
						"IERC721": [
							638
						],
						"Marketplace": [
							3550
						],
						"Math": [
							1502
						],
						"Ownable": [
							131
						],
						"Pausable": [
							2332
						],
						"SafeERC20": [
							441
						],
						"SafeMath": [
							1915
						],
						"SignedMath": [
							1605
						]
					},
					"id": 3551,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "641:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "718:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "729:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "709:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:0"
									},
									"scope": 21,
									"src": "656:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "829:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "840:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "813:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:0"
									},
									"scope": 21,
									"src": "762:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3551,
							"src": "623:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 23,
										"name": "Context",
										"nameLocations": [
											"1478:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1478:7:0"
									},
									"id": 24,
									"nodeType": "InheritanceSpecifier",
									"src": "1478:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 22,
								"nodeType": "StructuredDocumentation",
								"src": "942:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								21
							],
							"name": "Ownable",
							"nameLocation": "1467:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1509:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "1493:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 25,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 32,
									"name": "OwnershipTransferred",
									"nameLocation": "1530:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1567:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1551:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1598:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1582:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1550:57:0"
									},
									"src": "1524:84:0"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "1729:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 37,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1759:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1759:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 36,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1740:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1740:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1740:32:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1616:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 42,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1726:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:0:0"
									},
									"scope": 131,
									"src": "1715:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1894:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 45,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1905:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "1905:13:0"
											},
											{
												"id": 48,
												"nodeType": "PlaceholderStatement",
												"src": "1929:1:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1788:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 50,
									"name": "onlyOwner",
									"nameLocation": "1882:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1891:2:0"
									},
									"src": "1873:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "2074:32:0",
										"statements": [
											{
												"expression": {
													"id": 56,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "2092:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 55,
												"id": 57,
												"nodeType": "Return",
												"src": "2085:13:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1946:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2028:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2033:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:9:0"
									},
									"scope": 131,
									"src": "2019:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "2229:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 64,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "2248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 66,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 63,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "2240:68:0"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "2114:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2193:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2204:2:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2229:0:0"
									},
									"scope": 131,
									"src": "2184:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2721:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 80,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 79,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2732:30:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2324:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 77,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 76,
												"name": "onlyOwner",
												"nameLocations": [
													"2711:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "2711:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2711:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2676:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2721:0:0"
									},
									"scope": 131,
									"src": "2667:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2995:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 96,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "3014:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3034:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3026:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 97,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3026:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3026:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3014:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3038:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3006:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "3006:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 106,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "3109:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "3090:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3090:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "3090:28:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2778:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyOwner",
												"nameLocations": [
													"2985:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "2985:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2985:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2934:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2960:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2952:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:18:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2995:0:0"
									},
									"scope": 131,
									"src": "2925:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "3349:128:0",
										"statements": [
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3368:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "3360:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 116,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3360:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"id": 118,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "3379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3360:25:0"
											},
											{
												"expression": {
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 120,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "3396:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 121,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "3405:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3396:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "3396:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 125,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3450:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 126,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3460:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 124,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "3429:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3429:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "EmitStatement",
												"src": "3424:45:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3134:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3295:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3322:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "3314:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:18:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:0"
									},
									"scope": 131,
									"src": "3286:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3551,
							"src": "1449:2031:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 132,
								"nodeType": "StructuredDocumentation",
								"src": "3562:487:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 165,
							"linearizedBaseContracts": [
								165
							],
							"name": "IERC20Permit",
							"nameLocation": "4061:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "4081:812:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "4908:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4933:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4957:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4949:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4983:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4975:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5007:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4999:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5032:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5026:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 142,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5026:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5052:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5044:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5072:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5064:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4914:166:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5089:0:0"
									},
									"scope": 165,
									"src": "4899:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5098:300:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "5413:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5428:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5420:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5419:15:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5458:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5457:9:0"
									},
									"scope": 165,
									"src": "5404:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5475:130:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "5674:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5690:2:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5716:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 161,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5715:9:0"
									},
									"scope": 165,
									"src": "5665:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3551,
							"src": "4051:1677:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 166,
								"nodeType": "StructuredDocumentation",
								"src": "5817:465:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 441,
							"linearizedBaseContracts": [
								441
							],
							"name": "SafeERC20",
							"nameLocation": "6292:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 169,
									"libraryName": {
										"id": 167,
										"name": "Address",
										"nameLocations": [
											"6315:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2243,
										"src": "6315:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "6309:26:0",
									"typeName": {
										"id": 168,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6327:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "6415:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 180,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "6446:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 183,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "6476:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6482:8:0",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 484,
																		"src": "6476:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6491:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "6476:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 186,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "6501:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 187,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "6505:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 181,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6453:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6457:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "6453:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6453:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 179,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "6426:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6426:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "6426:86:0"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "6352:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6372:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6365:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 170,
														"name": "IERC20",
														"nameLocations": [
															"6365:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "6365:6:0"
													},
													"referencedDeclaration": 517,
													"src": "6365:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6387:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6379:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6364:41:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6415:0:0"
									},
									"scope": 441,
									"src": "6343:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "6618:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 205,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6649:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 208,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 195,
																			"src": "6679:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6685:12:0",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 516,
																		"src": "6679:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6698:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "6679:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 211,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "6708:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 212,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "6714:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 213,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "6718:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 206,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6656:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6660:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "6656:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6656:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 204,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "6629:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6629:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "6629:96:0"
											}
										]
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6537:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6561:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6554:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 194,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 193,
														"name": "IERC20",
														"nameLocations": [
															"6554:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "6554:6:0"
													},
													"referencedDeclaration": 517,
													"src": "6554:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6576:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6568:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6590:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6582:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6602:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6594:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6553:55:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6618:0:0"
									},
									"scope": 441,
									"src": "6528:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7078:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 230,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 226,
																			"src": "7332:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7341:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7332:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 233,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7331:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 238,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "7372:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$441",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$441",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 237,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7364:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 236,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "7364:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7364:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 240,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 224,
																					"src": "7379:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 234,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 222,
																					"src": "7348:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$517",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7354:9:0",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 494,
																				"src": "7348:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7348:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7391:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7348:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 244,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7347:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7331:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7408:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7309:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7309:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 250,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "7506:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 253,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "7536:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7542:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 504,
																		"src": "7536:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7550:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "7536:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "7560:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 257,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "7569:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 251,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7513:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7517:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "7513:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7513:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 249,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "7486:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7486:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "7486:90:0"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "6741:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "7011:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7030:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7023:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "IERC20",
														"nameLocations": [
															"7023:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "7023:6:0"
													},
													"referencedDeclaration": 517,
													"src": "7023:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7045:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7062:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7054:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7022:46:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7078:0:0"
									},
									"scope": 441,
									"src": "7002:582:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "7678:197:0",
										"statements": [
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "7697:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 297,
														"src": "7689:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 278,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7736:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$441",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$441",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7728:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 276,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7728:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7728:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 280,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7743:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 274,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "7712:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$517",
																	"typeString": "contract IERC20"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7718:9:0",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 494,
															"src": "7712:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7712:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 282,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "7754:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7712:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7689:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 286,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "7790:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 289,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 265,
																			"src": "7820:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7826:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 504,
																		"src": "7820:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7834:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "7820:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 292,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "7844:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 293,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "7853:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 287,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7797:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7801:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "7797:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7797:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 285,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "7770:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7770:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "7770:97:0"
											}
										]
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "7601:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7630:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7623:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 263,
														"name": "IERC20",
														"nameLocations": [
															"7623:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "7623:6:0"
													},
													"referencedDeclaration": 517,
													"src": "7623:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7637:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7662:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7654:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7622:46:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7678:0:0"
									},
									"scope": 441,
									"src": "7592:283:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7969:377:0",
										"statements": [
											{
												"id": 344,
												"nodeType": "UncheckedBlock",
												"src": "7980:359:0",
												"statements": [
													{
														"assignments": [
															309
														],
														"declarations": [
															{
																"constant": false,
																"id": 309,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "8013:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 344,
																"src": "8005:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 308,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8005:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 318,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 314,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8052:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$441",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$441",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8044:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 312,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8044:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8044:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 316,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "8059:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 310,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "8028:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8034:9:0",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 494,
																"src": "8028:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8028:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8005:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 320,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "8090:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 321,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "8106:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8090:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8113:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 319,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "8082:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8082:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "8082:75:0"
													},
													{
														"assignments": [
															327
														],
														"declarations": [
															{
																"constant": false,
																"id": 327,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "8180:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 344,
																"src": "8172:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 326,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8172:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 331,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 328,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "8195:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "8210:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8195:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8172:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 333,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "8250:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 336,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 301,
																					"src": "8280:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$517",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8286:7:0",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 504,
																				"src": "8280:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8294:8:0",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "8280:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 339,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 303,
																			"src": "8304:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 340,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "8313:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 334,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "8257:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8261:18:0",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "8257:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8257:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 332,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "8230:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8230:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 343,
														"nodeType": "ExpressionStatement",
														"src": "8230:97:0"
													}
												]
											}
										]
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "7892:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7921:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7914:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 299,
														"name": "IERC20",
														"nameLocations": [
															"7914:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "7914:6:0"
													},
													"referencedDeclaration": 517,
													"src": "7914:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7936:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7953:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7945:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7913:46:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7969:0:0"
									},
									"scope": 441,
									"src": "7883:463:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8578:262:0",
										"statements": [
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "8597:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "8589:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 372,
												"initialValue": {
													"arguments": [
														{
															"id": 370,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8624:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 368,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8611:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$165",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8617:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "8611:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8611:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8589:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 376,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8654:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "8661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "8670:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 379,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "8677:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 380,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "8687:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 381,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "8690:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 382,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "8693:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 373,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8641:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$165",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8647:6:0",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 150,
														"src": "8641:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8641:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "8641:54:0"
											},
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "8714:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "8706:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 385,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [
														{
															"id": 389,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8740:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 387,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8727:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$165",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8733:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "8727:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8727:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8706:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "8765:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 394,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "8779:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8793:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8779:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8765:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8796:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8757:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8757:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8757:75:0"
											}
										]
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "8363:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8397:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8384:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$165",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 347,
														"name": "IERC20Permit",
														"nameLocations": [
															"8384:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 165,
														"src": "8384:12:0"
													},
													"referencedDeclaration": 165,
													"src": "8384:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$165",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8421:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8413:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8445:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8437:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8471:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8463:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "8495:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8487:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "8520:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8514:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 358,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8514:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "8540:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8532:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "8560:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8552:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 362,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8373:195:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8578:0:0"
									},
									"scope": 441,
									"src": "8354:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "9301:646:0",
										"statements": [
											{
												"assignments": [
													412
												],
												"declarations": [
													{
														"constant": false,
														"id": 412,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "9668:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 439,
														"src": "9655:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 411,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9655:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"arguments": [
														{
															"id": 418,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9709:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9715:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 415,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "9689:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$517",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9681:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 413,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9681:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9681:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9696:12:0",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2003,
														"src": "9681:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9681:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9655:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 422,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9765:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9776:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9765:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9785:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9765:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 438,
												"nodeType": "IfStatement",
												"src": "9761:179:0",
												"trueBody": {
													"id": 437,
													"nodeType": "Block",
													"src": "9788:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 429,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "9862:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 431,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "9875:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 430,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "9875:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 432,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "9874:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 427,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "9851:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "9855:6:0",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "9851:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9851:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9883:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 426,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9843:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9843:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 436,
															"nodeType": "ExpressionStatement",
															"src": "9843:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "8848:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "9240:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9267:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "9260:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$517",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 405,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 404,
														"name": "IERC20",
														"nameLocations": [
															"9260:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 517,
														"src": "9260:6:0"
													},
													"referencedDeclaration": 517,
													"src": "9260:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9287:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "9274:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9274:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9259:33:0"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9301:0:0"
									},
									"scope": 441,
									"src": "9231:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3551,
							"src": "6284:3666:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 442,
								"nodeType": "StructuredDocumentation",
								"src": "10030:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 517,
							"linearizedBaseContracts": [
								517
							],
							"name": "IERC20",
							"nameLocation": "10114:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "10128:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 451,
									"name": "Transfer",
									"nameLocation": "10303:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10328:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10312:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10350:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10334:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10334:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10362:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10354:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10311:57:0"
									},
									"src": "10297:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "10377:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 460,
									"name": "Approval",
									"nameLocation": "10540:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "10549:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10588:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "10572:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10605:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "10597:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10548:63:0"
									},
									"src": "10534:78:0"
								},
								{
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "10620:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "10703:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10714:2:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "10740:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10739:9:0"
									},
									"scope": 517,
									"src": "10694:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "10757:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "10846:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10864:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "10856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10855:17:0"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "10896:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10895:9:0"
									},
									"scope": 517,
									"src": "10837:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "10913:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "11136:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11153:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11145:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11165:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11157:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11144:28:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11191:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11191:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11190:6:0"
									},
									"scope": 517,
									"src": "11127:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "11205:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "11490:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11508:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11500:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11523:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11515:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11499:32:0"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11555:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11554:9:0"
									},
									"scope": 517,
									"src": "11481:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "11572:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "12242:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12258:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12250:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12275:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12267:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12249:33:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12301:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12301:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12300:6:0"
									},
									"scope": 517,
									"src": "12233:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "12315:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "12625:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12660:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12652:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12672:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12664:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12637:42:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12698:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12698:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12697:6:0"
									},
									"scope": 517,
									"src": "12616:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3551,
							"src": "10104:2603:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 526,
							"linearizedBaseContracts": [
								526
							],
							"name": "IERC165",
							"nameLocation": "12723:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "12738:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "13100:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "13125:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "13118:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 519,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "13118:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13117:20:0"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "13161:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13160:6:0"
									},
									"scope": 526,
									"src": "13091:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3551,
							"src": "12713:457:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "IERC165",
										"nameLocations": [
											"13195:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 526,
										"src": "13195:7:0"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "13195:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 638,
							"linearizedBaseContracts": [
								638,
								526
							],
							"name": "IERC721",
							"nameLocation": "13184:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "13210:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 537,
									"name": "Transfer",
									"nameLocation": "13312:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13337:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "13321:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13359:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "13343:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13379:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "13363:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13320:67:0"
									},
									"src": "13306:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "13396:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 546,
									"name": "Approval",
									"nameLocation": "13504:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13529:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "13513:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13552:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "13536:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13578:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "13562:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13512:74:0"
									},
									"src": "13498:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "13595:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 555,
									"name": "ApprovalForAll",
									"nameLocation": "13726:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13757:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13741:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13780:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13764:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13795:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13790:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13790:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13740:64:0"
									},
									"src": "13720:85:0"
								},
								{
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "13813:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13906:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13924:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13916:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13915:15:0"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "13962:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13954:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13953:17:0"
									},
									"scope": 638,
									"src": "13897:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "13979:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "14131:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14147:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "14139:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14138:17:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "14179:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:15:0"
									},
									"scope": 638,
									"src": "14122:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "14202:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14785:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14820:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14812:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14843:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14835:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14864:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14897:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "14882:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14882:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14801:107:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14917:0:0"
									},
									"scope": 638,
									"src": "14776:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "14926:700:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "15641:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "15668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15699:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "15691:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15720:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "15712:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15657:77:0"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15743:0:0"
									},
									"scope": 638,
									"src": "15632:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "15752:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "16284:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16315:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "16307:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16338:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "16330:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16359:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "16351:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16296:77:0"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16382:0:0"
									},
									"scope": 638,
									"src": "16275:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "16391:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16870:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16886:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16878:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16898:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16890:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16877:29:0"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16915:0:0"
									},
									"scope": 638,
									"src": "16861:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "16924:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "17257:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17283:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "17275:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "17298:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "17293:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17293:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17274:34:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17317:0:0"
									},
									"scope": 638,
									"src": "17248:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "17326:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "17486:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17506:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "17498:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17497:17:0"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17546:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "17538:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17537:18:0"
									},
									"scope": 638,
									"src": "17477:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "17564:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17721:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "17738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17761:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "17753:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17737:33:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "17794:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17794:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17793:6:0"
									},
									"scope": 638,
									"src": "17712:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3551,
							"src": "13174:4629:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 639,
								"nodeType": "StructuredDocumentation",
								"src": "17876:75:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1502,
							"linearizedBaseContracts": [
								1502
							],
							"name": "Math",
							"nameLocation": "17961:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 643,
									"members": [
										{
											"id": 640,
											"name": "Down",
											"nameLocation": "17998:4:0",
											"nodeType": "EnumValue",
											"src": "17998:4:0"
										},
										{
											"id": 641,
											"name": "Up",
											"nameLocation": "18041:2:0",
											"nodeType": "EnumValue",
											"src": "18041:2:0"
										},
										{
											"id": 642,
											"name": "Zero",
											"nameLocation": "18073:4:0",
											"nodeType": "EnumValue",
											"src": "18073:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "17978:8:0",
									"nodeType": "EnumDefinition",
									"src": "17973:126:0"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "18241:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 653,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "18259:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 654,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "18263:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18259:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 657,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "18271:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18259:13:0",
													"trueExpression": {
														"id": 656,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "18267:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 652,
												"id": 659,
												"nodeType": "Return",
												"src": "18252:20:0"
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "18107:61:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "18183:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18195:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "18187:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18206:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "18198:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18186:22:0"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "18232:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18231:9:0"
									},
									"scope": 1502,
									"src": "18174:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "18423:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 671,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "18441:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 672,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "18445:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18441:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 675,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "18453:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18441:13:0",
													"trueExpression": {
														"id": 674,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "18449:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 670,
												"id": 677,
												"nodeType": "Return",
												"src": "18434:20:0"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "18288:62:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "18365:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18377:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "18369:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18388:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "18380:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18368:22:0"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "18414:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18413:9:0"
									},
									"scope": 1502,
									"src": "18356:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "18652:85:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 689,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "18709:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 690,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "18713:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18709:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 692,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18708:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 693,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "18719:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 694,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "18723:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18719:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 696,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "18718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18728:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "18718:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18708:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 688,
												"id": 700,
												"nodeType": "Return",
												"src": "18701:28:0"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "18470:105:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "18590:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18606:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "18598:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18617:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "18609:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18597:22:0"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "18643:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18642:9:0"
									},
									"scope": 1502,
									"src": "18581:156:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "19015:126:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "19105:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19110:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19105:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 716,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 705,
																			"src": "19119:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19123:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19119:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 719,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "19128:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19118:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19132:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "19118:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19105:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19114:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 711,
												"id": 725,
												"nodeType": "Return",
												"src": "19098:35:0"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "18745:193:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "18953:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18969:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "18961:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18980:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "18972:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18960:22:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "19006:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19005:9:0"
									},
									"scope": 1502,
									"src": "18944:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "19562:3898:0",
										"statements": [
											{
												"id": 848,
												"nodeType": "UncheckedBlock",
												"src": "19573:3880:0",
												"statements": [
													{
														"assignments": [
															740
														],
														"declarations": [
															{
																"constant": false,
																"id": 740,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "19906:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "19898:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 739,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19898:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 741,
														"nodeType": "VariableDeclarationStatement",
														"src": "19898:13:0"
													},
													{
														"assignments": [
															743
														],
														"declarations": [
															{
																"constant": false,
																"id": 743,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "19979:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "19971:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 742,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19971:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 744,
														"nodeType": "VariableDeclarationStatement",
														"src": "19971:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "20052:161:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20071:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20088:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20091:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20098:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "20094:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20094:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "20081:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20081:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "20075:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20119:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20132:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20135:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "20128:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20128:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "20119:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20155:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "20172:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "20176:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "20168:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20168:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "20187:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "20191:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "20184:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20184:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20164:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20164:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "20155:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "20119:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "20176:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "20191:5:0",
																"valueSize": 1
															},
															{
																"declaration": 743,
																"isOffset": false,
																"isSlot": false,
																"src": "20155:5:0",
																"valueSize": 1
															},
															{
																"declaration": 730,
																"isOffset": false,
																"isSlot": false,
																"src": "20088:1:0",
																"valueSize": 1
															},
															{
																"declaration": 730,
																"isOffset": false,
																"isSlot": false,
																"src": "20132:1:0",
																"valueSize": 1
															},
															{
																"declaration": 732,
																"isOffset": false,
																"isSlot": false,
																"src": "20091:1:0",
																"valueSize": 1
															},
															{
																"declaration": 732,
																"isOffset": false,
																"isSlot": false,
																"src": "20135:1:0",
																"valueSize": 1
															}
														],
														"id": 745,
														"nodeType": "InlineAssembly",
														"src": "20043:170:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 746,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "20297:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20306:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20297:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 754,
														"nodeType": "IfStatement",
														"src": "20293:77:0",
														"trueBody": {
															"id": 753,
															"nodeType": "Block",
															"src": "20309:61:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 749,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "20335:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 750,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "20343:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20335:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 738,
																	"id": 752,
																	"nodeType": "Return",
																	"src": "20328:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 756,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "20483:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 757,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 743,
																		"src": "20497:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "20483:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20504:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 755,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "20475:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20475:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 761,
														"nodeType": "ExpressionStatement",
														"src": "20475:53:0"
													},
													{
														"assignments": [
															763
														],
														"declarations": [
															{
																"constant": false,
																"id": 763,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "20799:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "20791:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 762,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20791:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 764,
														"nodeType": "VariableDeclarationStatement",
														"src": "20791:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "20832:298:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "20903:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20923:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20926:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "20929:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "20916:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20916:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "20903:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21026:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "21039:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "21049:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "21060:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "21046:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21046:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21035:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21035:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "21026:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21085:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "21098:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "21105:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21094:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21094:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "21085:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 734,
																"isOffset": false,
																"isSlot": false,
																"src": "20929:11:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21060:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21085:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21098:5:0",
																"valueSize": 1
															},
															{
																"declaration": 743,
																"isOffset": false,
																"isSlot": false,
																"src": "21026:5:0",
																"valueSize": 1
															},
															{
																"declaration": 743,
																"isOffset": false,
																"isSlot": false,
																"src": "21039:5:0",
																"valueSize": 1
															},
															{
																"declaration": 763,
																"isOffset": false,
																"isSlot": false,
																"src": "20903:9:0",
																"valueSize": 1
															},
															{
																"declaration": 763,
																"isOffset": false,
																"isSlot": false,
																"src": "21049:9:0",
																"valueSize": 1
															},
															{
																"declaration": 763,
																"isOffset": false,
																"isSlot": false,
																"src": "21105:9:0",
																"valueSize": 1
															},
															{
																"declaration": 730,
																"isOffset": false,
																"isSlot": false,
																"src": "20923:1:0",
																"valueSize": 1
															},
															{
																"declaration": 732,
																"isOffset": false,
																"isSlot": false,
																"src": "20926:1:0",
																"valueSize": 1
															}
														],
														"id": 765,
														"nodeType": "InlineAssembly",
														"src": "20823:307:0"
													},
													{
														"assignments": [
															767
														],
														"declarations": [
															{
																"constant": false,
																"id": 767,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "21451:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "21443:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 766,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21443:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 775,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 768,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "21458:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "21473:12:0",
																			"subExpression": {
																				"id": 769,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 734,
																				"src": "21474:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21488:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "21473:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 773,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21472:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21458:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21443:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "21514:371:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "21581:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "21600:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "21613:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "21596:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21596:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "21581:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21688:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "21701:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "21708:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "21697:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21697:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "21688:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21831:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "21851:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "21854:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "21847:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21847:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "21861:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "21843:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21843:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21868:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21839:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21839:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "21831:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 734,
																"isOffset": false,
																"isSlot": false,
																"src": "21581:11:0",
																"valueSize": 1
															},
															{
																"declaration": 734,
																"isOffset": false,
																"isSlot": false,
																"src": "21600:11:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21688:5:0",
																"valueSize": 1
															},
															{
																"declaration": 740,
																"isOffset": false,
																"isSlot": false,
																"src": "21701:5:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21613:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21708:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21831:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21854:4:0",
																"valueSize": 1
															},
															{
																"declaration": 767,
																"isOffset": false,
																"isSlot": false,
																"src": "21861:4:0",
																"valueSize": 1
															}
														],
														"id": 776,
														"nodeType": "InlineAssembly",
														"src": "21505:380:0"
													},
													{
														"expression": {
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 777,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "21954:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 778,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "21963:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 779,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "21971:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21963:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21954:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 782,
														"nodeType": "ExpressionStatement",
														"src": "21954:21:0"
													},
													{
														"assignments": [
															784
														],
														"declarations": [
															{
																"constant": false,
																"id": 784,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "22306:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "22298:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 783,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22298:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 791,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22317:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 786,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "22321:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22317:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 788,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22316:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22336:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "22316:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22298:39:0"
													},
													{
														"expression": {
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 792,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22569:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 794,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22573:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 795,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22587:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22573:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22569:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22558:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 799,
														"nodeType": "ExpressionStatement",
														"src": "22558:36:0"
													},
													{
														"expression": {
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 800,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22628:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22639:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 802,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22643:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 803,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22657:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22643:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22639:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22628:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 807,
														"nodeType": "ExpressionStatement",
														"src": "22628:36:0"
													},
													{
														"expression": {
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 808,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22699:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22710:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 810,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22714:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 811,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22728:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22714:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22710:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22699:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 815,
														"nodeType": "ExpressionStatement",
														"src": "22699:36:0"
													},
													{
														"expression": {
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 816,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22770:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22781:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 818,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22785:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 819,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22799:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22785:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22781:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22770:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 823,
														"nodeType": "ExpressionStatement",
														"src": "22770:36:0"
													},
													{
														"expression": {
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 824,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22841:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22852:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 826,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22856:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 827,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22870:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22856:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22852:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22841:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 831,
														"nodeType": "ExpressionStatement",
														"src": "22841:36:0"
													},
													{
														"expression": {
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 832,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "22913:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22924:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 834,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "22928:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 835,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "22942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22928:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22924:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22913:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 839,
														"nodeType": "ExpressionStatement",
														"src": "22913:36:0"
													},
													{
														"expression": {
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 840,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "23389:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 841,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "23398:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 842,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "23406:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23398:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23389:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 845,
														"nodeType": "ExpressionStatement",
														"src": "23389:24:0"
													},
													{
														"expression": {
															"id": 846,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "23435:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 738,
														"id": 847,
														"nodeType": "Return",
														"src": "23428:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "19149:309:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "19473:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "19488:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19480:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "19499:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19491:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "19510:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19502:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19479:43:0"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "19554:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "19546:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19545:16:0"
									},
									"scope": 1502,
									"src": "19464:3996:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "23707:195:0",
										"statements": [
											{
												"assignments": [
													866
												],
												"declarations": [
													{
														"constant": false,
														"id": 866,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23726:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 893,
														"src": "23718:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 865,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 872,
												"initialValue": {
													"arguments": [
														{
															"id": 868,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "23742:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 869,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "23745:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 870,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "23748:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 867,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															850,
															894
														],
														"referencedDeclaration": 850,
														"src": "23735:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23735:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23718:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$643",
															"typeString": "enum Math.Rounding"
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "23775:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$643",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 874,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "23787:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "23796:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 641,
															"src": "23787:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$643",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "23775:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 878,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "23809:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 879,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "23812:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 880,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "23815:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 877,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "23802:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23802:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23830:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "23802:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23775:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "23771:100:0",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "23833:38:0",
													"statements": [
														{
															"expression": {
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 885,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "23848:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23858:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "23848:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 888,
															"nodeType": "ExpressionStatement",
															"src": "23848:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 891,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 866,
													"src": "23888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 864,
												"id": 892,
												"nodeType": "Return",
												"src": "23881:13:0"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "23468:123:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "23606:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "23621:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23613:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "23632:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23624:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "23643:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23635:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23665:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23656:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 859,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 858,
														"name": "Rounding",
														"nameLocations": [
															"23656:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "23656:8:0"
													},
													"referencedDeclaration": 643,
													"src": "23656:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23612:62:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "23698:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23697:9:0"
									},
									"scope": 1502,
									"src": "23597:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "24185:1616:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 902,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "24200:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24205:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24200:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 908,
												"nodeType": "IfStatement",
												"src": "24196:47:0",
												"trueBody": {
													"id": 907,
													"nodeType": "Block",
													"src": "24208:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24230:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 901,
															"id": 906,
															"nodeType": "Return",
															"src": "24223:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24942:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "24934:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24934:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24951:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 913,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 897,
																			"src": "24962:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 912,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1174,
																			1210
																		],
																		"referencedDeclaration": 1174,
																		"src": "24957:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24957:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24968:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24957:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 917,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24956:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24951:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24934:36:0"
											},
											{
												"id": 1004,
												"nodeType": "UncheckedBlock",
												"src": "25377:417:0",
												"statements": [
													{
														"expression": {
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 920,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25402:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 921,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25412:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 924,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 922,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25421:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 923,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25425:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25421:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25412:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 926,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25411:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25436:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25411:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25402:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 930,
														"nodeType": "ExpressionStatement",
														"src": "25402:35:0"
													},
													{
														"expression": {
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 931,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25452:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 932,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25462:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 933,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25471:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 934,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25475:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25471:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25462:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 937,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25461:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25486:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25461:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25452:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 941,
														"nodeType": "ExpressionStatement",
														"src": "25452:35:0"
													},
													{
														"expression": {
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 942,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25502:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 943,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25512:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 946,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 944,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25521:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 945,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25525:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25521:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25512:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 948,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25511:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25536:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25511:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25502:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 952,
														"nodeType": "ExpressionStatement",
														"src": "25502:35:0"
													},
													{
														"expression": {
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 953,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25552:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 954,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25562:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 955,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25571:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 956,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25575:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25571:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25562:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 959,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25561:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25586:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25561:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25552:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 963,
														"nodeType": "ExpressionStatement",
														"src": "25552:35:0"
													},
													{
														"expression": {
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 964,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25602:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 965,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25612:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 966,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25621:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 967,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25625:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25621:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25612:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 970,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25611:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25636:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25611:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25602:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 974,
														"nodeType": "ExpressionStatement",
														"src": "25602:35:0"
													},
													{
														"expression": {
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 975,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25652:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 976,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25662:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 977,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25671:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 978,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25675:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25671:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25662:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 981,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25661:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25686:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25661:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25652:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 985,
														"nodeType": "ExpressionStatement",
														"src": "25652:35:0"
													},
													{
														"expression": {
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 986,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "25702:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 987,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "25712:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 988,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "25721:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 989,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "25725:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25721:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25712:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 992,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25711:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25736:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25711:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25702:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 996,
														"nodeType": "ExpressionStatement",
														"src": "25702:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 998,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "25763:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 999,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "25771:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1000,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "25775:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25771:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 997,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "25759:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25759:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 901,
														"id": 1003,
														"nodeType": "Return",
														"src": "25752:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "23910:212:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "24137:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24150:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "24142:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24141:11:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "24176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24175:9:0"
									},
									"scope": 1502,
									"src": "24128:1673:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "25982:166:0",
										"statements": [
											{
												"id": 1040,
												"nodeType": "UncheckedBlock",
												"src": "25993:148:0",
												"statements": [
													{
														"assignments": [
															1018
														],
														"declarations": [
															{
																"constant": false,
																"id": 1018,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26026:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1040,
																"src": "26018:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1017,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1022,
														"initialValue": {
															"arguments": [
																{
																	"id": 1020,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "26040:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1019,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1006,
																	1042
																],
																"referencedDeclaration": 1006,
																"src": "26035:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26035:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26018:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1023,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "26064:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1024,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1012,
																					"src": "26074:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1025,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "26086:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1026,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "26095:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "26086:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "26074:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1030,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1028,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1018,
																						"src": "26101:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1029,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1018,
																						"src": "26110:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "26101:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1031,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1009,
																					"src": "26119:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26101:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "26074:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26127:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "26074:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26123:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "26073:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "26064:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1016,
														"id": 1039,
														"nodeType": "Return",
														"src": "26057:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "25809:91:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "25915:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25928:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25920:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25940:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25931:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1011,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1010,
														"name": "Rounding",
														"nameLocations": [
															"25931:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "25931:8:0"
													},
													"referencedDeclaration": 643,
													"src": "25931:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25919:30:0"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25973:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25972:9:0"
									},
									"scope": 1502,
									"src": "25906:242:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "26339:958:0",
										"statements": [
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26358:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "26350:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26350:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": {
													"hexValue": "30",
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26367:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26350:18:0"
											},
											{
												"id": 1170,
												"nodeType": "UncheckedBlock",
												"src": "26379:887:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1054,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26408:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26417:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "26408:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26423:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26408:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1068,
														"nodeType": "IfStatement",
														"src": "26404:102:0",
														"trueBody": {
															"id": 1067,
															"nodeType": "Block",
															"src": "26426:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1059,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26445:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26455:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "26445:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1062,
																	"nodeType": "ExpressionStatement",
																	"src": "26445:13:0"
																},
																{
																	"expression": {
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1063,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26477:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26487:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "26477:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1066,
																	"nodeType": "ExpressionStatement",
																	"src": "26477:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1069,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26524:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26533:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "26524:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26538:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26524:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1083,
														"nodeType": "IfStatement",
														"src": "26520:99:0",
														"trueBody": {
															"id": 1082,
															"nodeType": "Block",
															"src": "26541:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1074,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26560:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26570:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "26560:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1077,
																	"nodeType": "ExpressionStatement",
																	"src": "26560:12:0"
																},
																{
																	"expression": {
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1078,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26591:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26601:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "26591:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1081,
																	"nodeType": "ExpressionStatement",
																	"src": "26591:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1084,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26637:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26646:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "26637:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26651:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26637:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1098,
														"nodeType": "IfStatement",
														"src": "26633:99:0",
														"trueBody": {
															"id": 1097,
															"nodeType": "Block",
															"src": "26654:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1089,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26673:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26683:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "26673:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1092,
																	"nodeType": "ExpressionStatement",
																	"src": "26673:12:0"
																},
																{
																	"expression": {
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1093,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26704:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26714:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "26704:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1096,
																	"nodeType": "ExpressionStatement",
																	"src": "26704:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1099,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26750:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26759:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "26750:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26764:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26750:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1113,
														"nodeType": "IfStatement",
														"src": "26746:99:0",
														"trueBody": {
															"id": 1112,
															"nodeType": "Block",
															"src": "26767:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1104,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26786:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26796:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "26786:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1107,
																	"nodeType": "ExpressionStatement",
																	"src": "26786:12:0"
																},
																{
																	"expression": {
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1108,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26817:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26827:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "26817:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1111,
																	"nodeType": "ExpressionStatement",
																	"src": "26817:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1114,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26863:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26872:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "26863:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26876:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26863:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1128,
														"nodeType": "IfStatement",
														"src": "26859:96:0",
														"trueBody": {
															"id": 1127,
															"nodeType": "Block",
															"src": "26879:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1119,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "26898:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26908:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "26898:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1122,
																	"nodeType": "ExpressionStatement",
																	"src": "26898:11:0"
																},
																{
																	"expression": {
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1123,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26928:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26938:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "26928:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1126,
																	"nodeType": "ExpressionStatement",
																	"src": "26928:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1129,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26973:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26982:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "26973:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26986:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26973:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1143,
														"nodeType": "IfStatement",
														"src": "26969:96:0",
														"trueBody": {
															"id": 1142,
															"nodeType": "Block",
															"src": "26989:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1134,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "27008:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27018:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "27008:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1137,
																	"nodeType": "ExpressionStatement",
																	"src": "27008:11:0"
																},
																{
																	"expression": {
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1138,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "27038:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27048:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "27038:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1141,
																	"nodeType": "ExpressionStatement",
																	"src": "27038:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1144,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "27083:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27092:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27083:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27096:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27083:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1158,
														"nodeType": "IfStatement",
														"src": "27079:96:0",
														"trueBody": {
															"id": 1157,
															"nodeType": "Block",
															"src": "27099:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1149,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "27118:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27128:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "27118:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1152,
																	"nodeType": "ExpressionStatement",
																	"src": "27118:11:0"
																},
																{
																	"expression": {
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1153,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "27148:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27158:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "27148:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1156,
																	"nodeType": "ExpressionStatement",
																	"src": "27148:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "27193:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27202:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "27193:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27206:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27193:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1169,
														"nodeType": "IfStatement",
														"src": "27189:66:0",
														"trueBody": {
															"id": 1168,
															"nodeType": "Block",
															"src": "27209:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1164,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "27228:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27238:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "27228:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1167,
																	"nodeType": "ExpressionStatement",
																	"src": "27228:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1171,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1051,
													"src": "27283:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1049,
												"id": 1172,
												"nodeType": "Return",
												"src": "27276:13:0"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "26156:116:0",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "26287:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "26292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26291:15:0"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "26330:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26329:9:0"
									},
									"scope": 1502,
									"src": "26278:1019:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "27536:170:0",
										"statements": [
											{
												"id": 1208,
												"nodeType": "UncheckedBlock",
												"src": "27547:152:0",
												"statements": [
													{
														"assignments": [
															1186
														],
														"declarations": [
															{
																"constant": false,
																"id": 1186,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27580:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1208,
																"src": "27572:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1185,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27572:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1190,
														"initialValue": {
															"arguments": [
																{
																	"id": 1188,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "27594:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1187,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1174,
																	1210
																],
																"referencedDeclaration": 1174,
																"src": "27589:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27589:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27572:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1191,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "27622:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1192,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "27632:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1193,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "27644:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "27653:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "27644:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "27632:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1196,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "27659:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1197,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1186,
																						"src": "27664:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27659:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1199,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1177,
																					"src": "27673:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "27659:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "27632:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27685:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "27632:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27681:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1205,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "27631:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "27622:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1184,
														"id": 1207,
														"nodeType": "Return",
														"src": "27615:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "27305:145:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "27465:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27478:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "27470:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27494:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "27485:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1179,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1178,
														"name": "Rounding",
														"nameLocations": [
															"27485:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "27485:8:0"
													},
													"referencedDeclaration": 643,
													"src": "27485:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27469:34:0"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "27527:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27526:9:0"
									},
									"scope": 1502,
									"src": "27456:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "27899:886:0",
										"statements": [
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "27918:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "27910:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1221,
												"initialValue": {
													"hexValue": "30",
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27927:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27910:18:0"
											},
											{
												"id": 1335,
												"nodeType": "UncheckedBlock",
												"src": "27939:815:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1222,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "27968:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27977:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27983:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27977:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "27968:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1238,
														"nodeType": "IfStatement",
														"src": "27964:106:0",
														"trueBody": {
															"id": 1237,
															"nodeType": "Block",
															"src": "27987:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1227,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28006:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28015:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28021:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "28015:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "28006:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1232,
																	"nodeType": "ExpressionStatement",
																	"src": "28006:17:0"
																},
																{
																	"expression": {
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1233,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28042:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28052:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "28042:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1236,
																	"nodeType": "ExpressionStatement",
																	"src": "28042:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1239,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28088:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28097:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28103:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "28097:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "28088:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1255,
														"nodeType": "IfStatement",
														"src": "28084:106:0",
														"trueBody": {
															"id": 1254,
															"nodeType": "Block",
															"src": "28107:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1244,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28126:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28135:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28141:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "28135:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "28126:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1249,
																	"nodeType": "ExpressionStatement",
																	"src": "28126:17:0"
																},
																{
																	"expression": {
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1250,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28162:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28172:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "28162:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1253,
																	"nodeType": "ExpressionStatement",
																	"src": "28162:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1256,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28208:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28217:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28223:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "28217:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "28208:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1272,
														"nodeType": "IfStatement",
														"src": "28204:106:0",
														"trueBody": {
															"id": 1271,
															"nodeType": "Block",
															"src": "28227:83:0",
															"statements": [
																{
																	"expression": {
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1261,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28246:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28255:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28261:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "28255:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "28246:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1266,
																	"nodeType": "ExpressionStatement",
																	"src": "28246:17:0"
																},
																{
																	"expression": {
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1267,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28282:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28292:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "28282:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1270,
																	"nodeType": "ExpressionStatement",
																	"src": "28282:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1273,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28328:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28337:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28343:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "28337:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "28328:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1289,
														"nodeType": "IfStatement",
														"src": "28324:103:0",
														"trueBody": {
															"id": 1288,
															"nodeType": "Block",
															"src": "28346:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1278,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28365:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28374:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28380:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "28374:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "28365:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1283,
																	"nodeType": "ExpressionStatement",
																	"src": "28365:16:0"
																},
																{
																	"expression": {
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1284,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28400:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28410:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "28400:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1287,
																	"nodeType": "ExpressionStatement",
																	"src": "28400:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1290,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28445:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28454:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28460:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "28454:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "28445:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1306,
														"nodeType": "IfStatement",
														"src": "28441:103:0",
														"trueBody": {
															"id": 1305,
															"nodeType": "Block",
															"src": "28463:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1295,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28482:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28491:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28497:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "28491:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "28482:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1300,
																	"nodeType": "ExpressionStatement",
																	"src": "28482:16:0"
																},
																{
																	"expression": {
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1301,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28517:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28527:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "28517:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1304,
																	"nodeType": "ExpressionStatement",
																	"src": "28517:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1307,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28562:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28571:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28577:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "28571:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "28562:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1323,
														"nodeType": "IfStatement",
														"src": "28558:103:0",
														"trueBody": {
															"id": 1322,
															"nodeType": "Block",
															"src": "28580:81:0",
															"statements": [
																{
																	"expression": {
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1312,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "28599:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28608:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28614:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "28608:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "28599:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1317,
																	"nodeType": "ExpressionStatement",
																	"src": "28599:16:0"
																},
																{
																	"expression": {
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1318,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28634:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28644:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "28634:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1321,
																	"nodeType": "ExpressionStatement",
																	"src": "28634:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "28679:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28688:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28694:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "28688:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "28679:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1334,
														"nodeType": "IfStatement",
														"src": "28675:68:0",
														"trueBody": {
															"id": 1333,
															"nodeType": "Block",
															"src": "28697:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1329,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "28716:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28726:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "28716:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1332,
																	"nodeType": "ExpressionStatement",
																	"src": "28716:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1336,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1219,
													"src": "28771:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1217,
												"id": 1337,
												"nodeType": "Return",
												"src": "28764:13:0"
											}
										]
									},
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "27714:117:0",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "27846:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27860:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "27852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27851:15:0"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "27890:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27889:9:0"
									},
									"scope": 1502,
									"src": "27837:948:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "29026:172:0",
										"statements": [
											{
												"id": 1373,
												"nodeType": "UncheckedBlock",
												"src": "29037:154:0",
												"statements": [
													{
														"assignments": [
															1351
														],
														"declarations": [
															{
																"constant": false,
																"id": 1351,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "29070:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1373,
																"src": "29062:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1350,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29062:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1355,
														"initialValue": {
															"arguments": [
																{
																	"id": 1353,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "29085:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1352,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1339,
																	1375
																],
																"referencedDeclaration": 1339,
																"src": "29079:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29079:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29062:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1356,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "29113:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1357,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1345,
																					"src": "29123:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1358,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "29135:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "29144:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "29135:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "29123:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1363,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1361,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "29150:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1362,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1351,
																						"src": "29156:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "29150:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1364,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1342,
																					"src": "29165:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29150:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "29123:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29177:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "29123:55:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29173:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1370,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "29122:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "29113:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1349,
														"id": 1372,
														"nodeType": "Return",
														"src": "29106:73:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "28793:146:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "28954:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28968:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "28960:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28984:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "28975:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1343,
														"name": "Rounding",
														"nameLocations": [
															"28975:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "28975:8:0"
													},
													"referencedDeclaration": 643,
													"src": "28975:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28959:34:0"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "29017:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29016:9:0"
									},
									"scope": 1502,
									"src": "28945:253:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "29520:624:0",
										"statements": [
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "29539:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "29531:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29531:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"hexValue": "30",
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29548:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29531:18:0"
											},
											{
												"id": 1458,
												"nodeType": "UncheckedBlock",
												"src": "29560:553:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1387,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29589:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29598:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "29589:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29604:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29589:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1401,
														"nodeType": "IfStatement",
														"src": "29585:101:0",
														"trueBody": {
															"id": 1400,
															"nodeType": "Block",
															"src": "29607:79:0",
															"statements": [
																{
																	"expression": {
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1392,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29626:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29636:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "29626:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1395,
																	"nodeType": "ExpressionStatement",
																	"src": "29626:13:0"
																},
																{
																	"expression": {
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1396,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29658:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29668:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29658:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1399,
																	"nodeType": "ExpressionStatement",
																	"src": "29658:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1402,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29704:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29713:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "29704:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29718:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29704:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1416,
														"nodeType": "IfStatement",
														"src": "29700:98:0",
														"trueBody": {
															"id": 1415,
															"nodeType": "Block",
															"src": "29721:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29740:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29750:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "29740:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1410,
																	"nodeType": "ExpressionStatement",
																	"src": "29740:12:0"
																},
																{
																	"expression": {
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1411,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29771:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29781:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "29771:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1414,
																	"nodeType": "ExpressionStatement",
																	"src": "29771:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1417,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29816:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29825:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "29816:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29830:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29816:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1431,
														"nodeType": "IfStatement",
														"src": "29812:98:0",
														"trueBody": {
															"id": 1430,
															"nodeType": "Block",
															"src": "29833:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1422,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29852:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29862:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "29852:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1425,
																	"nodeType": "ExpressionStatement",
																	"src": "29852:12:0"
																},
																{
																	"expression": {
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1426,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29883:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29893:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "29883:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1429,
																	"nodeType": "ExpressionStatement",
																	"src": "29883:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1432,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "29928:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29937:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "29928:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29942:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29928:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1446,
														"nodeType": "IfStatement",
														"src": "29924:98:0",
														"trueBody": {
															"id": 1445,
															"nodeType": "Block",
															"src": "29945:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "29964:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29974:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29964:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1440,
																	"nodeType": "ExpressionStatement",
																	"src": "29964:12:0"
																},
																{
																	"expression": {
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1441,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "29995:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30005:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "29995:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1444,
																	"nodeType": "ExpressionStatement",
																	"src": "29995:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1447,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "30040:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30049:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "30040:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30053:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30040:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1457,
														"nodeType": "IfStatement",
														"src": "30036:66:0",
														"trueBody": {
															"id": 1456,
															"nodeType": "Block",
															"src": "30056:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1452,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "30075:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30085:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "30075:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1455,
																	"nodeType": "ExpressionStatement",
																	"src": "30075:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1459,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1384,
													"src": "30130:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1382,
												"id": 1460,
												"nodeType": "Return",
												"src": "30123:13:0"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "29206:245:0",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "29466:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29481:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29473:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29472:15:0"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29511:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29510:9:0"
									},
									"scope": 1502,
									"src": "29457:687:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "30387:179:0",
										"statements": [
											{
												"id": 1499,
												"nodeType": "UncheckedBlock",
												"src": "30398:161:0",
												"statements": [
													{
														"assignments": [
															1474
														],
														"declarations": [
															{
																"constant": false,
																"id": 1474,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "30431:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1499,
																"src": "30423:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1473,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30423:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1478,
														"initialValue": {
															"arguments": [
																{
																	"id": 1476,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "30447:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1475,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1462,
																	1501
																],
																"referencedDeclaration": 1462,
																"src": "30440:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30440:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "30423:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1479,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "30475:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$643",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1480,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1468,
																					"src": "30485:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1481,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 643,
																						"src": "30497:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$643_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1482,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "30506:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "30497:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$643",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "30485:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1489,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1484,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "30512:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1487,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1485,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1474,
																									"src": "30518:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1486,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "30528:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "30518:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1488,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "30517:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "30512:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1490,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1465,
																					"src": "30533:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "30512:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "30485:53:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30545:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "30485:61:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30541:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1496,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "30484:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "30475:72:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1472,
														"id": 1498,
														"nodeType": "Return",
														"src": "30468:79:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "30152:147:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "30314:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "30321:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "30345:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "30336:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$643",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1467,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1466,
														"name": "Rounding",
														"nameLocations": [
															"30336:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 643,
														"src": "30336:8:0"
													},
													"referencedDeclaration": 643,
													"src": "30336:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$643",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30320:34:0"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "30378:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30377:9:0"
									},
									"scope": 1502,
									"src": "30305:261:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3551,
							"src": "17953:12616:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1503,
								"nodeType": "StructuredDocumentation",
								"src": "30650:82:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1605,
							"linearizedBaseContracts": [
								1605
							],
							"name": "SignedMath",
							"nameLocation": "30742:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "30898:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1513,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "30916:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1514,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "30920:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "30916:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1517,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "30928:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "30916:13:0",
													"trueExpression": {
														"id": 1516,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "30924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1512,
												"id": 1519,
												"nodeType": "Return",
												"src": "30909:20:0"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "30760:68:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "30843:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "30854:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "30847:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1505,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30847:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "30864:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "30857:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1507,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30857:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30846:20:0"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "30890:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1510,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30890:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30889:8:0"
									},
									"scope": 1605,
									"src": "30834:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "31084:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1531,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "31102:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1532,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "31106:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "31102:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1535,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "31114:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "31102:13:0",
													"trueExpression": {
														"id": 1534,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "31110:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1530,
												"id": 1537,
												"nodeType": "Return",
												"src": "31095:20:0"
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "30945:69:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "31029:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "31040:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "31033:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1523,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31033:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "31050:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "31043:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1525,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31043:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31032:20:0"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "31076:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1528,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31075:8:0"
									},
									"scope": 1605,
									"src": "31020:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "31334:166:0",
										"statements": [
											{
												"assignments": [
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "31405:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1582,
														"src": "31398:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1549,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "31398:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1563,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1551,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1542,
																	"src": "31410:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1552,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "31414:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "31410:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1554,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1555,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "31421:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1556,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "31425:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "31421:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1558,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31420:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31431:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "31420:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1561,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31419:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31409:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31398:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1564,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "31451:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1569,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1550,
																						"src": "31471:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "31463:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1567,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "31463:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31463:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31477:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "31463:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "31456:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1565,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "31456:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31456:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1574,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "31485:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1575,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "31489:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "31485:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1577,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31484:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "31456:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1579,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31455:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31451:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1548,
												"id": 1581,
												"nodeType": "Return",
												"src": "31444:48:0"
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "31131:129:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "31275:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "31290:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "31283:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1541,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31283:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "31300:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "31293:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1543,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31293:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31282:20:0"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "31326:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1546,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31326:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31325:8:0"
									},
									"scope": 1605,
									"src": "31266:234:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "31649:163:0",
										"statements": [
											{
												"id": 1602,
												"nodeType": "UncheckedBlock",
												"src": "31660:145:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1593,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "31777:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31782:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "31777:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "31790:2:0",
																		"subExpression": {
																			"id": 1597,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "31791:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "31777:15:0",
																	"trueExpression": {
																		"id": 1596,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1586,
																		"src": "31786:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1591,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31769:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31769:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1590,
														"id": 1601,
														"nodeType": "Return",
														"src": "31762:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "31508:80:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "31603:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "31614:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "31607:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1585,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31607:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31606:10:0"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "31640:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31639:9:0"
									},
									"scope": 1605,
									"src": "31594:218:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3551,
							"src": "30734:1081:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1606,
								"nodeType": "StructuredDocumentation",
								"src": "32051:201:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1915,
							"linearizedBaseContracts": [
								1915
							],
							"name": "SafeMath",
							"nameLocation": "32262:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "32495:146:0",
										"statements": [
											{
												"id": 1636,
												"nodeType": "UncheckedBlock",
												"src": "32506:128:0",
												"statements": [
													{
														"assignments": [
															1619
														],
														"declarations": [
															{
																"constant": false,
																"id": 1619,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "32539:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1636,
																"src": "32531:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1618,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "32531:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1623,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1620,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "32543:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1621,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "32547:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32543:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "32531:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1624,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "32567:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1625,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "32571:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32567:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1631,
														"nodeType": "IfStatement",
														"src": "32563:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32582:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32589:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1629,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "32581:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1617,
															"id": 1630,
															"nodeType": "Return",
															"src": "32574:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32614:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1633,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "32620:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1634,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "32613:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1617,
														"id": 1635,
														"nodeType": "Return",
														"src": "32606:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "32278:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "32428:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "32443:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "32454:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32446:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32434:22:0"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "32486:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32479:15:0"
									},
									"scope": 1915,
									"src": "32419:222:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "32869:118:0",
										"statements": [
											{
												"id": 1664,
												"nodeType": "UncheckedBlock",
												"src": "32880:100:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1650,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "32909:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1651,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "32913:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32909:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1657,
														"nodeType": "IfStatement",
														"src": "32905:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32924:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32931:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1655,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "32923:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1649,
															"id": 1656,
															"nodeType": "Return",
															"src": "32916:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32956:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1659,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "32962:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1660,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "32966:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "32962:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1662,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "32955:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1649,
														"id": 1663,
														"nodeType": "Return",
														"src": "32948:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "32649:138:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "32802:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "32817:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32809:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "32828:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32820:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32808:22:0"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32854:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32854:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "32860:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32853:15:0"
									},
									"scope": 1915,
									"src": "32793:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "33218:427:0",
										"statements": [
											{
												"id": 1706,
												"nodeType": "UncheckedBlock",
												"src": "33229:409:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1678,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "33491:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33496:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1685,
														"nodeType": "IfStatement",
														"src": "33487:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33507:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33513:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1683,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33506:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1677,
															"id": 1684,
															"nodeType": "Return",
															"src": "33499:16:0"
														}
													},
													{
														"assignments": [
															1687
														],
														"declarations": [
															{
																"constant": false,
																"id": 1687,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "33538:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1706,
																"src": "33530:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1686,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "33530:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1691,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1688,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "33542:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1689,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "33546:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33542:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "33530:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1692,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "33566:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1693,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "33570:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33566:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1695,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "33575:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33566:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1701,
														"nodeType": "IfStatement",
														"src": "33562:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33586:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33593:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1699,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33585:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1677,
															"id": 1700,
															"nodeType": "Return",
															"src": "33578:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33618:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1703,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "33624:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1704,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "33617:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1677,
														"id": 1705,
														"nodeType": "Return",
														"src": "33610:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "32995:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "33151:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "33166:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33158:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "33177:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33169:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33157:22:0"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33203:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33203:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "33209:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33202:15:0"
									},
									"scope": 1915,
									"src": "33142:503:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "33877:119:0",
										"statements": [
											{
												"id": 1734,
												"nodeType": "UncheckedBlock",
												"src": "33888:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "33917:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33922:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33917:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1727,
														"nodeType": "IfStatement",
														"src": "33913:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33933:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33940:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33932:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1719,
															"id": 1726,
															"nodeType": "Return",
															"src": "33925:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33965:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1729,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "33971:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1730,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "33975:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "33971:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1732,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "33964:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1719,
														"id": 1733,
														"nodeType": "Return",
														"src": "33957:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "33653:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "33810:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "33825:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33817:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "33836:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33828:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33816:22:0"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33862:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "33868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33861:15:0"
									},
									"scope": 1915,
									"src": "33801:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "34238:119:0",
										"statements": [
											{
												"id": 1762,
												"nodeType": "UncheckedBlock",
												"src": "34249:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1748,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "34278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34283:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1755,
														"nodeType": "IfStatement",
														"src": "34274:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34294:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34301:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1753,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "34293:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1747,
															"id": 1754,
															"nodeType": "Return",
															"src": "34286:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34326:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1757,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "34332:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1758,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1741,
																		"src": "34336:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "34332:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1760,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "34325:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1747,
														"id": 1761,
														"nodeType": "Return",
														"src": "34318:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "34004:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "34171:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "34186:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34178:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34197:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34189:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34177:22:0"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34223:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34223:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34229:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34222:15:0"
									},
									"scope": 1915,
									"src": "34162:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "34671:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1774,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "34689:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1775,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "34693:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34689:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1773,
												"id": 1777,
												"nodeType": "Return",
												"src": "34682:12:0"
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "34365:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "34613:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "34625:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "34617:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34636:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "34628:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34616:22:0"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "34662:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34661:9:0"
									},
									"scope": 1915,
									"src": "34604:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "35052:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1789,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "35070:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1790,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "35074:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35070:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1788,
												"id": 1792,
												"nodeType": "Return",
												"src": "35063:12:0"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "34710:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "34994:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35006:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "34998:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35017:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "35009:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34997:22:0"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "35043:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35042:9:0"
									},
									"scope": 1915,
									"src": "34985:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "35409:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1804,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1797,
														"src": "35427:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1805,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "35431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35427:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1803,
												"id": 1807,
												"nodeType": "Return",
												"src": "35420:12:0"
											}
										]
									},
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "35091:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "35351:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "35355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "35366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35354:22:0"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "35400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35399:9:0"
									},
									"scope": 1915,
									"src": "35342:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "35808:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1819,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "35826:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1820,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1814,
														"src": "35830:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35826:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1818,
												"id": 1822,
												"nodeType": "Return",
												"src": "35819:12:0"
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "35448:287:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "35750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "35754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "35765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35753:22:0"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "35799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35798:9:0"
									},
									"scope": 1915,
									"src": "35741:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "36373:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1834,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "36391:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1835,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "36395:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36391:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1833,
												"id": 1837,
												"nodeType": "Return",
												"src": "36384:12:0"
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "35847:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "36315:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "36327:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "36319:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "36338:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "36330:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36318:22:0"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "36364:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36363:9:0"
									},
									"scope": 1915,
									"src": "36306:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "36978:111:0",
										"statements": [
											{
												"id": 1862,
												"nodeType": "UncheckedBlock",
												"src": "36989:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1852,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1844,
																		"src": "37022:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1853,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1842,
																		"src": "37027:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "37022:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1855,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "37030:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1851,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "37014:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37014:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1857,
														"nodeType": "ExpressionStatement",
														"src": "37014:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1858,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "37065:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1859,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1844,
																"src": "37069:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37065:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1850,
														"id": 1861,
														"nodeType": "Return",
														"src": "37058:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "36412:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "36892:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "36904:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36896:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "36915:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36907:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "36932:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36918:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36918:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36895:50:0"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "36969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36968:9:0"
									},
									"scope": 1915,
									"src": "36883:206:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "37682:110:0",
										"statements": [
											{
												"id": 1887,
												"nodeType": "UncheckedBlock",
												"src": "37693:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1877,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1869,
																		"src": "37726:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37730:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "37726:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1880,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1871,
																	"src": "37733:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1876,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "37718:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37718:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1882,
														"nodeType": "ExpressionStatement",
														"src": "37718:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1883,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "37768:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1884,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1869,
																"src": "37772:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37768:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1875,
														"id": 1886,
														"nodeType": "Return",
														"src": "37761:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "37097:484:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "37596:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "37608:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37600:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "37619:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37611:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "37636:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37622:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1870,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37622:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37599:50:0"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "37673:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37672:9:0"
									},
									"scope": 1915,
									"src": "37587:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "38550:110:0",
										"statements": [
											{
												"id": 1912,
												"nodeType": "UncheckedBlock",
												"src": "38561:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1902,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "38594:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38598:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "38594:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1905,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "38601:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1901,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "38586:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38586:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1907,
														"nodeType": "ExpressionStatement",
														"src": "38586:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1908,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1892,
																"src": "38636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1909,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "38640:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38636:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1900,
														"id": 1911,
														"nodeType": "Return",
														"src": "38629:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "37800:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "38464:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "38476:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38468:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "38487:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38479:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "38504:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38490:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38490:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38467:50:0"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "38541:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38540:9:0"
									},
									"scope": 1915,
									"src": "38455:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3551,
							"src": "32254:6409:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1916,
								"nodeType": "StructuredDocumentation",
								"src": "38736:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2243,
							"linearizedBaseContracts": [
								2243
							],
							"name": "Address",
							"nameLocation": "38815:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "40122:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1924,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "40351:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "40359:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "40351:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "40364:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "40351:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40373:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "40351:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1923,
												"id": 1929,
												"nodeType": "Return",
												"src": "40344:30:0"
											}
										]
									},
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "38830:1220:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "40065:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "40084:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "40076:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40075:17:0"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "40116:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40116:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40115:6:0"
									},
									"scope": 2243,
									"src": "40056:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "41387:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1942,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "41414:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "41406:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1940,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "41406:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41406:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "41420:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "41406:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1945,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "41431:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "41406:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41439:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1939,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41398:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "41398:73:0"
											},
											{
												"assignments": [
													1951,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1951,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "41490:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1964,
														"src": "41485:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1950,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "41485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1958,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41533:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1952,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "41503:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41513:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "41503:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1954,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "41525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "41503:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41503:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41484:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1960,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "41555:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41564:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41547:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1963,
												"nodeType": "ExpressionStatement",
												"src": "41547:78:0"
											}
										]
									},
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "40390:920:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "41325:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "41351:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "41335:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41335:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "41370:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "41362:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41334:43:0"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41387:0:0"
									},
									"scope": 2243,
									"src": "41316:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "42484:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1976,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "42524:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1977,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "42532:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42538:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42541:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1975,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2067
														],
														"referencedDeclaration": 2067,
														"src": "42502:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42502:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1974,
												"id": 1981,
												"nodeType": "Return",
												"src": "42495:79:0"
											}
										]
									},
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "41641:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "42404:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "42425:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "42417:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42446:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "42433:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1969,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42433:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42416:35:0"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "42470:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42469:14:0"
									},
									"scope": 2243,
									"src": "42395:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "42963:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1996,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1986,
															"src": "43003:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1997,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1988,
															"src": "43011:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43017:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1999,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "43020:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1995,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2067
														],
														"referencedDeclaration": 2067,
														"src": "42981:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42981:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1994,
												"id": 2001,
												"nodeType": "Return",
												"src": "42974:59:0"
											}
										]
									},
									"documentation": {
										"id": 1984,
										"nodeType": "StructuredDocumentation",
										"src": "42590:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "42821:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "42852:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42844:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42882:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42869:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1987,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42869:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "42911:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42897:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42897:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42833:97:0"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "42949:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1992,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42949:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42948:14:0"
									},
									"scope": 2243,
									"src": "42812:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "43529:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2016,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2006,
															"src": "43569:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2017,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "43577:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2018,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "43583:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43590:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2015,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2067
														],
														"referencedDeclaration": 2067,
														"src": "43547:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43547:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2014,
												"id": 2021,
												"nodeType": "Return",
												"src": "43540:94:0"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "43049:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "43425:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "43455:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43447:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43476:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43463:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2007,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43463:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "43490:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43482:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43446:50:0"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "43515:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43515:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43514:14:0"
									},
									"scope": 2243,
									"src": "43416:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2066,
										"nodeType": "Block",
										"src": "44082:271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2040,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "44109:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2243",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "44101:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2038,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "44101:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "44101:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "44115:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "44101:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2043,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "44126:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44101:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44133:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2037,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "44093:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44093:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "44093:81:0"
											},
											{
												"assignments": [
													2049,
													2051
												],
												"declarations": [
													{
														"constant": false,
														"id": 2049,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "44191:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2066,
														"src": "44186:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2048,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "44186:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2051,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "44213:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2066,
														"src": "44200:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2050,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "44200:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2058,
												"initialValue": {
													"arguments": [
														{
															"id": 2056,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "44253:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2052,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2026,
																"src": "44227:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "44234:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "44227:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2054,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "44246:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "44227:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44227:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44185:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2060,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2026,
															"src": "44303:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2061,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "44311:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2062,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "44320:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2063,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "44332:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2059,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "44276:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44276:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2036,
												"id": 2065,
												"nodeType": "Return",
												"src": "44269:76:0"
											}
										]
									},
									"documentation": {
										"id": 2024,
										"nodeType": "StructuredDocumentation",
										"src": "43650:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "43907:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "43947:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "43939:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43977:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "43964:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43964:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "44000:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "43992:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "44030:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "44016:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2031,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "44016:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43928:121:0"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "44068:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44068:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44067:14:0"
									},
									"scope": 2243,
									"src": "43898:455:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "44638:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2078,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "44675:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2079,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2072,
															"src": "44683:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44689:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2077,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2084,
															2113
														],
														"referencedDeclaration": 2113,
														"src": "44656:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44656:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2076,
												"id": 2082,
												"nodeType": "Return",
												"src": "44649:80:0"
											}
										]
									},
									"documentation": {
										"id": 2068,
										"nodeType": "StructuredDocumentation",
										"src": "44361:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "44547:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "44574:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "44566:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "44595:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "44582:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44582:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44565:35:0"
									},
									"returnParameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "44624:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2074,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44624:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44623:14:0"
									},
									"scope": 2243,
									"src": "44538:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "45091:171:0",
										"statements": [
											{
												"assignments": [
													2097,
													2099
												],
												"declarations": [
													{
														"constant": false,
														"id": 2097,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "45108:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2112,
														"src": "45103:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2096,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "45103:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2099,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "45130:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2112,
														"src": "45117:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2098,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "45117:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2104,
												"initialValue": {
													"arguments": [
														{
															"id": 2102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "45162:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "45144:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "45151:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "45144:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45144:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45102:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2106,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "45212:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2107,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "45220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2108,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2099,
															"src": "45229:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2109,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "45241:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2105,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "45185:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45185:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2095,
												"id": 2111,
												"nodeType": "Return",
												"src": "45178:76:0"
											}
										]
									},
									"documentation": {
										"id": 2085,
										"nodeType": "StructuredDocumentation",
										"src": "44745:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "44938:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "44975:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "44967:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45005:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "44992:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44992:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "45034:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "45020:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2090,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "45020:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44956:97:0"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "45077:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2093,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45077:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45076:14:0"
									},
									"scope": 2243,
									"src": "44929:333:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "45546:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2124,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "45585:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "45593:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45599:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2123,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2130,
															2159
														],
														"referencedDeclaration": 2159,
														"src": "45564:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45564:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2122,
												"id": 2128,
												"nodeType": "Return",
												"src": "45557:84:0"
											}
										]
									},
									"documentation": {
										"id": 2114,
										"nodeType": "StructuredDocumentation",
										"src": "45270:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "45458:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "45487:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "45479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "45495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45478:35:0"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "45532:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45532:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45531:14:0"
									},
									"scope": 2243,
									"src": "45449:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "46002:173:0",
										"statements": [
											{
												"assignments": [
													2143,
													2145
												],
												"declarations": [
													{
														"constant": false,
														"id": 2143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "46019:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2158,
														"src": "46014:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "46014:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "46041:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2158,
														"src": "46028:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "46028:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2150,
												"initialValue": {
													"arguments": [
														{
															"id": 2148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "46075:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2146,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "46055:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46062:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "46055:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46055:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46013:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2152,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "46125:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2153,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "46133:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2154,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "46142:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2155,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2137,
															"src": "46154:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2151,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "46098:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46098:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2141,
												"id": 2157,
												"nodeType": "Return",
												"src": "46091:76:0"
											}
										]
									},
									"documentation": {
										"id": 2131,
										"nodeType": "StructuredDocumentation",
										"src": "45657:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "45852:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "45891:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45883:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45921:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45908:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45908:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "45950:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45936:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "45936:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45872:97:0"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "45988:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45988:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45987:14:0"
									},
									"scope": 2243,
									"src": "45843:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "46670:445:0",
										"statements": [
											{
												"condition": {
													"id": 2173,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2164,
													"src": "46685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2195,
													"nodeType": "Block",
													"src": "47048:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2191,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2166,
																		"src": "47071:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2192,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "47083:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2190,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "47063:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47063:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2194,
															"nodeType": "ExpressionStatement",
															"src": "47063:33:0"
														}
													]
												},
												"id": 2196,
												"nodeType": "IfStatement",
												"src": "46681:427:0",
												"trueBody": {
													"id": 2189,
													"nodeType": "Block",
													"src": "46694:348:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2174,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2166,
																		"src": "46713:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "46724:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "46713:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46734:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "46713:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2186,
															"nodeType": "IfStatement",
															"src": "46709:290:0",
															"trueBody": {
																"id": 2185,
																"nodeType": "Block",
																"src": "46737:262:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2180,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2162,
																							"src": "46942:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2179,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1931,
																						"src": "46931:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 2181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "46931:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 2182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "46951:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 2178,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "46923:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "46923:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2184,
																		"nodeType": "ExpressionStatement",
																		"src": "46923:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2187,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "47020:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2172,
															"id": 2188,
															"nodeType": "Return",
															"src": "47013:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2160,
										"nodeType": "StructuredDocumentation",
										"src": "46183:282:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "46480:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "46525:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "46547:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46542:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "46542:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "46578:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46565:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "46565:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "46613:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46599:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2167,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "46599:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46506:126:0"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "46656:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "46656:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46655:14:0"
									},
									"scope": 2243,
									"src": "46471:644:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2221,
										"nodeType": "Block",
										"src": "47508:141:0",
										"statements": [
											{
												"condition": {
													"id": 2210,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2201,
													"src": "47523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2219,
													"nodeType": "Block",
													"src": "47582:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2215,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2203,
																		"src": "47605:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2216,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "47617:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2214,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "47597:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47597:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2218,
															"nodeType": "ExpressionStatement",
															"src": "47597:33:0"
														}
													]
												},
												"id": 2220,
												"nodeType": "IfStatement",
												"src": "47519:123:0",
												"trueBody": {
													"id": 2213,
													"nodeType": "Block",
													"src": "47532:44:0",
													"statements": [
														{
															"expression": {
																"id": 2211,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2203,
																"src": "47554:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2209,
															"id": 2212,
															"nodeType": "Return",
															"src": "47547:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2199,
										"nodeType": "StructuredDocumentation",
										"src": "47123:215:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 2222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "47353:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "47385:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47380:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "47416:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47403:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47403:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "47451:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47437:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "47437:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47369:101:0"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "47494:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47494:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47493:14:0"
									},
									"scope": 2243,
									"src": "47344:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2241,
										"nodeType": "Block",
										"src": "47740:469:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2229,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "47818:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47829:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "47818:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47838:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "47818:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2239,
													"nodeType": "Block",
													"src": "48155:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2236,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2226,
																		"src": "48177:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2235,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "48170:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48170:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2238,
															"nodeType": "ExpressionStatement",
															"src": "48170:20:0"
														}
													]
												},
												"id": 2240,
												"nodeType": "IfStatement",
												"src": "47814:388:0",
												"trueBody": {
													"id": 2234,
													"nodeType": "Block",
													"src": "47841:308:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "48002:136:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "48021:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "48050:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "48044:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "48044:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "48025:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "48090:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "48094:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "48086:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "48086:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "48107:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "48079:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "48079:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "48079:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 2224,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "48050:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2224,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "48094:10:0",
																	"valueSize": 1
																}
															],
															"id": 2233,
															"nodeType": "InlineAssembly",
															"src": "47993:145:0"
														}
													]
												}
											}
										]
									},
									"id": 2242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "47666:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "47687:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "47674:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47674:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "47713:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "47699:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "47699:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47673:53:0"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47740:0:0"
									},
									"scope": 2243,
									"src": "47657:552:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3551,
							"src": "38807:9405:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2245,
										"name": "Context",
										"nameLocations": [
											"48695:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "48695:7:0"
									},
									"id": 2246,
									"nodeType": "InheritanceSpecifier",
									"src": "48695:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2244,
								"nodeType": "StructuredDocumentation",
								"src": "48216:447:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 2332,
							"linearizedBaseContracts": [
								2332,
								21
							],
							"name": "Pausable",
							"nameLocation": "48683:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "48710:75:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 2251,
									"name": "Paused",
									"nameLocation": "48797:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "48812:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "48804:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48803:17:0"
									},
									"src": "48791:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2252,
										"nodeType": "StructuredDocumentation",
										"src": "48829:72:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 2256,
									"name": "Unpaused",
									"nameLocation": "48913:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "48930:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "48922:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48921:17:0"
									},
									"src": "48907:32:0"
								},
								{
									"constant": false,
									"id": 2258,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "48960:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2332,
									"src": "48947:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2257,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "48947:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2266,
										"nodeType": "Block",
										"src": "49066:34:0",
										"statements": [
											{
												"expression": {
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2262,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "49077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49087:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "49077:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2265,
												"nodeType": "ExpressionStatement",
												"src": "49077:15:0"
											}
										]
									},
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "48976:69:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 2267,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49063:2:0"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49066:0:0"
									},
									"scope": 2332,
									"src": "49051:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "49253:33:0",
										"statements": [
											{
												"expression": {
													"id": 2273,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2258,
													"src": "49271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2272,
												"id": 2274,
												"nodeType": "Return",
												"src": "49264:14:0"
											}
										]
									},
									"documentation": {
										"id": 2268,
										"nodeType": "StructuredDocumentation",
										"src": "49108:86:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "49209:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49215:2:0"
									},
									"returnParameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "49247:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "49247:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49246:6:0"
									},
									"scope": 2332,
									"src": "49200:86:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2287,
										"nodeType": "Block",
										"src": "49506:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "49525:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2280,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2276,
																	"src": "49526:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49526:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49536:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 2279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49517:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "49517:38:0"
											},
											{
												"id": 2286,
												"nodeType": "PlaceholderStatement",
												"src": "49566:1:0"
											}
										]
									},
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "49294:181:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2288,
									"name": "whenNotPaused",
									"nameLocation": "49490:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49503:2:0"
									},
									"src": "49481:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2298,
										"nodeType": "Block",
										"src": "49784:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2292,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "49803:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49803:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49813:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 2291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49795:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49795:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2296,
												"nodeType": "ExpressionStatement",
												"src": "49795:41:0"
											},
											{
												"id": 2297,
												"nodeType": "PlaceholderStatement",
												"src": "49847:1:0"
											}
										]
									},
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "49583:173:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 2299,
									"name": "whenPaused",
									"nameLocation": "49771:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49781:2:0"
									},
									"src": "49762:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "50049:69:0",
										"statements": [
											{
												"expression": {
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2305,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "50060:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50070:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "50060:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2308,
												"nodeType": "ExpressionStatement",
												"src": "50060:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2310,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "50097:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50097:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2309,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2251,
														"src": "50090:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50090:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2313,
												"nodeType": "EmitStatement",
												"src": "50085:25:0"
											}
										]
									},
									"documentation": {
										"id": 2300,
										"nodeType": "StructuredDocumentation",
										"src": "49864:130:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2303,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2302,
												"name": "whenNotPaused",
												"nameLocations": [
													"50035:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2288,
												"src": "50035:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50035:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "50009:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50015:2:0"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50049:0:0"
									},
									"scope": 2332,
									"src": "50000:118:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2330,
										"nodeType": "Block",
										"src": "50307:72:0",
										"statements": [
											{
												"expression": {
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2321,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "50318:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50328:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "50318:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2324,
												"nodeType": "ExpressionStatement",
												"src": "50318:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2326,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "50358:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50358:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2325,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2256,
														"src": "50349:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50349:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2329,
												"nodeType": "EmitStatement",
												"src": "50344:27:0"
											}
										]
									},
									"documentation": {
										"id": 2316,
										"nodeType": "StructuredDocumentation",
										"src": "50126:127:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 2331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2318,
												"name": "whenPaused",
												"nameLocations": [
													"50296:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2299,
												"src": "50296:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50296:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "50268:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50276:2:0"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50307:0:0"
									},
									"scope": 2332,
									"src": "50259:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3551,
							"src": "48665:1717:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2333,
										"name": "Ownable",
										"nameLocations": [
											"50410:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "50410:7:0"
									},
									"id": 2334,
									"nodeType": "InheritanceSpecifier",
									"src": "50410:7:0"
								},
								{
									"baseName": {
										"id": 2335,
										"name": "Pausable",
										"nameLocations": [
											"50419:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2332,
										"src": "50419:8:0"
									},
									"id": 2336,
									"nodeType": "InheritanceSpecifier",
									"src": "50419:8:0"
								}
							],
							"canonicalName": "Marketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3550,
							"linearizedBaseContracts": [
								3550,
								2332,
								131,
								21
							],
							"name": "Marketplace",
							"nameLocation": "50395:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2339,
									"libraryName": {
										"id": 2337,
										"name": "SafeMath",
										"nameLocations": [
											"50441:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1915,
										"src": "50441:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "50435:27:0",
									"typeName": {
										"id": 2338,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "50454:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2343,
									"libraryName": {
										"id": 2340,
										"name": "SafeERC20",
										"nameLocations": [
											"50474:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 441,
										"src": "50474:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "50468:27:0",
									"typeName": {
										"id": 2342,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2341,
											"name": "IERC20",
											"nameLocations": [
												"50488:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 517,
											"src": "50488:6:0"
										},
										"referencedDeclaration": 517,
										"src": "50488:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$517",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "89f5adc174562e07c9c9b1cae7109bbecb21cf9d1b2847e550042b8653c54a0e",
									"id": 2353,
									"name": "Buy",
									"nameLocation": "50507:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "50511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "50534:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "50526:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50549:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "50541:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "50567:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "50559:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50510:63:0"
									},
									"src": "50501:73:0"
								},
								{
									"anonymous": false,
									"eventSelector": "d369fdcfeb128f60117661ebd8f220b7265c0a04fee0e9905eb8c6ab2767b9e5",
									"id": 2365,
									"name": "BuyWithERC20",
									"nameLocation": "50586:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50607:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "50599:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2357,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "50622:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "50614:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50637:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "50629:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"indexed": false,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "50654:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "50646:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2363,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "50669:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "50661:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50598:77:0"
									},
									"src": "50580:96:0"
								},
								{
									"anonymous": false,
									"eventSelector": "4524387b4311078b7531910a140a6975002b10aca4cf12255e98da8f1ff1b35b",
									"id": 2373,
									"name": "PutUpForSale",
									"nameLocation": "50688:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50709:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "50701:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50724:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "50716:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "50741:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "50733:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50700:47:0"
									},
									"src": "50682:66:0"
								},
								{
									"anonymous": false,
									"eventSelector": "0a4292e75f7eafde90821610c4cabfc298540c274b50a7ea784a529a2b8a4a6f",
									"id": 2383,
									"name": "PutUpForSaleWithERC20",
									"nameLocation": "50760:21:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50790:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "50782:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50805:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "50797:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"indexed": false,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "50822:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "50814:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "50837:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "50829:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50781:62:0"
									},
									"src": "50754:90:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8bf8e8f2f9d065b620f4e940d87122b03dd779d0ffd6a1590572e1e6d0416bef",
									"id": 2389,
									"name": "WithdrawFromSale",
									"nameLocation": "50856:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50881:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "50873:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50896:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "50888:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50872:32:0"
									},
									"src": "50850:55:0"
								},
								{
									"anonymous": false,
									"eventSelector": "2f15b7a52fc8a006876377705647acbd22eed72dec9b154aa290e286c06a3cd4",
									"id": 2395,
									"name": "WithdrawWei",
									"nameLocation": "50917:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "50937:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "50929:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "50949:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "50941:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50928:28:0"
									},
									"src": "50911:46:0"
								},
								{
									"anonymous": false,
									"eventSelector": "33c35f9541201e342d5e7467016e65a0a06182eb12a5f17103f71cec95b6cb29",
									"id": 2403,
									"name": "WithdrawERC20",
									"nameLocation": "50969:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "50991:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "50983:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"indexed": false,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "51003:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "50995:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2401,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "51018:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "51010:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50982:43:0"
									},
									"src": "50963:63:0"
								},
								{
									"canonicalName": "Marketplace.SelledNFT",
									"id": 2414,
									"members": [
										{
											"constant": false,
											"id": 2405,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "51074:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 2414,
											"src": "51066:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2404,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "51066:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2407,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "51100:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 2414,
											"src": "51092:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2406,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "51092:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2409,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "51125:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2414,
											"src": "51117:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2408,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "51117:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2411,
											"mutability": "mutable",
											"name": "erc20",
											"nameLocation": "51149:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2414,
											"src": "51141:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2410,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "51141:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2413,
											"mutability": "mutable",
											"name": "utx",
											"nameLocation": "51244:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 2414,
											"src": "51236:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2412,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "51236:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SelledNFT",
									"nameLocation": "51045:9:0",
									"nodeType": "StructDefinition",
									"scope": 3550,
									"src": "51038:217:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "08cfbc19",
									"id": 2417,
									"mutability": "mutable",
									"name": "marketNft",
									"nameLocation": "51278:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3550,
									"src": "51263:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$638",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 2416,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2415,
											"name": "IERC721",
											"nameLocations": [
												"51263:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 638,
											"src": "51263:7:0"
										},
										"referencedDeclaration": 638,
										"src": "51263:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$638",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "54fd4d50",
									"id": 2420,
									"mutability": "mutable",
									"name": "version",
									"nameLocation": "51308:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3550,
									"src": "51296:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2418,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "51296:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2419,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "51318:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2423,
									"mutability": "mutable",
									"name": "_tradeFee",
									"nameLocation": "51341:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3550,
									"src": "51328:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2421,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "51328:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2422,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "51353:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2430,
										"nodeType": "Block",
										"src": "51423:30:0",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2428,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "51441:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2427,
												"id": 2429,
												"nodeType": "Return",
												"src": "51434:11:0"
											}
										]
									},
									"functionSelector": "527f2902",
									"id": 2431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMarketPlaceContract",
									"nameLocation": "51372:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51393:2:0"
									},
									"returnParameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "51417:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51417:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51416:6:0"
									},
									"scope": 3550,
									"src": "51363:90:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2435,
									"mutability": "mutable",
									"name": "_isTokensAtSale",
									"nameLocation": "51494:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3550,
									"src": "51461:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 2434,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2432,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "51469:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "51461:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2433,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "51480:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2440,
									"mutability": "mutable",
									"name": "_tokensAtSale",
									"nameLocation": "51554:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3550,
									"src": "51516:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
										"typeString": "mapping(uint256 => struct Marketplace.SelledNFT)"
									},
									"typeName": {
										"id": 2439,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2436,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "51524:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "51516:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
											"typeString": "mapping(uint256 => struct Marketplace.SelledNFT)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2438,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2437,
												"name": "SelledNFT",
												"nameLocations": [
													"51535:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2414,
												"src": "51535:9:0"
											},
											"referencedDeclaration": 2414,
											"src": "51535:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_SelledNFT_$2414_storage_ptr",
												"typeString": "struct Marketplace.SelledNFT"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2443,
									"mutability": "mutable",
									"name": "_allowedERC20",
									"nameLocation": "51594:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3550,
									"src": "51576:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 2441,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "51576:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 2442,
										"nodeType": "ArrayTypeName",
										"src": "51576:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2446,
									"mutability": "mutable",
									"name": "_tokensIdsAtSale",
									"nameLocation": "51634:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3550,
									"src": "51616:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2444,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "51616:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2445,
										"nodeType": "ArrayTypeName",
										"src": "51616:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2448,
									"mutability": "mutable",
									"name": "_feeReceiver",
									"nameLocation": "51675:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3550,
									"src": "51659:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2447,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "51659:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2459,
										"nodeType": "Block",
										"src": "51750:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2456,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2450,
															"src": "51783:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2453,
															"name": "_tokensIdsAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "51761:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "51778:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "51761:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51761:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2458,
												"nodeType": "ExpressionStatement",
												"src": "51761:31:0"
											}
										]
									},
									"id": 2460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__addTokenToSale",
									"nameLocation": "51705:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "51730:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "51722:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51721:18:0"
									},
									"returnParameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51750:0:0"
									},
									"scope": 3550,
									"src": "51696:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2536,
										"nodeType": "Block",
										"src": "51861:601:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2465,
															"name": "_tokensIdsAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "51876:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2470,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2466,
																	"name": "_tokensIdsAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2446,
																	"src": "51893:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "51910:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "51893:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "51893:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "51876:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2471,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2462,
														"src": "51925:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "51876:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2480,
												"nodeType": "IfStatement",
												"src": "51872:133:0",
												"trueBody": {
													"id": 2479,
													"nodeType": "Block",
													"src": "51935:70:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2473,
																		"name": "_tokensIdsAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "51950:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "51967:3:0",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "51950:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer)"
																	}
																},
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51950:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2477,
															"nodeType": "ExpressionStatement",
															"src": "51950:22:0"
														},
														{
															"functionReturnParameters": 2464,
															"id": 2478,
															"nodeType": "Return",
															"src": "51987:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													2482
												],
												"declarations": [
													{
														"constant": false,
														"id": 2482,
														"mutability": "mutable",
														"name": "hasItem",
														"nameLocation": "52020:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2536,
														"src": "52015:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2481,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "52015:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2484,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "52030:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52015:20:0"
											},
											{
												"assignments": [
													2486
												],
												"declarations": [
													{
														"constant": false,
														"id": 2486,
														"mutability": "mutable",
														"name": "needIndex",
														"nameLocation": "52054:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2536,
														"src": "52046:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2485,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "52046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2487,
												"nodeType": "VariableDeclarationStatement",
												"src": "52046:17:0"
											},
											{
												"body": {
													"id": 2515,
													"nodeType": "Block",
													"src": "52127:168:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2499,
																		"name": "_tokensIdsAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "52146:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2501,
																	"indexExpression": {
																		"id": 2500,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2489,
																		"src": "52163:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "52146:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2502,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2462,
																	"src": "52169:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "52146:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2514,
															"nodeType": "IfStatement",
															"src": "52142:142:0",
															"trueBody": {
																"id": 2513,
																"nodeType": "Block",
																"src": "52179:105:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2504,
																				"name": "hasItem",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2482,
																				"src": "52198:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 2505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52208:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "52198:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2507,
																		"nodeType": "ExpressionStatement",
																		"src": "52198:14:0"
																	},
																	{
																		"expression": {
																			"id": 2510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2508,
																				"name": "needIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2486,
																				"src": "52231:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2509,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2489,
																				"src": "52243:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "52231:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2511,
																		"nodeType": "ExpressionStatement",
																		"src": "52231:13:0"
																	},
																	{
																		"id": 2512,
																		"nodeType": "Break",
																		"src": "52263:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2492,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2489,
														"src": "52093:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2493,
															"name": "_tokensIdsAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "52097:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "52114:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "52097:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52093:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2516,
												"initializationExpression": {
													"assignments": [
														2489
													],
													"declarations": [
														{
															"constant": false,
															"id": 2489,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "52086:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2516,
															"src": "52078:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2488,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "52078:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2491,
													"initialValue": {
														"hexValue": "30",
														"id": 2490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52090:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "52078:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "52122:3:0",
														"subExpression": {
															"id": 2496,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "52122:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2498,
													"nodeType": "ExpressionStatement",
													"src": "52122:3:0"
												},
												"nodeType": "ForStatement",
												"src": "52074:221:0"
											},
											{
												"condition": {
													"id": 2517,
													"name": "hasItem",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2482,
													"src": "52309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2535,
												"nodeType": "IfStatement",
												"src": "52305:150:0",
												"trueBody": {
													"id": 2534,
													"nodeType": "Block",
													"src": "52318:137:0",
													"statements": [
														{
															"expression": {
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2518,
																		"name": "_tokensIdsAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "52333:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2520,
																	"indexExpression": {
																		"id": 2519,
																		"name": "needIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2486,
																		"src": "52350:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "52333:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2521,
																		"name": "_tokensIdsAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "52363:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2526,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2522,
																				"name": "_tokensIdsAtSale",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2446,
																				"src": "52380:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 2523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "52397:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "52380:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52404:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "52380:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "52363:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "52333:73:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2528,
															"nodeType": "ExpressionStatement",
															"src": "52333:73:0"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2529,
																		"name": "_tokensIdsAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "52421:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "52438:3:0",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "52421:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer)"
																	}
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52421:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2533,
															"nodeType": "ExpressionStatement",
															"src": "52421:22:0"
														}
													]
												}
											}
										]
									},
									"id": 2537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__delTokenForSale",
									"nameLocation": "51815:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "51841:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "51833:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51832:18:0"
									},
									"returnParameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51861:0:0"
									},
									"scope": 3550,
									"src": "51806:656:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2577,
										"nodeType": "Block",
										"src": "52612:202:0",
										"statements": [
											{
												"expression": {
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2549,
														"name": "marketNft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2417,
														"src": "52623:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$638",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2551,
																"name": "_nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2539,
																"src": "52643:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2550,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "52635:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$638_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 2552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "52635:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$638",
															"typeString": "contract IERC721"
														}
													},
													"src": "52623:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$638",
														"typeString": "contract IERC721"
													}
												},
												"id": 2554,
												"nodeType": "ExpressionStatement",
												"src": "52623:25:0"
											},
											{
												"expression": {
													"id": 2557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2555,
														"name": "_tradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2423,
														"src": "52659:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2556,
														"name": "__tradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "52671:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52659:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2558,
												"nodeType": "ExpressionStatement",
												"src": "52659:22:0"
											},
											{
												"expression": {
													"id": 2561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2559,
														"name": "_allowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "52692:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2560,
														"name": "__allowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2546,
														"src": "52708:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "52692:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 2562,
												"nodeType": "ExpressionStatement",
												"src": "52692:30:0"
											},
											{
												"expression": {
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2563,
														"name": "_feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2448,
														"src": "52733:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2564,
																		"name": "__feeReceiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2541,
																		"src": "52749:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52774:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "52766:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2565,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "52766:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "52766:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "52749:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 2570,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "52748:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 2573,
															"name": "__feeReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2541,
															"src": "52793:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "52748:58:0",
														"trueExpression": {
															"expression": {
																"id": 2571,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "52780:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "52784:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "52780:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "52733:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2576,
												"nodeType": "ExpressionStatement",
												"src": "52733:73:0"
											}
										]
									},
									"id": 2578,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "_nft",
												"nameLocation": "52500:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "52492:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "__feeReceiver",
												"nameLocation": "52523:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "52515:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "__tradeFee",
												"nameLocation": "52552:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "52547:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "52547:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "__allowedERC20",
												"nameLocation": "52590:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "52573:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2544,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "52573:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2545,
													"nodeType": "ArrayTypeName",
													"src": "52573:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52481:130:0"
									},
									"returnParameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52612:0:0"
									},
									"scope": 3550,
									"src": "52470:344:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2585,
										"nodeType": "Block",
										"src": "52877:38:0",
										"statements": [
											{
												"expression": {
													"id": 2583,
													"name": "_feeReceiver",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2448,
													"src": "52895:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2582,
												"id": 2584,
												"nodeType": "Return",
												"src": "52888:19:0"
											}
										]
									},
									"functionSelector": "e8a35392",
									"id": 2586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeReceiver",
									"nameLocation": "52831:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52845:2:0"
									},
									"returnParameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2586,
												"src": "52868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52867:9:0"
									},
									"scope": 3550,
									"src": "52822:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2597,
										"nodeType": "Block",
										"src": "52987:49:0",
										"statements": [
											{
												"expression": {
													"id": 2595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2593,
														"name": "_feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2448,
														"src": "52998:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2594,
														"name": "_newFeeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2588,
														"src": "53013:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "52998:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2596,
												"nodeType": "ExpressionStatement",
												"src": "52998:30:0"
											}
										]
									},
									"functionSelector": "efdcd974",
									"id": 2598,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2591,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2590,
												"name": "onlyOwner",
												"nameLocations": [
													"52977:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "52977:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "52977:9:0"
										}
									],
									"name": "setFeeReceiver",
									"nameLocation": "52930:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "_newFeeReceiver",
												"nameLocation": "52953:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2598,
												"src": "52945:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52944:25:0"
									},
									"returnParameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52987:0:0"
									},
									"scope": 3550,
									"src": "52921:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2610,
										"nodeType": "Block",
										"src": "53118:50:0",
										"statements": [
											{
												"expression": {
													"id": 2608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2606,
														"name": "_allowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "53129:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2607,
														"name": "newAllowedERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2601,
														"src": "53145:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "53129:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 2609,
												"nodeType": "ExpressionStatement",
												"src": "53129:31:0"
											}
										]
									},
									"functionSelector": "e9e4e160",
									"id": 2611,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2604,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2603,
												"name": "onlyOwner",
												"nameLocations": [
													"53108:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "53108:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53108:9:0"
										}
									],
									"name": "setAllowedERC20",
									"nameLocation": "53051:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "newAllowedERC20",
												"nameLocation": "53084:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "53067:32:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2599,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "53067:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2600,
													"nodeType": "ArrayTypeName",
													"src": "53067:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53066:34:0"
									},
									"returnParameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53118:0:0"
									},
									"scope": 3550,
									"src": "53042:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "53245:39:0",
										"statements": [
											{
												"expression": {
													"id": 2617,
													"name": "_allowedERC20",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2443,
													"src": "53263:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 2616,
												"id": 2618,
												"nodeType": "Return",
												"src": "53256:20:0"
											}
										]
									},
									"functionSelector": "69c57352",
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllowedERC20",
									"nameLocation": "53189:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53204:2:0"
									},
									"returnParameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "53227:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2613,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "53227:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2614,
													"nodeType": "ArrayTypeName",
													"src": "53227:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53226:18:0"
									},
									"scope": 3550,
									"src": "53180:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2650,
										"nodeType": "Block",
										"src": "53358:152:0",
										"statements": [
											{
												"body": {
													"id": 2646,
													"nodeType": "Block",
													"src": "53411:69:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2638,
																	"name": "erc20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2622,
																	"src": "53430:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2639,
																		"name": "_allowedERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2443,
																		"src": "53439:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2641,
																	"indexExpression": {
																		"id": 2640,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2628,
																		"src": "53453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "53439:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "53430:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2645,
															"nodeType": "IfStatement",
															"src": "53426:42:0",
															"trueBody": {
																"expression": {
																	"hexValue": "74727565",
																	"id": 2643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53464:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"functionReturnParameters": 2626,
																"id": 2644,
																"nodeType": "Return",
																"src": "53457:11:0"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2631,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2628,
														"src": "53383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2632,
															"name": "_allowedERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2443,
															"src": "53385:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "53399:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "53385:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53383:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2647,
												"initializationExpression": {
													"assignments": [
														2628
													],
													"declarations": [
														{
															"constant": false,
															"id": 2628,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "53378:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2647,
															"src": "53373:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2627,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "53373:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2630,
													"initialValue": {
														"hexValue": "30",
														"id": 2629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53380:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "53373:8:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "53406:3:0",
														"subExpression": {
															"id": 2635,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2628,
															"src": "53406:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2637,
													"nodeType": "ExpressionStatement",
													"src": "53406:3:0"
												},
												"nodeType": "ForStatement",
												"src": "53369:111:0"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 2648,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "53497:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 2626,
												"id": 2649,
												"nodeType": "Return",
												"src": "53490:12:0"
											}
										]
									},
									"functionSelector": "785fa7ce",
									"id": 2651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAllowedERC20",
									"nameLocation": "53301:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "53324:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "53316:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53315:15:0"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "53352:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53352:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53351:6:0"
									},
									"scope": 3550,
									"src": "53292:218:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2679,
										"nodeType": "Block",
										"src": "53558:151:0",
										"statements": [
											{
												"assignments": [
													2657
												],
												"declarations": [
													{
														"constant": false,
														"id": 2657,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "53577:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2679,
														"src": "53569:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2656,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "53569:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2663,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2660,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "53594:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Marketplace_$3550",
																	"typeString": "contract Marketplace"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Marketplace_$3550",
																	"typeString": "contract Marketplace"
																}
															],
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "53586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2658,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "53586:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53586:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "53600:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "53586:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53569:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2670,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "53647:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2666,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "53626:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "53630:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "53626:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53618:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53618:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53618:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "53638:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "53618:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53618:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2672,
												"nodeType": "ExpressionStatement",
												"src": "53618:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2674,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "53682:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "53686:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "53682:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2676,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "53694:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2673,
														"name": "WithdrawWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2395,
														"src": "53670:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53670:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2678,
												"nodeType": "EmitStatement",
												"src": "53665:36:0"
											}
										]
									},
									"functionSelector": "5211ac2e",
									"id": 2680,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2653,
												"name": "onlyOwner",
												"nameLocations": [
													"53548:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "53548:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53548:9:0"
										}
									],
									"name": "withdrawWei",
									"nameLocation": "53527:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53538:2:0"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53558:0:0"
									},
									"scope": 3550,
									"src": "53518:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2719,
										"nodeType": "Block",
										"src": "53772:206:0",
										"statements": [
											{
												"assignments": [
													2689
												],
												"declarations": [
													{
														"constant": false,
														"id": 2689,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "53790:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2719,
														"src": "53783:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$517",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 2688,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2687,
																"name": "IERC20",
																"nameLocations": [
																	"53783:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 517,
																"src": "53783:6:0"
															},
															"referencedDeclaration": 517,
															"src": "53783:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2693,
												"initialValue": {
													"arguments": [
														{
															"id": 2691,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "53805:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2690,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "53798:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$517_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 2692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53798:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53783:28:0"
											},
											{
												"assignments": [
													2695
												],
												"declarations": [
													{
														"constant": false,
														"id": 2695,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "53830:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2719,
														"src": "53822:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "53822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2703,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2700,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "53864:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3550",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3550",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 2699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53856:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2698,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53856:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53856:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2696,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2689,
															"src": "53840:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 2697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "53846:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "53840:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53840:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53822:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2707,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "53896:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53896:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2709,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2695,
															"src": "53905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2704,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2689,
															"src": "53881:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 2706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "53887:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 484,
														"src": "53881:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53881:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2711,
												"nodeType": "ExpressionStatement",
												"src": "53881:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2713,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "53943:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "53947:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "53943:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2715,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "53955:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2716,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2695,
															"src": "53962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2712,
														"name": "WithdrawERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2403,
														"src": "53929:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53929:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2718,
												"nodeType": "EmitStatement",
												"src": "53924:46:0"
											}
										]
									},
									"functionSelector": "f4f3b200",
									"id": 2720,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2685,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2684,
												"name": "onlyOwner",
												"nameLocations": [
													"53762:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "53762:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53762:9:0"
										}
									],
									"name": "withdrawERC20",
									"nameLocation": "53726:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "erc20",
												"nameLocation": "53748:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "53740:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53739:15:0"
									},
									"returnParameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53772:0:0"
									},
									"scope": 3550,
									"src": "53717:261:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2727,
										"nodeType": "Block",
										"src": "54036:35:0",
										"statements": [
											{
												"expression": {
													"id": 2725,
													"name": "_tradeFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2423,
													"src": "54054:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2724,
												"id": 2726,
												"nodeType": "Return",
												"src": "54047:16:0"
											}
										]
									},
									"functionSelector": "952977f5",
									"id": 2728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTradeFee",
									"nameLocation": "53995:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54006:2:0"
									},
									"returnParameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "54030:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2722,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "54030:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54029:6:0"
									},
									"scope": 3550,
									"src": "53986:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2739,
										"nodeType": "Block",
										"src": "54134:43:0",
										"statements": [
											{
												"expression": {
													"id": 2737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2735,
														"name": "_tradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2423,
														"src": "54145:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2736,
														"name": "_newTradeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2730,
														"src": "54157:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54145:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2738,
												"nodeType": "ExpressionStatement",
												"src": "54145:24:0"
											}
										]
									},
									"functionSelector": "10603023",
									"id": 2740,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2733,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2732,
												"name": "onlyOwner",
												"nameLocations": [
													"54124:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 50,
												"src": "54124:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "54124:9:0"
										}
									],
									"name": "setTradeFee",
									"nameLocation": "54086:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "_newTradeFee",
												"nameLocation": "54103:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "54098:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2729,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "54098:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54097:19:0"
									},
									"returnParameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54134:0:0"
									},
									"scope": 3550,
									"src": "54077:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2763,
										"nodeType": "Block",
										"src": "54240:87:0",
										"statements": [
											{
												"expression": {
													"id": 2761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2745,
															"name": "_tokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2440,
															"src": "54251:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
															}
														},
														"id": 2747,
														"indexExpression": {
															"id": 2746,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2742,
															"src": "54265:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "54251:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
															"typeString": "struct Marketplace.SelledNFT storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54287:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "54298:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "54290:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2750,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "54290:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54290:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 2754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54302:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "54313:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "54305:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2755,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "54305:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54305:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 2759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54317:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2748,
															"name": "SelledNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "54277:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_SelledNFT_$2414_storage_ptr_$",
																"typeString": "type(struct Marketplace.SelledNFT storage pointer)"
															}
														},
														"id": 2760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54277:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2414_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT memory"
														}
													},
													"src": "54251:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
														"typeString": "struct Marketplace.SelledNFT storage ref"
													}
												},
												"id": 2762,
												"nodeType": "ExpressionStatement",
												"src": "54251:68:0"
											}
										]
									},
									"id": 2764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_clearSellToken",
									"nameLocation": "54196:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "54220:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "54212:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54211:18:0"
									},
									"returnParameters": {
										"id": 2744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54240:0:0"
									},
									"scope": 3550,
									"src": "54187:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2776,
										"nodeType": "Block",
										"src": "54411:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2772,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "54449:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54453:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "54449:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2771,
														"name": "getUserTokensAtSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2899,
														"src": "54429:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (address) view returns (struct Marketplace.SelledNFT memory[] memory)"
														}
													},
													"id": 2774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54429:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"functionReturnParameters": 2770,
												"id": 2775,
												"nodeType": "Return",
												"src": "54422:38:0"
											}
										]
									},
									"functionSelector": "a096c5a2",
									"id": 2777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyTokensAtSale",
									"nameLocation": "54344:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54361:2:0"
									},
									"returnParameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "54406:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2777,
												"src": "54387:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 2767,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2766,
															"name": "SelledNFT",
															"nameLocations": [
																"54387:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2414,
															"src": "54387:9:0"
														},
														"referencedDeclaration": 2414,
														"src": "54387:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2414_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 2768,
													"nodeType": "ArrayTypeName",
													"src": "54387:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54386:24:0"
									},
									"scope": 3550,
									"src": "54335:133:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2898,
										"nodeType": "Block",
										"src": "54589:914:0",
										"statements": [
											{
												"assignments": [
													2787
												],
												"declarations": [
													{
														"constant": false,
														"id": 2787,
														"mutability": "mutable",
														"name": "_counter",
														"nameLocation": "54608:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2898,
														"src": "54600:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "54600:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2789,
												"initialValue": {
													"hexValue": "30",
													"id": 2788,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "54619:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54600:20:0"
											},
											{
												"body": {
													"id": 2813,
													"nodeType": "Block",
													"src": "54685:94:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2801,
																			"name": "_tokensAtSale",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2440,
																			"src": "54704:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																			}
																		},
																		"id": 2805,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2802,
																				"name": "_tokensIdsAtSale",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2446,
																				"src": "54718:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 2804,
																			"indexExpression": {
																				"id": 2803,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2791,
																				"src": "54735:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "54718:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "54704:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref"
																		}
																	},
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "54739:6:0",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2407,
																	"src": "54704:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2807,
																	"name": "seller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2779,
																	"src": "54749:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "54704:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2812,
															"nodeType": "IfStatement",
															"src": "54700:67:0",
															"trueBody": {
																"expression": {
																	"id": 2810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "54757:10:0",
																	"subExpression": {
																		"id": 2809,
																		"name": "_counter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2787,
																		"src": "54757:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2811,
																"nodeType": "ExpressionStatement",
																"src": "54757:10:0"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2794,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2791,
														"src": "54651:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2795,
															"name": "_tokensIdsAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "54655:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54672:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "54655:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54651:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2814,
												"initializationExpression": {
													"assignments": [
														2791
													],
													"declarations": [
														{
															"constant": false,
															"id": 2791,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "54644:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2814,
															"src": "54636:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2790,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "54636:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2793,
													"initialValue": {
														"hexValue": "30",
														"id": 2792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54648:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "54636:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "54680:3:0",
														"subExpression": {
															"id": 2798,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2791,
															"src": "54680:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2800,
													"nodeType": "ExpressionStatement",
													"src": "54680:3:0"
												},
												"nodeType": "ForStatement",
												"src": "54631:148:0"
											},
											{
												"assignments": [
													2819
												],
												"declarations": [
													{
														"constant": false,
														"id": 2819,
														"mutability": "mutable",
														"name": "_ret",
														"nameLocation": "54808:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2898,
														"src": "54789:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT[]"
														},
														"typeName": {
															"baseType": {
																"id": 2817,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2816,
																	"name": "SelledNFT",
																	"nameLocations": [
																		"54789:9:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2414,
																	"src": "54789:9:0"
																},
																"referencedDeclaration": 2414,
																"src": "54789:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_storage_ptr",
																	"typeString": "struct Marketplace.SelledNFT"
																}
															},
															"id": 2818,
															"nodeType": "ArrayTypeName",
															"src": "54789:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2826,
												"initialValue": {
													"arguments": [
														{
															"id": 2824,
															"name": "_counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2787,
															"src": "54831:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "54815:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Marketplace.SelledNFT memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2821,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2820,
																	"name": "SelledNFT",
																	"nameLocations": [
																		"54819:9:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2414,
																	"src": "54819:9:0"
																},
																"referencedDeclaration": 2414,
																"src": "54819:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_storage_ptr",
																	"typeString": "struct Marketplace.SelledNFT"
																}
															},
															"id": 2822,
															"nodeType": "ArrayTypeName",
															"src": "54819:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT[]"
															}
														}
													},
													"id": 2825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54815:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54789:51:0"
											},
											{
												"expression": {
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2827,
														"name": "_counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2787,
														"src": "54851:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54862:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "54851:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2830,
												"nodeType": "ExpressionStatement",
												"src": "54851:12:0"
											},
											{
												"body": {
													"id": 2894,
													"nodeType": "Block",
													"src": "54930:542:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2842,
																			"name": "_tokensAtSale",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2440,
																			"src": "54949:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																			}
																		},
																		"id": 2846,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2843,
																				"name": "_tokensIdsAtSale",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2446,
																				"src": "54963:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 2845,
																			"indexExpression": {
																				"id": 2844,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2832,
																				"src": "54980:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "54963:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "54949:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref"
																		}
																	},
																	"id": 2847,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "54984:6:0",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2407,
																	"src": "54949:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2848,
																	"name": "seller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2779,
																	"src": "54994:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "54949:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2893,
															"nodeType": "IfStatement",
															"src": "54945:516:0",
															"trueBody": {
																"id": 2892,
																"nodeType": "Block",
																"src": "55002:459:0",
																"statements": [
																	{
																		"assignments": [
																			2852
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2852,
																				"mutability": "mutable",
																				"name": "_pushItem",
																				"nameLocation": "55038:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2892,
																				"src": "55021:26:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2414_memory_ptr",
																					"typeString": "struct Marketplace.SelledNFT"
																				},
																				"typeName": {
																					"id": 2851,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 2850,
																						"name": "SelledNFT",
																						"nameLocations": [
																							"55021:9:0"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 2414,
																						"src": "55021:9:0"
																					},
																					"referencedDeclaration": 2414,
																					"src": "55021:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SelledNFT_$2414_storage_ptr",
																						"typeString": "struct Marketplace.SelledNFT"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2882,
																		"initialValue": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 2854,
																						"name": "_tokensIdsAtSale",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2446,
																						"src": "55082:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																							"typeString": "uint256[] storage ref"
																						}
																					},
																					"id": 2856,
																					"indexExpression": {
																						"id": 2855,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2832,
																						"src": "55099:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "55082:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2857,
																							"name": "_tokensAtSale",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2440,
																							"src": "55124:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																								"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																							}
																						},
																						"id": 2861,
																						"indexExpression": {
																							"baseExpression": {
																								"id": 2858,
																								"name": "_tokensIdsAtSale",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2446,
																								"src": "55138:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																									"typeString": "uint256[] storage ref"
																								}
																							},
																							"id": 2860,
																							"indexExpression": {
																								"id": 2859,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2832,
																								"src": "55155:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "55138:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "55124:34:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref"
																						}
																					},
																					"id": 2862,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "55159:6:0",
																					"memberName": "seller",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2407,
																					"src": "55124:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2863,
																							"name": "_tokensAtSale",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2440,
																							"src": "55188:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																								"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																							}
																						},
																						"id": 2867,
																						"indexExpression": {
																							"baseExpression": {
																								"id": 2864,
																								"name": "_tokensIdsAtSale",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2446,
																								"src": "55202:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																									"typeString": "uint256[] storage ref"
																								}
																							},
																							"id": 2866,
																							"indexExpression": {
																								"id": 2865,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2832,
																								"src": "55219:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "55202:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "55188:34:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref"
																						}
																					},
																					"id": 2868,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "55223:5:0",
																					"memberName": "price",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2409,
																					"src": "55188:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2869,
																							"name": "_tokensAtSale",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2440,
																							"src": "55251:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																								"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																							}
																						},
																						"id": 2873,
																						"indexExpression": {
																							"baseExpression": {
																								"id": 2870,
																								"name": "_tokensIdsAtSale",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2446,
																								"src": "55265:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																									"typeString": "uint256[] storage ref"
																								}
																							},
																							"id": 2872,
																							"indexExpression": {
																								"id": 2871,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2832,
																								"src": "55282:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "55265:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "55251:34:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref"
																						}
																					},
																					"id": 2874,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "55286:5:0",
																					"memberName": "erc20",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2411,
																					"src": "55251:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2875,
																							"name": "_tokensAtSale",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2440,
																							"src": "55314:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																								"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																							}
																						},
																						"id": 2879,
																						"indexExpression": {
																							"baseExpression": {
																								"id": 2876,
																								"name": "_tokensIdsAtSale",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2446,
																								"src": "55328:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																									"typeString": "uint256[] storage ref"
																								}
																							},
																							"id": 2878,
																							"indexExpression": {
																								"id": 2877,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2832,
																								"src": "55345:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "55328:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "55314:34:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																							"typeString": "struct Marketplace.SelledNFT storage ref"
																						}
																					},
																					"id": 2880,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "55349:3:0",
																					"memberName": "utx",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2413,
																					"src": "55314:38:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2853,
																				"name": "SelledNFT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2414,
																				"src": "55050:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_struct$_SelledNFT_$2414_storage_ptr_$",
																					"typeString": "type(struct Marketplace.SelledNFT storage pointer)"
																				}
																			},
																			"id": 2881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "structConstructorCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "55050:321:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2414_memory_ptr",
																				"typeString": "struct Marketplace.SelledNFT memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "55021:350:0"
																	},
																	{
																		"expression": {
																			"id": 2887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2883,
																					"name": "_ret",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2819,
																					"src": "55390:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct Marketplace.SelledNFT memory[] memory"
																					}
																				},
																				"id": 2885,
																				"indexExpression": {
																					"id": 2884,
																					"name": "_counter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2787,
																					"src": "55395:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "55390:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2414_memory_ptr",
																					"typeString": "struct Marketplace.SelledNFT memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2886,
																				"name": "_pushItem",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2852,
																				"src": "55407:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2414_memory_ptr",
																					"typeString": "struct Marketplace.SelledNFT memory"
																				}
																			},
																			"src": "55390:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2414_memory_ptr",
																				"typeString": "struct Marketplace.SelledNFT memory"
																			}
																		},
																		"id": 2888,
																		"nodeType": "ExpressionStatement",
																		"src": "55390:26:0"
																	},
																	{
																		"expression": {
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "55435:10:0",
																			"subExpression": {
																				"id": 2889,
																				"name": "_counter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2787,
																				"src": "55435:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2891,
																		"nodeType": "ExpressionStatement",
																		"src": "55435:10:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2835,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2832,
														"src": "54896:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2836,
															"name": "_tokensIdsAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "54900:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54917:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "54900:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54896:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2895,
												"initializationExpression": {
													"assignments": [
														2832
													],
													"declarations": [
														{
															"constant": false,
															"id": 2832,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "54889:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2895,
															"src": "54881:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2831,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "54881:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2834,
													"initialValue": {
														"hexValue": "30",
														"id": 2833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54893:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "54881:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "54925:3:0",
														"subExpression": {
															"id": 2839,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2832,
															"src": "54925:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2841,
													"nodeType": "ExpressionStatement",
													"src": "54925:3:0"
												},
												"nodeType": "ForStatement",
												"src": "54876:596:0"
											},
											{
												"expression": {
													"id": 2896,
													"name": "_ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2819,
													"src": "55491:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"functionReturnParameters": 2785,
												"id": 2897,
												"nodeType": "Return",
												"src": "55484:11:0"
											}
										]
									},
									"functionSelector": "19c8c1c5",
									"id": 2899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserTokensAtSale",
									"nameLocation": "54485:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "54513:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "54505:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54504:16:0"
									},
									"returnParameters": {
										"id": 2785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2784,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "54579:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "54560:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 2782,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2781,
															"name": "SelledNFT",
															"nameLocations": [
																"54560:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2414,
															"src": "54560:9:0"
														},
														"referencedDeclaration": 2414,
														"src": "54560:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2414_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 2783,
													"nodeType": "ArrayTypeName",
													"src": "54560:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54559:24:0"
									},
									"scope": 3550,
									"src": "54476:1027:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2907,
										"nodeType": "Block",
										"src": "55573:49:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2904,
														"name": "_tokensIdsAtSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2446,
														"src": "55591:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 2905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "55608:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "55591:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2903,
												"id": 2906,
												"nodeType": "Return",
												"src": "55584:30:0"
											}
										]
									},
									"functionSelector": "c8f77899",
									"id": 2908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokensAtSaleCount",
									"nameLocation": "55520:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55540:2:0"
									},
									"returnParameters": {
										"id": 2903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "55564:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55563:9:0"
									},
									"scope": 3550,
									"src": "55511:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3038,
										"nodeType": "Block",
										"src": "55756:917:0",
										"statements": [
											{
												"assignments": [
													2920
												],
												"declarations": [
													{
														"constant": false,
														"id": 2920,
														"mutability": "mutable",
														"name": "iStart",
														"nameLocation": "55775:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3038,
														"src": "55767:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2919,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2922,
												"initialValue": {
													"id": 2921,
													"name": "offset",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2910,
													"src": "55784:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55767:23:0"
											},
											{
												"assignments": [
													2924
												],
												"declarations": [
													{
														"constant": false,
														"id": 2924,
														"mutability": "mutable",
														"name": "iEnd",
														"nameLocation": "55809:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3038,
														"src": "55801:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2923,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2928,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2925,
														"name": "iStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2920,
														"src": "55816:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2926,
														"name": "limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2912,
														"src": "55825:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55816:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55801:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2929,
														"name": "iStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2920,
														"src": "55845:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 2930,
															"name": "_tokensIdsAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "55855:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55872:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "55855:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55845:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2940,
												"nodeType": "IfStatement",
												"src": "55841:64:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55903:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "55887:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct Marketplace.SelledNFT memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2934,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2933,
																		"name": "SelledNFT",
																		"nameLocations": [
																			"55891:9:0"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2414,
																		"src": "55891:9:0"
																	},
																	"referencedDeclaration": 2414,
																	"src": "55891:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2414_storage_ptr",
																		"typeString": "struct Marketplace.SelledNFT"
																	}
																},
																"id": 2935,
																"nodeType": "ArrayTypeName",
																"src": "55891:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_storage_$dyn_storage_ptr",
																	"typeString": "struct Marketplace.SelledNFT[]"
																}
															}
														},
														"id": 2938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55887:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT memory[] memory"
														}
													},
													"functionReturnParameters": 2918,
													"id": 2939,
													"nodeType": "Return",
													"src": "55880:25:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2941,
															"name": "offset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2910,
															"src": "55920:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55930:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "55920:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2944,
															"name": "limit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2912,
															"src": "55935:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55944:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "55935:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "55920:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2953,
												"nodeType": "IfStatement",
												"src": "55916:61:0",
												"trueBody": {
													"expression": {
														"id": 2951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2948,
															"name": "iEnd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2924,
															"src": "55947:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 2949,
																"name": "_tokensIdsAtSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2446,
																"src": "55954:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															},
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "55971:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "55954:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "55947:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2952,
													"nodeType": "ExpressionStatement",
													"src": "55947:30:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2954,
														"name": "iEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2924,
														"src": "55992:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 2955,
															"name": "_tokensIdsAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "55999:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "56016:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "55999:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55992:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2963,
												"nodeType": "IfStatement",
												"src": "55988:66:0",
												"trueBody": {
													"expression": {
														"id": 2961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2958,
															"name": "iEnd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2924,
															"src": "56024:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 2959,
																"name": "_tokensIdsAtSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2446,
																"src": "56031:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															},
															"id": 2960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56048:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "56031:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56024:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2962,
													"nodeType": "ExpressionStatement",
													"src": "56024:30:0"
												}
											},
											{
												"assignments": [
													2965
												],
												"declarations": [
													{
														"constant": false,
														"id": 2965,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "56083:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3038,
														"src": "56075:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2964,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "56075:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2969,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2966,
														"name": "iEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2924,
														"src": "56091:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2967,
														"name": "iStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2920,
														"src": "56098:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "56091:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56075:29:0"
											},
											{
												"assignments": [
													2971
												],
												"declarations": [
													{
														"constant": false,
														"id": 2971,
														"mutability": "mutable",
														"name": "ii",
														"nameLocation": "56123:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 3038,
														"src": "56115:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2970,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "56115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2973,
												"initialValue": {
													"hexValue": "30",
													"id": 2972,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "56128:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56115:14:0"
											},
											{
												"assignments": [
													2978
												],
												"declarations": [
													{
														"constant": false,
														"id": 2978,
														"mutability": "mutable",
														"name": "_ret",
														"nameLocation": "56159:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3038,
														"src": "56140:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT[]"
														},
														"typeName": {
															"baseType": {
																"id": 2976,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2975,
																	"name": "SelledNFT",
																	"nameLocations": [
																		"56140:9:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2414,
																	"src": "56140:9:0"
																},
																"referencedDeclaration": 2414,
																"src": "56140:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_storage_ptr",
																	"typeString": "struct Marketplace.SelledNFT"
																}
															},
															"id": 2977,
															"nodeType": "ArrayTypeName",
															"src": "56140:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2985,
												"initialValue": {
													"arguments": [
														{
															"id": 2983,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2965,
															"src": "56182:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "56166:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Marketplace.SelledNFT memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2980,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2979,
																	"name": "SelledNFT",
																	"nameLocations": [
																		"56170:9:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2414,
																	"src": "56170:9:0"
																},
																"referencedDeclaration": 2414,
																"src": "56170:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_storage_ptr",
																	"typeString": "struct Marketplace.SelledNFT"
																}
															},
															"id": 2981,
															"nodeType": "ArrayTypeName",
															"src": "56170:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.SelledNFT[]"
															}
														}
													},
													"id": 2984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56166:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56140:48:0"
											},
											{
												"body": {
													"id": 3034,
													"nodeType": "Block",
													"src": "56239:405:0",
													"statements": [
														{
															"assignments": [
																2997
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2997,
																	"mutability": "mutable",
																	"name": "_tokenId",
																	"nameLocation": "56262:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3034,
																	"src": "56254:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2996,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "56254:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3001,
															"initialValue": {
																"baseExpression": {
																	"id": 2998,
																	"name": "_tokensIdsAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2446,
																	"src": "56273:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 3000,
																"indexExpression": {
																	"id": 2999,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2987,
																	"src": "56290:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "56273:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "56254:38:0"
														},
														{
															"assignments": [
																3004
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3004,
																	"mutability": "mutable",
																	"name": "_pushItem",
																	"nameLocation": "56324:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3034,
																	"src": "56307:26:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2414_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT"
																	},
																	"typeName": {
																		"id": 3003,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 3002,
																			"name": "SelledNFT",
																			"nameLocations": [
																				"56307:9:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2414,
																			"src": "56307:9:0"
																		},
																		"referencedDeclaration": 2414,
																		"src": "56307:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2414_storage_ptr",
																			"typeString": "struct Marketplace.SelledNFT"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3024,
															"initialValue": {
																"arguments": [
																	{
																		"id": 3006,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2997,
																		"src": "56364:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 3007,
																				"name": "_tokensAtSale",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2440,
																				"src": "56391:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																				}
																			},
																			"id": 3009,
																			"indexExpression": {
																				"id": 3008,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2997,
																				"src": "56405:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "56391:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref"
																			}
																		},
																		"id": 3010,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "56415:6:0",
																		"memberName": "seller",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2407,
																		"src": "56391:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 3011,
																				"name": "_tokensAtSale",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2440,
																				"src": "56440:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																				}
																			},
																			"id": 3013,
																			"indexExpression": {
																				"id": 3012,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2997,
																				"src": "56454:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "56440:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref"
																			}
																		},
																		"id": 3014,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "56464:5:0",
																		"memberName": "price",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2409,
																		"src": "56440:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 3015,
																				"name": "_tokensAtSale",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2440,
																				"src": "56488:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																				}
																			},
																			"id": 3017,
																			"indexExpression": {
																				"id": 3016,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2997,
																				"src": "56502:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "56488:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref"
																			}
																		},
																		"id": 3018,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "56512:5:0",
																		"memberName": "erc20",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2411,
																		"src": "56488:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 3019,
																				"name": "_tokensAtSale",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2440,
																				"src": "56536:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																				}
																			},
																			"id": 3021,
																			"indexExpression": {
																				"id": 3020,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2997,
																				"src": "56550:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "56536:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																				"typeString": "struct Marketplace.SelledNFT storage ref"
																			}
																		},
																		"id": 3022,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "56560:3:0",
																		"memberName": "utx",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2413,
																		"src": "56536:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3005,
																	"name": "SelledNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2414,
																	"src": "56336:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_SelledNFT_$2414_storage_ptr_$",
																		"typeString": "type(struct Marketplace.SelledNFT storage pointer)"
																	}
																},
																"id": 3023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56336:242:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "56307:271:0"
														},
														{
															"expression": {
																"id": 3029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3025,
																		"name": "_ret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2978,
																		"src": "56593:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct Marketplace.SelledNFT memory[] memory"
																		}
																	},
																	"id": 3027,
																	"indexExpression": {
																		"id": 3026,
																		"name": "ii",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2971,
																		"src": "56598:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "56593:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2414_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3028,
																	"name": "_pushItem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3004,
																	"src": "56604:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2414_memory_ptr",
																		"typeString": "struct Marketplace.SelledNFT memory"
																	}
																},
																"src": "56593:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_memory_ptr",
																	"typeString": "struct Marketplace.SelledNFT memory"
																}
															},
															"id": 3030,
															"nodeType": "ExpressionStatement",
															"src": "56593:20:0"
														},
														{
															"expression": {
																"id": 3032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "56628:4:0",
																"subExpression": {
																	"id": 3031,
																	"name": "ii",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2971,
																	"src": "56628:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3033,
															"nodeType": "ExpressionStatement",
															"src": "56628:4:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2990,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2987,
														"src": "56224:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2991,
														"name": "iEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2924,
														"src": "56228:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "56224:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3035,
												"initializationExpression": {
													"assignments": [
														2987
													],
													"declarations": [
														{
															"constant": false,
															"id": 2987,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "56212:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 3035,
															"src": "56204:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2986,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "56204:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2989,
													"initialValue": {
														"id": 2988,
														"name": "iStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2920,
														"src": "56216:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "56204:18:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "56234:3:0",
														"subExpression": {
															"id": 2993,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2987,
															"src": "56234:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2995,
													"nodeType": "ExpressionStatement",
													"src": "56234:3:0"
												},
												"nodeType": "ForStatement",
												"src": "56199:445:0"
											},
											{
												"expression": {
													"id": 3036,
													"name": "_ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2978,
													"src": "56661:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.SelledNFT memory[] memory"
													}
												},
												"functionReturnParameters": 2918,
												"id": 3037,
												"nodeType": "Return",
												"src": "56654:11:0"
											}
										]
									},
									"functionSelector": "5b87f0f2",
									"id": 3039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokensAtSale",
									"nameLocation": "55639:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "55663:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3039,
												"src": "55655:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "55679:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3039,
												"src": "55671:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55654:31:0"
									},
									"returnParameters": {
										"id": 2918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "55746:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3039,
												"src": "55727:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.SelledNFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 2915,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2914,
															"name": "SelledNFT",
															"nameLocations": [
																"55727:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2414,
															"src": "55727:9:0"
														},
														"referencedDeclaration": 2414,
														"src": "55727:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2414_storage_ptr",
															"typeString": "struct Marketplace.SelledNFT"
														}
													},
													"id": 2916,
													"nodeType": "ArrayTypeName",
													"src": "55727:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SelledNFT_$2414_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.SelledNFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55726:24:0"
									},
									"scope": 3550,
									"src": "55630:1043:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3239,
										"nodeType": "Block",
										"src": "56763:1639:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3047,
																	"name": "_isTokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "56782:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 3049,
																"indexExpression": {
																	"id": 3048,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3041,
																	"src": "56798:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "56782:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 3050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56811:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "56782:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204e4654206973206e6f7420666f722073616c65",
															"id": 3052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56817:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															},
															"value": "This NFT is not for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															}
														],
														"id": 3046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "56774:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56774:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3054,
												"nodeType": "ExpressionStatement",
												"src": "56774:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3056,
																		"name": "_tokensAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2440,
																		"src": "56863:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																		}
																	},
																	"id": 3058,
																	"indexExpression": {
																		"id": 3057,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3041,
																		"src": "56877:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "56863:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																		"typeString": "struct Marketplace.SelledNFT storage ref"
																	}
																},
																"id": 3059,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "56887:5:0",
																"memberName": "erc20",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2411,
																"src": "56863:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "56904:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "56896:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3060,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "56896:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56896:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "56863:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e2073656c6c6564206279204e617469766520636f696e",
															"id": 3065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56908:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d",
																"typeString": "literal_string \"This token selled by Native coin\""
															},
															"value": "This token selled by Native coin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1837d5d3f6e7adb0541c6b227898fcab53da6f249b41d7c15e2b70f50df9b77d",
																"typeString": "literal_string \"This token selled by Native coin\""
															}
														],
														"id": 3055,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "56855:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56855:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3067,
												"nodeType": "ExpressionStatement",
												"src": "56855:88:0"
											},
											{
												"assignments": [
													3070
												],
												"declarations": [
													{
														"constant": false,
														"id": 3070,
														"mutability": "mutable",
														"name": "payToken",
														"nameLocation": "56963:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 3239,
														"src": "56956:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$517",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 3069,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3068,
																"name": "IERC20",
																"nameLocations": [
																	"56956:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 517,
																"src": "56956:6:0"
															},
															"referencedDeclaration": 517,
															"src": "56956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3077,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 3072,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "56981:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 3074,
																"indexExpression": {
																	"id": 3073,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3041,
																	"src": "56995:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "56981:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 3075,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57005:5:0",
															"memberName": "erc20",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2411,
															"src": "56981:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3071,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "56974:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$517_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 3076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56974:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$517",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56956:55:0"
											},
											{
												"assignments": [
													3079
												],
												"declarations": [
													{
														"constant": false,
														"id": 3079,
														"mutability": "mutable",
														"name": "buyerBalance",
														"nameLocation": "57030:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 3239,
														"src": "57022:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3085,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3082,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "57064:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57068:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "57064:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3080,
															"name": "payToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3070,
															"src": "57045:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 3081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57054:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "57045:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57045:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57022:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3087,
																"name": "buyerBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3079,
																"src": "57094:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3088,
																		"name": "_tokensAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2440,
																		"src": "57110:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																		}
																	},
																	"id": 3090,
																	"indexExpression": {
																		"id": 3089,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3041,
																		"src": "57124:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "57110:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																		"typeString": "struct Marketplace.SelledNFT storage ref"
																	}
																},
																"id": 3091,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "57134:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2409,
																"src": "57110:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "57094:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f206e6f74206861766520656e6f75676820746f6b656e73206f6e20796f75722062616c616e636520746f20706179",
															"id": 3093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57141:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca",
																"typeString": "literal_string \"You do not have enough tokens on your balance to pay\""
															},
															"value": "You do not have enough tokens on your balance to pay"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e9f50a4e8a871319d125e1be8b372ed3cc7c7212b401a1bf5cf6d37aa9eec9ca",
																"typeString": "literal_string \"You do not have enough tokens on your balance to pay\""
															}
														],
														"id": 3086,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "57086:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57086:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3095,
												"nodeType": "ExpressionStatement",
												"src": "57086:110:0"
											},
											{
												"assignments": [
													3097
												],
												"declarations": [
													{
														"constant": false,
														"id": 3097,
														"mutability": "mutable",
														"name": "buyerAllowance",
														"nameLocation": "57215:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 3239,
														"src": "57207:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3096,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57207:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3107,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3100,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "57251:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57255:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "57251:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3104,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "57271:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3550",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3550",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "57263:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "57263:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57263:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3098,
															"name": "payToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3070,
															"src": "57232:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 3099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57241:9:0",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "57232:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 3106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57232:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57207:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3109,
																"name": "buyerAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3097,
																"src": "57296:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3110,
																		"name": "_tokensAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2440,
																		"src": "57314:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																		}
																	},
																	"id": 3112,
																	"indexExpression": {
																		"id": 3111,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3041,
																		"src": "57328:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "57314:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																		"typeString": "struct Marketplace.SelledNFT storage ref"
																	}
																},
																"id": 3113,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "57338:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2409,
																"src": "57314:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "57296:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646964206e6f7420616c6c6f772074686520636f6e747261637420746f2073656e642074686520707572636861736520616d6f756e74",
															"id": 3115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57345:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1",
																"typeString": "literal_string \"You did not allow the contract to send the purchase amount\""
															},
															"value": "You did not allow the contract to send the purchase amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b79a67943180926c02805c90aa5300077f35b69831fa5af8a293cb53afea2dc1",
																"typeString": "literal_string \"You did not allow the contract to send the purchase amount\""
															}
														],
														"id": 3108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "57288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57288:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3117,
												"nodeType": "ExpressionStatement",
												"src": "57288:118:0"
											},
											{
												"assignments": [
													3119
												],
												"declarations": [
													{
														"constant": false,
														"id": 3119,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "57437:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3239,
														"src": "57429:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3118,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57429:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3124,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3120,
															"name": "_tokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2440,
															"src": "57446:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
															}
														},
														"id": 3122,
														"indexExpression": {
															"id": 3121,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3041,
															"src": "57460:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "57446:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
															"typeString": "struct Marketplace.SelledNFT storage ref"
														}
													},
													"id": 3123,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "57470:5:0",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2409,
													"src": "57446:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57429:46:0"
											},
											{
												"assignments": [
													3126
												],
												"declarations": [
													{
														"constant": false,
														"id": 3126,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "57494:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3239,
														"src": "57486:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3136,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3131,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3119,
																	"src": "57532:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 3132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "57540:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"expression": {
																	"id": 3129,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "57519:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 3130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "57528:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1824,
																"src": "57519:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57519:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3134,
															"name": "_tradeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2423,
															"src": "57546:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3127,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "57506:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57515:3:0",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1809,
														"src": "57506:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57506:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57486:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 3137,
																"name": "_tokensAtSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2440,
																"src": "57571:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																	"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																}
															},
															"id": 3139,
															"indexExpression": {
																"id": 3138,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3041,
																"src": "57585:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "57571:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																"typeString": "struct Marketplace.SelledNFT storage ref"
															}
														},
														"id": 3140,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57595:6:0",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2407,
														"src": "57571:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3141,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "57605:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 3142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "57605:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "57571:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3148,
												"nodeType": "IfStatement",
												"src": "57567:60:0",
												"trueBody": {
													"expression": {
														"id": 3146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3144,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3126,
															"src": "57614:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 3145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57626:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "57614:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3147,
													"nodeType": "ExpressionStatement",
													"src": "57614:13:0"
												}
											},
											{
												"assignments": [
													3150
												],
												"declarations": [
													{
														"constant": false,
														"id": 3150,
														"mutability": "mutable",
														"name": "amountWithFee",
														"nameLocation": "57646:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 3239,
														"src": "57638:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3156,
												"initialValue": {
													"arguments": [
														{
															"id": 3153,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3119,
															"src": "57675:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3154,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3126,
															"src": "57683:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3151,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "57662:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57671:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1794,
														"src": "57662:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57662:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57638:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3162,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "57754:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57758:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "57754:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "57746:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3160,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "57746:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57746:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 3167,
																			"name": "_tokensAtSale",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2440,
																			"src": "57788:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																			}
																		},
																		"id": 3169,
																		"indexExpression": {
																			"id": 3168,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3041,
																			"src": "57802:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "57788:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref"
																		}
																	},
																	"id": 3170,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57812:6:0",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2407,
																	"src": "57788:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "57780:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3165,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "57780:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57780:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3172,
															"name": "amountWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3150,
															"src": "57834:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3157,
															"name": "payToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3070,
															"src": "57706:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$517",
																"typeString": "contract IERC20"
															}
														},
														"id": 3159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57715:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 218,
														"src": "57706:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$517_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 3173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57706:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3174,
												"nodeType": "ExpressionStatement",
												"src": "57706:152:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3175,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3126,
														"src": "57873:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57885:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57873:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3194,
												"nodeType": "IfStatement",
												"src": "57869:192:0",
												"trueBody": {
													"id": 3193,
													"nodeType": "Block",
													"src": "57888:173:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 3183,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "57955:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "57959:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "57955:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "57947:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3181,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "57947:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "57947:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 3188,
																				"name": "_feeReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2448,
																				"src": "57993:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "57985:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3186,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "57985:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "57985:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3190,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3126,
																		"src": "58025:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3178,
																		"name": "payToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3070,
																		"src": "57903:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$517",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 3180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57912:16:0",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 218,
																	"src": "57903:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$517_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$517_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 3191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57903:146:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3192,
															"nodeType": "ExpressionStatement",
															"src": "57903:146:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3200,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "58102:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3550",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3550",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "58094:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3198,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "58094:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58094:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3202,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58109:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58113:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58109:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3204,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3041,
															"src": "58121:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3195,
															"name": "marketNft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2417,
															"src": "58071:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58081:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "58071:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58071:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3206,
												"nodeType": "ExpressionStatement",
												"src": "58071:59:0"
											},
											{
												"expression": {
													"id": 3211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3207,
															"name": "_isTokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "58141:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3209,
														"indexExpression": {
															"id": 3208,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3041,
															"src": "58157:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "58141:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58169:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "58141:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3212,
												"nodeType": "ExpressionStatement",
												"src": "58141:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3214,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3041,
															"src": "58201:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3213,
														"name": "_clearSellToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2764,
														"src": "58185:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58185:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3216,
												"nodeType": "ExpressionStatement",
												"src": "58185:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3218,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3041,
															"src": "58239:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3217,
														"name": "__delTokenForSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2537,
														"src": "58221:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58221:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3220,
												"nodeType": "ExpressionStatement",
												"src": "58221:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 3222,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "58279:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 3224,
																"indexExpression": {
																	"id": 3223,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3041,
																	"src": "58293:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "58279:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 3225,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58303:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2407,
															"src": "58279:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3226,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58311:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58315:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58311:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3228,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3041,
															"src": "58323:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 3229,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "58333:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 3231,
																"indexExpression": {
																	"id": 3230,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3041,
																	"src": "58347:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "58333:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 3232,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58357:5:0",
															"memberName": "erc20",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2411,
															"src": "58333:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 3233,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "58364:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 3235,
																"indexExpression": {
																	"id": 3234,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3041,
																	"src": "58378:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "58364:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 3236,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58388:5:0",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2409,
															"src": "58364:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3221,
														"name": "BuyWithERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2365,
														"src": "58266:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,address,uint256)"
														}
													},
													"id": 3237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58266:128:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3238,
												"nodeType": "EmitStatement",
												"src": "58261:133:0"
											}
										]
									},
									"functionSelector": "047a5d43",
									"id": 3240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3044,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3043,
												"name": "whenNotPaused",
												"nameLocations": [
													"56744:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2288,
												"src": "56744:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56744:13:0"
										}
									],
									"name": "buyNFTbyERC20",
									"nameLocation": "56690:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "56709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3240,
												"src": "56704:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "56704:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56703:15:0"
									},
									"returnParameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56763:0:0"
									},
									"scope": 3550,
									"src": "56681:1721:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3381,
										"nodeType": "Block",
										"src": "58507:1137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3248,
																	"name": "_isTokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "58563:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 3250,
																"indexExpression": {
																	"id": 3249,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3242,
																	"src": "58579:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "58563:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 3251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "58592:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "58563:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204e4654206973206e6f7420666f722073616c65",
															"id": 3253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58598:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															},
															"value": "This NFT is not for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45d3a2eec4cc55ad5f23e97640a6580300aed9090d9eb24eabb177565fc5e67b",
																"typeString": "literal_string \"This NFT is not for sale\""
															}
														],
														"id": 3247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58555:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58555:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3255,
												"nodeType": "ExpressionStatement",
												"src": "58555:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3257,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "58670:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "58674:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "58670:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3259,
																		"name": "_tokensAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2440,
																		"src": "58683:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																		}
																	},
																	"id": 3261,
																	"indexExpression": {
																		"id": 3260,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3242,
																		"src": "58697:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "58683:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																		"typeString": "struct Marketplace.SelledNFT storage ref"
																	}
																},
																"id": 3262,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "58707:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2409,
																"src": "58683:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "58670:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f74207061696420656e6f75676820666f722074686973206974656d",
															"id": 3264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58714:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a",
																"typeString": "literal_string \"You have not paid enough for this item\""
															},
															"value": "You have not paid enough for this item"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6ca535932f6b7bc37a94126e69abf19c459417134ba5f5df007cd0eab1d425a",
																"typeString": "literal_string \"You have not paid enough for this item\""
															}
														],
														"id": 3256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58662:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58662:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3266,
												"nodeType": "ExpressionStatement",
												"src": "58662:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3268,
																		"name": "_tokensAtSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2440,
																		"src": "58818:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																		}
																	},
																	"id": 3270,
																	"indexExpression": {
																		"id": 3269,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3242,
																		"src": "58832:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "58818:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																		"typeString": "struct Marketplace.SelledNFT storage ref"
																	}
																},
																"id": 3271,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "58842:5:0",
																"memberName": "erc20",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2411,
																"src": "58818:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "58859:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "58851:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3272,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "58851:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58851:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "58818:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e2073656c6c6564206279204552433230",
															"id": 3277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58863:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c",
																"typeString": "literal_string \"This token selled by ERC20\""
															},
															"value": "This token selled by ERC20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1eb2967433af657f250f55a53a9e7e25fac18278812372f83d7ea22b815139c",
																"typeString": "literal_string \"This token selled by ERC20\""
															}
														],
														"id": 3267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58810:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58810:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3279,
												"nodeType": "ExpressionStatement",
												"src": "58810:82:0"
											},
											{
												"assignments": [
													3281
												],
												"declarations": [
													{
														"constant": false,
														"id": 3281,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "58921:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3381,
														"src": "58913:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58913:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3284,
												"initialValue": {
													"expression": {
														"id": 3282,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "58930:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "58934:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "58930:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58913:26:0"
											},
											{
												"assignments": [
													3286
												],
												"declarations": [
													{
														"constant": false,
														"id": 3286,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "58958:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3381,
														"src": "58950:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3285,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3296,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3291,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3281,
																	"src": "58996:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 3292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "59004:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"expression": {
																	"id": 3289,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "58983:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 3290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "58992:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1824,
																"src": "58983:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58983:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3294,
															"name": "_tradeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2423,
															"src": "59010:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3287,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "58970:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58979:3:0",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1809,
														"src": "58970:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58970:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58950:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 3297,
																"name": "_tokensAtSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2440,
																"src": "59035:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																	"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																}
															},
															"id": 3299,
															"indexExpression": {
																"id": 3298,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3242,
																"src": "59049:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "59035:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																"typeString": "struct Marketplace.SelledNFT storage ref"
															}
														},
														"id": 3300,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59059:6:0",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2407,
														"src": "59035:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3301,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "59069:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 3302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "59069:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "59035:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3308,
												"nodeType": "IfStatement",
												"src": "59031:60:0",
												"trueBody": {
													"expression": {
														"id": 3306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3304,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3286,
															"src": "59078:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 3305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59090:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "59078:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3307,
													"nodeType": "ExpressionStatement",
													"src": "59078:13:0"
												}
											},
											{
												"assignments": [
													3310
												],
												"declarations": [
													{
														"constant": false,
														"id": 3310,
														"mutability": "mutable",
														"name": "amountWithFee",
														"nameLocation": "59110:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 3381,
														"src": "59102:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3309,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "59102:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3316,
												"initialValue": {
													"arguments": [
														{
															"id": 3313,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3281,
															"src": "59139:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3314,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3286,
															"src": "59147:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3311,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "59126:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1915_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 3312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59135:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1794,
														"src": "59126:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59126:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59102:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3325,
															"name": "amountWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3310,
															"src": "59219:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 3319,
																			"name": "_tokensAtSale",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2440,
																			"src": "59178:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																			}
																		},
																		"id": 3321,
																		"indexExpression": {
																			"id": 3320,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3242,
																			"src": "59192:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "59178:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																			"typeString": "struct Marketplace.SelledNFT storage ref"
																		}
																	},
																	"id": 3322,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "59202:6:0",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2407,
																	"src": "59178:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "59170:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3317,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "59170:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59170:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59210:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "59170:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59170:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3327,
												"nodeType": "ExpressionStatement",
												"src": "59170:63:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3328,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3286,
														"src": "59248:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59260:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "59248:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3340,
												"nodeType": "IfStatement",
												"src": "59244:87:0",
												"trueBody": {
													"id": 3339,
													"nodeType": "Block",
													"src": "59263:68:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3336,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3286,
																		"src": "59309:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3333,
																				"name": "_feeReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2448,
																				"src": "59286:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "59278:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 3331,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "59278:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "59278:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 3335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "59300:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "59278:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 3337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59278:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3338,
															"nodeType": "ExpressionStatement",
															"src": "59278:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3346,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "59382:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3550",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3550",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "59374:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3344,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "59374:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59374:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3348,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "59389:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59393:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "59389:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3350,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3242,
															"src": "59401:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3341,
															"name": "marketNft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2417,
															"src": "59351:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59361:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "59351:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59351:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3352,
												"nodeType": "ExpressionStatement",
												"src": "59351:59:0"
											},
											{
												"expression": {
													"id": 3357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3353,
															"name": "_isTokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "59421:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3355,
														"indexExpression": {
															"id": 3354,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3242,
															"src": "59437:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "59421:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59449:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "59421:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3358,
												"nodeType": "ExpressionStatement",
												"src": "59421:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 3360,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "59476:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 3362,
																"indexExpression": {
																	"id": 3361,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3242,
																	"src": "59490:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "59476:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 3363,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59500:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2407,
															"src": "59476:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3364,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "59508:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59512:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "59508:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3366,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3242,
															"src": "59520:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 3367,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "59530:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 3369,
																"indexExpression": {
																	"id": 3368,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3242,
																	"src": "59544:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "59530:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 3370,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59554:5:0",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2409,
															"src": "59530:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3359,
														"name": "Buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "59472:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 3371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59472:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3372,
												"nodeType": "EmitStatement",
												"src": "59467:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3374,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3242,
															"src": "59589:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3373,
														"name": "_clearSellToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2764,
														"src": "59573:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59573:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3376,
												"nodeType": "ExpressionStatement",
												"src": "59573:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3378,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3242,
															"src": "59627:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3377,
														"name": "__delTokenForSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2537,
														"src": "59609:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59609:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3380,
												"nodeType": "ExpressionStatement",
												"src": "59609:27:0"
											}
										]
									},
									"functionSelector": "51ed8288",
									"id": 3382,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3245,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3244,
												"name": "whenNotPaused",
												"nameLocations": [
													"58488:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2288,
												"src": "58488:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "58488:13:0"
										}
									],
									"name": "buyNFT",
									"nameLocation": "58421:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3242,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "58436:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3382,
												"src": "58428:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58427:18:0"
									},
									"returnParameters": {
										"id": 3246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58507:0:0"
									},
									"scope": 3550,
									"src": "58412:1232:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3488,
										"nodeType": "Block",
										"src": "59796:916:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3396,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3384,
																		"src": "59847:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3394,
																		"name": "marketNft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2417,
																		"src": "59829:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$638",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 3395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "59839:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 571,
																	"src": "59829:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 3397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59829:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3398,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "59860:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "59864:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "59860:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "59829:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 3401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59885:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 3393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "59807:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59807:116:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3403,
												"nodeType": "ExpressionStatement",
												"src": "59807:116:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3405,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3386,
																"src": "59942:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "59950:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "59942:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
															"id": 3408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59953:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															},
															"value": "Price must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															}
														],
														"id": 3404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "59934:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59934:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3410,
												"nodeType": "ExpressionStatement",
												"src": "59934:53:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3411,
														"name": "_erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3388,
														"src": "60002:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "60020:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "60012:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3412,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "60012:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60012:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "60002:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3427,
												"nodeType": "IfStatement",
												"src": "59998:172:0",
												"trueBody": {
													"id": 3426,
													"nodeType": "Block",
													"src": "60024:146:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3419,
																					"name": "_erc20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3388,
																					"src": "60094:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3418,
																				"name": "isAllowedERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2651,
																				"src": "60079:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																					"typeString": "function (address) view returns (bool)"
																				}
																			},
																			"id": 3420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "60079:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 3421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "60105:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "60079:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54686973204552433230206e6f7420616c6c6f77656420617320612074726164696e672063757272656e6379",
																		"id": 3423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "60111:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1",
																			"typeString": "literal_string \"This ERC20 not allowed as a trading currency\""
																		},
																		"value": "This ERC20 not allowed as a trading currency"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_903bda459d089b7dca7758777c4e60df4e083b9e1b3572aa1cc4495f4db499d1",
																			"typeString": "literal_string \"This ERC20 not allowed as a trading currency\""
																		}
																	],
																	"id": 3417,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "60071:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60071:87:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3425,
															"nodeType": "ExpressionStatement",
															"src": "60071:87:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3428,
															"name": "_isTokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "60182:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3430,
														"indexExpression": {
															"id": 3429,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3384,
															"src": "60198:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "60182:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60210:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "60182:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3433,
												"nodeType": "ExpressionStatement",
												"src": "60182:32:0"
											},
											{
												"expression": {
													"id": 3446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3434,
															"name": "_tokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2440,
															"src": "60225:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
															}
														},
														"id": 3436,
														"indexExpression": {
															"id": 3435,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3384,
															"src": "60239:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "60225:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
															"typeString": "struct Marketplace.SelledNFT storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3438,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3384,
																"src": "60275:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 3439,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "60298:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "60302:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "60298:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3441,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3386,
																"src": "60323:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3442,
																"name": "_erc20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3388,
																"src": "60343:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 3443,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "60364:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "60370:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "60364:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3437,
															"name": "SelledNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "60251:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_SelledNFT_$2414_storage_ptr_$",
																"typeString": "type(struct Marketplace.SelledNFT storage pointer)"
															}
														},
														"id": 3445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60251:139:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SelledNFT_$2414_memory_ptr",
															"typeString": "struct Marketplace.SelledNFT memory"
														}
													},
													"src": "60225:165:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
														"typeString": "struct Marketplace.SelledNFT storage ref"
													}
												},
												"id": 3447,
												"nodeType": "ExpressionStatement",
												"src": "60225:165:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3451,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "60424:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60428:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "60424:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3455,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "60444:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3550",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3550",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "60436:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3453,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "60436:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60436:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3457,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3384,
															"src": "60451:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3448,
															"name": "marketNft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2417,
															"src": "60401:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60411:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "60401:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60401:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3459,
												"nodeType": "ExpressionStatement",
												"src": "60401:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3461,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3384,
															"src": "60488:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3460,
														"name": "__addTokenToSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2460,
														"src": "60471:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60471:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3463,
												"nodeType": "ExpressionStatement",
												"src": "60471:26:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3464,
														"name": "_erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3388,
														"src": "60514:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "60532:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "60524:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "60524:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60524:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "60514:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3486,
													"nodeType": "Block",
													"src": "60632:73:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3480,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "60665:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "60669:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "60665:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3482,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3384,
																		"src": "60677:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3483,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3386,
																		"src": "60687:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3479,
																	"name": "PutUpForSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "60652:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 3484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60652:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3485,
															"nodeType": "EmitStatement",
															"src": "60647:46:0"
														}
													]
												},
												"id": 3487,
												"nodeType": "IfStatement",
												"src": "60510:195:0",
												"trueBody": {
													"id": 3478,
													"nodeType": "Block",
													"src": "60536:90:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3471,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "60578:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "60582:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "60578:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3473,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3384,
																		"src": "60590:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3474,
																		"name": "_erc20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3388,
																		"src": "60600:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3475,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3386,
																		"src": "60608:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3470,
																	"name": "PutUpForSaleWithERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2383,
																	"src": "60556:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,address,uint256)"
																	}
																},
																"id": 3476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60556:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3477,
															"nodeType": "EmitStatement",
															"src": "60551:63:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "7c237eea",
									"id": 3489,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3391,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3390,
												"name": "whenNotPaused",
												"nameLocations": [
													"59777:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2288,
												"src": "59777:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "59777:13:0"
										}
									],
									"name": "sellNFT",
									"nameLocation": "59661:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3384,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "59687:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "59679:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3386,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "59714:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "59706:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3388,
												"mutability": "mutable",
												"name": "_erc20",
												"nameLocation": "59738:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "59730:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59730:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59668:83:0"
									},
									"returnParameters": {
										"id": 3392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59796:0:0"
									},
									"scope": 3550,
									"src": "59652:1060:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3548,
										"nodeType": "Block",
										"src": "60764:452:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3494,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "60778:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60782:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "60778:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3496,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "60792:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 3497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60792:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "60778:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3511,
												"nodeType": "IfStatement",
												"src": "60775:130:0",
												"trueBody": {
													"id": 3510,
													"nodeType": "Block",
													"src": "60801:104:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 3506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 3500,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "60824:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "60828:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "60824:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 3502,
																					"name": "_tokensAtSale",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2440,
																					"src": "60838:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																						"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																					}
																				},
																				"id": 3504,
																				"indexExpression": {
																					"id": 3503,
																					"name": "_tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3491,
																					"src": "60852:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "60838:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																					"typeString": "struct Marketplace.SelledNFT storage ref"
																				}
																			},
																			"id": 3505,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "60862:6:0",
																			"memberName": "seller",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2407,
																			"src": "60838:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "60824:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54686973206973206e6f7420796f7572204e4654",
																		"id": 3507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "60870:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3",
																			"typeString": "literal_string \"This is not your NFT\""
																		},
																		"value": "This is not your NFT"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_84468190e50b5fc4c89f84bfa4bd0885de021895d2917537a90af74ac153fbe3",
																			"typeString": "literal_string \"This is not your NFT\""
																		}
																	],
																	"id": 3499,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "60816:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60816:77:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3509,
															"nodeType": "ExpressionStatement",
															"src": "60816:77:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3517,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "60948:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3550",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3550",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "60940:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3515,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "60940:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60940:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 3519,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "60955:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 3521,
																"indexExpression": {
																	"id": 3520,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3491,
																	"src": "60969:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "60955:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 3522,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60979:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2407,
															"src": "60955:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3523,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3491,
															"src": "60987:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3512,
															"name": "marketNft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2417,
															"src": "60917:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$638",
																"typeString": "contract IERC721"
															}
														},
														"id": 3514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60927:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "60917:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60917:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3525,
												"nodeType": "ExpressionStatement",
												"src": "60917:79:0"
											},
											{
												"expression": {
													"id": 3530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3526,
															"name": "_isTokensAtSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "61009:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3528,
														"indexExpression": {
															"id": 3527,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3491,
															"src": "61025:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "61009:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "61037:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "61009:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3531,
												"nodeType": "ExpressionStatement",
												"src": "61009:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3533,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3491,
															"src": "61077:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3532,
														"name": "_clearSellToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2764,
														"src": "61061:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61061:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3535,
												"nodeType": "ExpressionStatement",
												"src": "61061:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3537,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3491,
															"src": "61115:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3536,
														"name": "__delTokenForSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2537,
														"src": "61097:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61097:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3539,
												"nodeType": "ExpressionStatement",
												"src": "61097:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 3541,
																	"name": "_tokensAtSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "61167:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SelledNFT_$2414_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.SelledNFT storage ref)"
																	}
																},
																"id": 3543,
																"indexExpression": {
																	"id": 3542,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3491,
																	"src": "61181:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "61167:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SelledNFT_$2414_storage",
																	"typeString": "struct Marketplace.SelledNFT storage ref"
																}
															},
															"id": 3544,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "61191:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2407,
															"src": "61167:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3545,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3491,
															"src": "61199:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3540,
														"name": "WithdrawFromSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2389,
														"src": "61150:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61150:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3547,
												"nodeType": "EmitStatement",
												"src": "61145:63:0"
											}
										]
									},
									"functionSelector": "512ddcf9",
									"id": 3549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deSellNFT",
									"nameLocation": "60729:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3491,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "60747:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3549,
												"src": "60739:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60738:18:0"
									},
									"returnParameters": {
										"id": 3493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60764:0:0"
									},
									"scope": 3550,
									"src": "60720:496:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3551,
							"src": "50386:10833:0",
							"usedErrors": []
						}
					],
					"src": "33:61188:0"
				},
				"id": 0
			}
		}
	}
}